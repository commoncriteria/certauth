<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../transforms/pp2html.xsl"?>

<PP xmlns="https://niap-ccevs.org/cc/v1" name="Protection Profile for Certification Authorities"
    xmlns:h="http://www.w3.org/1999/xhtml" boilerplate="yes">

  <!-- <inline-comment color='green'> Hello World QQQQ </inline-comment> -->
  <!-- <inline-comment color='blue' linebreak='yes'> Hello World QQQQ </inline-comment> -->
  <PPReference>
    <ReferenceTable>
      <PPTitle>Protection Profile for Certification Authorities</PPTitle>
      <PPVersion>2.1</PPVersion>
      <PPAuthor>National Information Assurance Partnership</PPAuthor>
      <PPPubDate>2017-12-01</PPPubDate>
      <Keywords>Certification Authority</Keywords>
    </ReferenceTable>
  </PPReference>

  <RevisionHistory>
    <entry>
      <version>1.0</version>
      <date>2014-05-16</date>
      <subject>Initial draft</subject>
    </entry>
    <entry>
      <version>1.1</version>
      <date>2016-07-07</date>
      <subject>Formatting updates and changes based on TC feedback</subject>
    </entry>
    <entry>
      <version>1.2</version>
      <date>2016-10-26</date>
      <subject>Updates based on additional TC feedback and internal review</subject>
    </entry>
    <entry>
      <version>2.0</version>
      <date>2016-10-28</date>
      <subject>Second draft</subject>
    </entry>
    <entry>
      <version>2.1</version>
      <date>2017-12-01</date>
      <subject>Updates based on first use in evaluation</subject>
    </entry>
    <entry>
      <version>2.1x</version>
      <date>2020-07-10</date>
      <subject>Converted to XML</subject>
    </entry>
  </RevisionHistory>
	
  <pp-preferences>
	<pp-pref name="display-audit-with-sfrs">0</pp-pref>
	<pp-pref name="audit-events-in-sfrs">1</pp-pref>
  </pp-preferences>

  <chapter title="Introduction" id="int">
    <section title="Overview" id="ppoverview">
      	Certification Authorities (CAs), and the infrastructure they support, form the basis for one of the primary
     	 mechanisms for providing strong assurance of identity in online transactions. The widely placed trust in
	CAs is at the heart of security mechanisms used to protect business and financial transactions online.
	Notably, protocols using Transport Layer Security (TLS) rely on certificates issued by CAs to identify and
	authenticate servers and clients in web transactions. Governments around the world rely on CAs to
	identify parties involved in transactions with them. <h:br/><h:br/>

	However, historical high-profile security breaches at major CAs trusted by widely used operating systems
	and browsers have highlighted both the critical role CAs play in securing electronic transactions, as well
	as the need to strongly protect them from malicious attacks. Analyses have revealed that these security
	breaches were often the result of insufficient security controls being in place on the computer systems
	and networks at these CAs, and were sometimes exacerbated by weak record keeping. Third-party
	auditing programs, whose role it was to verify that proper security controls were in place, were not
	sufficient to identify these lapses in security.<h:br/><h:br/>
	    
	This Protection Profile (PP) describing security requirements for a Certification Authority is intended to
	provide a minimal, baseline set of requirements that are targeted at mitigating well defined and described
	threats. These requirements support CA operations performed in accordance with the National Institute
	of Standards and Technologies (NIST) Interagency or Internal Report (IR) 7924 (Second Draft), Reference
	Certificate Policy, May 2014, referred to as the “NIST IR.” <h:br/><h:br/>

	The following sections provide both Common Criteria and technology terms used in this PP.
    </section>

    <tech-terms>
	<term abbr='AES' full="Advanced Encryption Standard"/>
      	<term abbr='API' full="Application Programming Interface"/>
      	<term full="Administrator">
		The Administrator is responsible for management activities, including configuration of
		the CA and its security functions.
      	</term>
      	<term full="Authorized Organizational Representative" abbr="AOR">
		An optional privileged user role which is delegated authority by the Certification
		Authority Staff or RA Staff to manage a restricted set of certificates associated to
		devices belonging to a particular organization
      	</term>
	<term abbr='CBC' full="Cipher Block Chaining"/>
    	<term abbr='CC' full="Common Criteria"/>
	<term abbr='CCM' full="Counter with CBC-Message Authentication Code"/>
	<term abbr='CCMP' full="CCM Protocol"/>
	<term abbr='CCTL' full="Common Criteria Test Lab"/>
      	<term full="Certificate Profile">
		A set of configuration parameters that defines everything associated with a type of
		certificate, in particular the contents (fields and extensions) of the generated
		certificate.
      	</term>
      	<term full="Certification Authority" abbr="CA">
		The set of hardware, software, firmware, or some combination thereof, that issues,
		revokes, and manages public key certificates and certificate status information.
      	</term>
      	<term abbr='CESG' full="Communications-Electronics Security Group"/>
      	<term abbr='CMC' full="Certificate Management over CMS">
		Certificate Management over CMS. A standard certificate enrollment protocol.
	</term>
      	<term abbr='CMS' full="Cryptographic Message Syntax"/>
      	<term abbr='CN' full="Common Names"/>
      	<term full="Compromise">
		The unauthorized disclosure, modification, substitution or use of sensitive data
		(including plaintext cryptographic keys and other CSPs).
      	</term>
      	<term full="Confidentiality">
		The property that sensitive information is not disclosed to unauthorized individuals,
		entities or processes.
      	</term>
      	<term abbr='CRL' full="Certificate Revocation List"/>
      	<term abbr='CSA' full="Computer Security Act"/>
	<term abbr='CSS' full="Certificate Status Server"/>
      	<term full="Critical Security Parameter" abbr="CSP">
		Security-related information (e.g., secret and private cryptographic keys,
		authentication data such as passwords and PINs) appearing in plaintext or otherwise
		unprotected form and whose disclosure or modification can compromise the security
		of a CA or the security of the information protected by the CA.
      	</term>
      	<term full="Cryptographic key">
		A parameter used in conjunction with a cryptographic algorithm that determines: <h:br/>	
		<h:ul>
			<h:li>the transformation of plaintext data into ciphertext data,</h:li>
			<h:li>the transformation of ciphertext data into plaintext data,</h:li>
			<h:li>a digital signature computed from data,</h:li>
			<h:li>a keyed hash computed from data,</h:li>
			<h:li>the verification of a digital signature computed from data,</h:li>
			<h:li>an authentication code computed from data, or an exchange agreement of a shared secret.</h:li>
		</h:ul>
      	</term>
      	<term abbr="DAR" full="Data At Rest"/>
      	<term abbr='DEK' full="Data Encryption Key">
		A key used to encrypt data-at-rest.
	</term>
      	<term abbr='DES' full="Data Encryption Standard"/>
      	<term full="Digital Signature">
		A non-forgeable transformation of data that allows proof of the source (with
		nonrepudiation) and verification of the integrity of that data.
	</term>
      	<term abbr='DH' full="Diffie-Hellman"/>   
      	<term abbr='DHE' full="Diffie-Hellman Key Exchange"/>
      	<term abbr='DKM' full="Derived Keying Material"/>
      	<term abbr='DNS' full="Domain Name System"/>
      	<term abbr='DRBG' full="Deterministic Random Bit Generator"/>
      	<term abbr='DSA' full="Digital Signature Algorithm"/>
      	<term abbr='DSS' full="Digital Signature Standard"/>
      	<term abbr='DT' full="Date/Time Vector"/>
      	<term abbr='DTLS' full="Datagram Transport Layer Security"/>
      	<term abbr='EAP' full="Extensible Authentication Protocol"/>
      	<term abbr='ECC' full="Elliptic Curve Cryptography"/>
      	<term abbr='ECDHE' full="Elliptic Curve Diffie-Hellman Ephemeral"/>
      	<term abbr='ECDSA' full="Elliptic Curve Digital Signature Algorithm"/>
      	<term abbr='EEPROM' full="Electrically Erasable Programmable Read-Only Memory"/>
      	<term full="Encrypted key">
		A cryptographic key that has been encrypted with a key encrypting key, a PIN or a
		password in order to disguise the value of the underlying plaintext key.
	</term>
      	<term full="Error detection code" abbr="EDC">
		A code computed from data and comprised of redundant bits of information designed
		to detect, but not correct, unintentional changes in the data.
	</term>
      	<term abbr='ESP' full="Encapsulating Security Payload (IPsec)"/>
      	<term abbr='EST' full="Enrollment over Secure Transport"/>
      	<term abbr='FFC' full="Finite-Field Cryptography"/>
      	<term abbr='FIPS' full="Federal Information Processing Standards"/>
      	<term abbr='GCM' full="Galois/Counter Mode"/>
      	<term abbr='HMAC' full="Hash-based Message Authentication Code"/>
      	<term abbr='HSM' full="Hardware Security Module"/>
      	<term abbr='HTTP' full="Hypertext Transfer Protocol"/>
      	<term abbr='HTTPS' full="Hypertext Transfer Protocol Secure"/>
      	<term abbr='I and A' full="Identification and Authentication"/>
      	<term abbr='IETF' full="Internet Engineering Task Force"/>
      	<term abbr='IKE' full="Internet key Exchange"/>
      	<term full="Integrity">
		The property that sensitive data has not been modified or deleted in an unauthorized
		and undetected manner.
	</term>
      	<term abbr='IP' full="Internet Protocol"/>
      	<term abbr='IPsec' full="Internet Protocol Security"/>
      	<term abbr='ISO' full="International Organization for Standardization"/>
      	<term abbr='IT' full="Information Technology"/>
      	<term abbr='ITSEF' full="Information Technology Security Evaluation Facility"/>
      	<term abbr='IUT' full="Implementation Under Test"/>
      	<term abbr='IV' full="Initialization Vector"/>
      	<term abbr='KAT' full="Known Answer Tests"/>
      	<term abbr='KDF' full="Key Derivation Function"/>
      	<term abbr='KEK' full="Key Encryption Key">
		A key used to encrypt other keys, such as DEKs, or storage that contains keys.
	</term>
      	<term full="Key sharing">
		A multi-party computation (MPC) mechanism that allows two or more parties, each
		with key components, to jointly produce a plaintext key without revealing any of the
		key components.
	</term>
      	<term abbr='KW' full="Key Wrap"/>
      	<term abbr='KWP' full="Key Wrapping with Padding"/>
      	<term abbr='MAC' full="Message Authentication Code"/>
      	<term abbr='MODP' full="Modular Exponential"/>
      	<term abbr='NAT' full="Network Address Translation"/>
      	<term abbr='NIAP' full="National Information Assurance Partnership"/>
      	<term abbr='NIST' full="National Institute of Standards and Technology"/>
      	<term abbr='NPE' full="Non-person Entity"/>
      	<term abbr='NTP' full="Network Time Protocol"/>
      	<term abbr='OCSP' full="Online Certificate Status Protocol"/>
      	<term abbr='OID' full="Object Identifier"/>
      	<term abbr='OMB' full="Office of Management and Budget"/>
      	<term abbr='PGP' full="Pretty Good Privacy"/>
      	<term abbr='PKI' full="Public Key Infrastructure"/>
      	<term abbr='PKV' full="Public Key Verification"/>
      	<term abbr='PP' full="Protection Profile"/>
      	<term full="Private key">
		A cryptographic key used with a public key cryptographic algorithm, uniquely
		associated with an entity, and not made public.
	</term>
      	<term full="Privileged user">
		An individual with access and login privileges on the CA.
	</term>
      	<term full="Public key">
		A cryptographic key used with a public key cryptographic algorithm, uniquely
		associated with an entity, and which may be made public. (Public keys are not
		considered CSPs.)
	</term>
      	<term full="Public key certificate">
		A set of data that unambiguously identifies an entity, contains the entity's public key,
		is digitally signed by a trusted party, and binds the public key to the entity.
	</term>
      	<term full="Public key (asymmetric) cryptographic algorithm">
		A cryptographic algorithm that uses two related keys, a public key and a private key.
		The two keys have the property that, given the public key, it is computationally
		infeasible to derive the private key.
	</term>
      	<term abbr='RAM' full="Random Access Memory"/>
      	<term abbr='RBG' full="Random Bit Generator"/>
      	<term abbr='rDSA' full="RSA Digital Signature Algorithm"/>
      	<term full="Registration Authority" abbr="RA">
		The set of hardware, software, firmware, or some combination thereof that is used to
		validate the identity of a subscriber before instructing the CA to manipulate a
		certificate on the subscriber’s behalf.
	</term>
      	<term abbr='RFC' full="Request for Comment"/>
      	<term abbr='RNG' full="Random Number Generator"/>
      	<term abbr='RNGVS' full="Random Number Generator Validation System"/>
      	<term full="Root Encryption Key" abbr='REK'>
		A key tied to hardware that is used to encrypt other keys such as KEKs.
	</term>
      	<term abbr='RSA' full="Rivest Shamir Adleman"/>
      	<term abbr='SA' full="Security Association (IPsec)"/>
      	<term abbr='SAN' full="Subject Alternative Name"/>
      	<term abbr='SAR' full="Security Assurance Requirement"/>
      	<term full="Secret key">
		A cryptographic key used with a secret key cryptographic algorithm, uniquely
		associated with one or more entities, and which shall not be made public. The use of
		the term "secret" in this context does not imply a classification level rather the term
		implies the need to protect the key from disclosure or substitution.
	</term>
      	<term full="Secret key (symmetric) cryptographic algorithm">
		A cryptographic algorithm that uses a single, secret key for both encryption and
		decryption.
	</term>
      	<term abbr='SFR' full="Security Functional Requirement"/>
      	<term abbr='SHA' full="Secure Hash Algorithm"/>
      	<term full="Shared secret">
		A token used by the CMC protocol to help provide identity proofing. 
	</term>
      	<term abbr='S/MIME' full="Secure/Multi-purpose Internet Mail Extensions"/>
      	<term abbr='SIP' full="Session Initiation Protocol"/>
      	<term abbr='SNMP' full="Simple Network Management Protocol"/>
      	<term abbr='SSH' full="Secure Shell"/>
      	<term abbr='SSL' full="Secure Sockets Layer"/>
      	<term abbr='ST' full="Security Target"/>
      	<term full="Subscriber">
		A human or machine entity that is bound to one or more certificates maintained by
		the CA.
	</term>
      	<term abbr='SWID' full="Software Identification"/>
      	<term abbr='TLS' full="Transport Layer Security"/>
      	<term abbr='TOE' full="Target of Evaluation"/>
      	<term abbr='TPM' full="Trusted Platform Module"/>
      	<term full="Trust Anchor Database">
		A list of trusted root Certification Authority certificates.
	</term>
      	<term abbr='TSF' full="TOE Security Function"/>
      	<term abbr='TSS' full="TOE Summary Specification"/>
      	<term abbr='URI' full="Uniform Resource Identifier"/>
      	<term abbr='URL' full="Uniform Resource Locator"/>
      	<term abbr='USB' full="Universal Serial Bus"/>
      	<term abbr='XCCDF' full="eXtensible Configuration Checklist Description Format"/>
      	<term abbr='XOR' full="Exclusive Or"/>
    </tech-terms> 
	  
    <section title="Compliant Targets of Evaluation" id="TOEdescription">
	    A CA system is an entity that issues and manages public-key certificates. The CA is the primary component
	of a public key infrastructure (PKI), which consists of programs, data formats, procedures, communication
	protocols, security policies, and public key cryptographic mechanisms working together to enable people
	in various locations to establish trust through secure communications. To achieve this goal, a PKI may
	provide some or all of the following security management services:<h:br/>
	    <h:ul>
		    <h:li>Key generation/storage</h:li>
		    <h:li>Certificate generation, modification, re-key, renewal, and distribution</h:li>
		    <h:li>Certificate revocation list (CRL) generation and distribution</h:li>
		    <h:li>Key escrow and recovery</h:li>
		    <h:li>Directory management of certificate related items</h:li>
		    <h:li>Certificate token initialization/programming/management</h:li>
		    <h:li>System management functions (e.g., security audit, configuration management, archive)</h:li>
	    </h:ul>
	    A CA performs a number of certificate management functions besides certificate issuance:<h:br/>
	    <h:ul>
		    <h:li><h:b>Re-issuance:</h:b>A CA handles re-issuance of certificates when they expire, 
			    since certificates have a finite validity period. Reissuance may be renewal of the
			    current public key; rekey with a new public key; or modification to other data in 
			    the public key certificate.</h:li>
		    <h:li><h:b>Revocation:</h:b> The CA is also responsible for indicating, when notified 
			    via a subscriber or privileged user, that a certificate should no longer be used 
			    or relied upon; this is referred to as revocation. For example, a certificate 
			    needs to be revoked if an individuals’ private key is compromised or if the CA 
			    issued the certificate to the wrong person. Identifiers of revoked certificates
			    are stored on an electronic list called a certificate revocation list (CRL). The
			    CRL is digitally signed by the CA and published to a repository accessible by 
			    the relying parties. The CRL is used to compare against certificates to ensure a
			    certificate is not invalid when used. Alternatively, a CA can provide a 
			    Certificate Status Service (CSS) that provides revocation status responses to
			    subscribers and relying parties. The CSS’ revocation status information may be
			    based on certificate history information from the CA, a CRL from the CA, or a
			    CRL retrieved from a repository. A CA must be able to provide revocation status,
			    but either approach is acceptable. </h:li>
		    <h:li><h:b>Distribution:</h:b>The CA handles the publishing of certificates and CRLs
			    that it issues to a repository. The repository enables subscribers and relying
			    parties to obtain subscriber certificates and CRLs to perform functions such as 
			    encrypting emails and data to recipients or verifying signatures on transactions.
			    Typically, CRL location is advertised in the certificate itself as an HTTP pointer
			    to allow the relying parties to obtain the CRL.</h:li>
		    <h:li><h:b>Storage:</h:b> The CA keeps a history of a subscriber’s previously issued and
			    revoked certificates.</h:li>
	    </h:ul>
	There are a number of optional functions that a CA may perform. For example, a CA may issue CRLs 
	or may provide a CSS that responds to certificate status requests from subscribers and relying
	parties. A CA may generate public/private key pairs for subscribers, usually for encryption; this function may be
	delegated to a different PKI component. In some cases, a CA will escrow private keys for encryption 
	certificates, a function typically delegated to a key escrow PKI component. If a CA handles subscriber key
	generation and escrow, it should also keep a history of subscriber keys to support cases where an old
	encryption key may be required to decrypt data. A CA may also be responsible for verifying subscriber
	identities who request to interact with the CA. If the CA does not provide this functionality directly, it is
	expected to interface with a registration authority (RA) that does.<h:br/><h:br/>

	The CA can be internal to an organization or it can be managed by an outside organization dedicated to
	this type of service. If the CA is internal, the organization controls the CA server, configures how the
	subscriber identity proofing takes place during registration, maintains the certificates, and revokes
	certificates when necessary. If the CA is a third party organization specifically designed to serve as a CA,
	then other individuals and companies pay them to supply this service. Depending on the nature of
	agreement and service, the organization may be fully or to some extent involved in subscriber registration,
	certificate management, and revocation.	    
	    
      <subsection title="TOE Boundary" id="TOEboundary">
	Figure 1 below illustrates an example PKI architecture; this architecture is for illustration only and is not
	meant to represent requirements for an actual deployment. Within a PKI, the CA is responsible for issuing
	and managing public-key certificates for subjects to prove their identities; these subjects are typically
	called subscribers and can be people, devices, applications, or servers. A public-key certificate is a
	credential that contains the public key for that subscriber bound with other identifying information using
	a CA’s digital signature. To obtain a certificate, subscribers register with the PKI. Depending on how the
	PKI is designed, this is done either directly through the CA itself or optionally through a third-party RA
	which verifies the requester’s identity before the request is handled by the CA. Part of the registration
	process is the generation of a private/public key pair that occurs either at the CA, at the RA or (typically)
	on the subscriber’s system. If not generated by the CA, the public key is transmitted to the CA during the
	registration process. The CA signs the certificate with a digital signature (using its own private key) that
	binds the public key and other identifying information to the subscriber. In this capacity, the CA acts as a
	trusted third party by asserting the authenticity of the subscriber, the public key, and the binding of the
	subscriber to the public key. This allows relying parties (e.g., individuals or applications) to verify and trust
	signatures or assertions made by the subscriber using the private key that corresponds to the public key
	contained in the certificate. This also allows the relying parties to use the public key in the certificate to
	carry out encrypted communication with the subscriber.<h:br/><h:br/>
	      
	<figure entity="images/CertAuth-TOE.png" title="TOE Boundary in Example PKI Architecture" id="toe"/>
	      
	<h:br/><h:br/>This PP defines requirements only for CA system component(s) that issue and manage public key
	certificates and certificate status information, to include interfaces to components not under the control
	of the ST author that may be required to meet these requirements as shown in Figure 1. <h:br/><h:br/>
	      
	While the functionality that the TOE is obligated to implement (in response to the described threat
	environment) is discussed in detail in later sections, it is useful to give a brief description here. Compliant
	TOEs will provide security functionality that addresses threats to the TOE and implements policies that
	are imposed by law or regulation. Compliant TOEs must authenticate and validate certificate requests and
	control the use of its private signature key(s) so that only valid, properly authorized certificates are issued;
	it must validate and authenticate all revocation requests and provide accurate and up-to-date revocation
	status information; and it must validate any requests for optional services (key generation, key escrow or
	recovery), authenticate and determine authorization for such services according to applicable security
	policies and ensure that only authorized services are performed. The TOE must protect itself from
	common network attacks, limit the damage that could occur by privileged user error, and be able to
	recover from damage that can occur via either network attacks or human error, to include reconstitution
	of functionality necessary to maintain any and all certificates issued for the duration of their validity
	periods in the case of TOE failure. The TOE must also offer auditing of a set of events that are associated
	with security-relevant activity on the TOE, and these events must be retained for long-term storage even
	in the event of a failure of the TOE. Audit storage should be reliable and extensible, although this could
	be on a device that is distinct from the TOE. The TOE must offer some protection for common network
	denial of service attacks and must also provide the ability to verify the source of updates to components
	of the TOE. <h:br/><h:br/>
	      
	A CA system which is the Target of Evaluation (TOE) of this PP may be a software package installed on a
	general computing platform, a set of software packages installed on distributed general computing
	platforms, or an integrated device including hardware and software. This PP makes no distinction in these
	cases and imposes requirements on the TOE and/or Operational Environment to ensure that the
	requirements can be met in any of these cases. Whenever the TOE depends on external components to
	meet the requirements of this PP, those components are included in the Operational Environment and
	the AGD_OPE and AGD_PRE sections of this PP describe requirements on the TOE to document these
	dependencies. For example, the TOE provides cryptographic operations involved in the signing of
	certificates, which may depend on an external cryptographic module such as a trusted computing module
	(TPM) on the general computing platform or an external hardware security module (HSM).<h:br/><h:br/>

	The CA manages certificates by providing validity information, either via the issuance of Certificate
	Revocation Lists (CRLs) or via a Certificate Status Service (CSS) that provides real-time responses to validity
	queries. Because a CA acts as a trusted third party, and because recommended operations require
	independent monitoring of its operations, the CA must maintain an audit record that can be reviewed.
	This audit record may be maintained on the TOE, or on an external audit server.<h:br/><h:br/>
	
	The threats and security objectives apply generally to a CA system. In order to provide consistent
	requirements for all TOEs, the requirements in Section 5 include selections to indicate where external
	components may be used. The TOE platform, external cryptographic modules, external audit servers, and
	external CSS that are not under the control of the security target (ST) author may be used to meet the
	respective TOE requirements. In these cases, the ST author must provide evidence that the requirement
	is met by the selected component. When external components are selected, this evidence is typically via
	validation against an appropriate PP.<h:br/><h:br/>
	      
	It is intended that the set of requirements in this PP is limited in scope in order to promote quicker, less
	costly evaluations that provide some value to end users.
     </subsection>
    </section>

    <section title="Use Cases" id="usecases">
	Requirements in this PP are designed to address the security problem for CA systems. The fundamental
	usage of a CA system will not differ drastically based on the functionality it provides. Different TOEs may
	vary because of the inclusion or exclusion of the various optional, objective, and selection-based
	requirements defined in the annexes of this PP but they are all expected to be used in the same general
	manner for the same general purposes. 
    </section>
  </chapter>

  <chapter title="Conformance Claims" id="cclaims"/>
	
  <chapter title="Security Problem Description" id="spd">
	  
  The security problem is described in terms of the threats that the OS is expected to address, assumptions
  about the operational environment, and any organizational security policies that the OS
  is expected to enforce.

  <section title="Threats" id="threats">
      <threats>

	<threat name="T.PRIVILEGED_USER_ERROR">
          <description> A privileged user or non-person entity (NPE) improperly exercises or adversely affects
		  the TOE, resulting in unauthorized services, ineffective security mechanisms, or unintended
		  circumvention of security mechanisms.</description>
          <objective-refer ref="O.AUDIT_LOSS_RESPONSE">
            <rationale>The TOE will respond to possible loss of audit records when audit trail storage is full
		or nearly full by restricting auditable events.</rationale>
          </objective-refer>
          <objective-refer ref="O.AUDIT_PROTECTION">
            <rationale>The TOE will protect audit records against unauthorized access, modification, or
		deletion to ensure accountability of user actions.</rationale>
          </objective-refer>
          <objective-refer ref="O.SESSION_LOCK">
            <rationale>The TOE will provide mechanisms that mitigate the risk of unattended sessions
		being hijacked.</rationale>
          </objective-refer>
          <objective-refer ref="O.TOE_ADMINISTRATION">
            <rationale>The TOE will provide mechanisms to ensure that only privileged users are able to log in
		and configure the TOE, and provide protections for logged-in users. The TOE will
		ensure that administrative responsibilities are separated across different roles in order
		to mitigate the impact of improper administrative activities or unauthorized
		administrative access.</rationale>
          </objective-refer>
        </threat>
        <threat name="T.TSF_FAILURE">
          <description> Security mechanisms of the TOE may fail, leading to a compromise of the TSF.</description>
          <objective-refer ref="O.TSF_SELF_TEST">
            <rationale>The TOE will provide the capability to test some subset of its security functionality to
		ensure it is operating properly. The TOE will provide integrity protection to detect
		modifications to firmware, software, and archived data.</rationale>
          </objective-refer>
        </threat>
        <threat name="T.UNAUTHENTICATED_TRANSACTIONS">
          <description> Relying parties within an information system depend on the TOE to accurately bind subjects
		  to their credentials for use in authenticating and providing privacy for transactions. Without 
		  the proper binding provided by the TOE, relying parties cannot ensure adequate access controls
		  on sensitive information, ensure transactional integrity, ensure proper accountability, and/or
		  enforce nonrepudiation. </description>
          <objective-refer ref="O.CERTIFICATES">
            <rationale>The TSF must ensure that certificates, certificate revocation lists, and certificate
		status information are valid.</rationale>
          </objective-refer>
          <objective-refer ref="O.CONFIGURATION_MANAGEMENT">
            <rationale>The TOE will conduct configuration management to assure identification of
		system connectivity (software, hardware, and firmware), and components (software,
		hardware, and firmware), auditing of configuration data, and controlling changes
		to configuration items.</rationale>
          </objective-refer>
          <objective-refer ref="O.INTEGRITY_PROTECTION">
            <rationale>The TOE will provide appropriate integrity protection for TSF data and software and
		any user data stored by the TOE. </rationale>
          </objective-refer>
          <objective-refer ref="O.NON_REPUDIATION">
            <rationale>The TOE will prevent a subscriber from avoiding accountability for sending a
		message by providing evidence that the subscriber sent the message; and control
		communications from unknown source. </rationale>
          </objective-refer>
        </threat>
        <threat name="T.UNAUTHORIZED_ACCESS">
          <description> A malicious user, process, or external IT entity intentionally circumvents TOE security
		  mechanisms. </description>
          <objective-refer ref="O.PROTECTED_COMMUNICATIONS">
            <rationale>The TOE will provide protected communication channels for administrators,
		other parts of a distributed TOE, and authorized IT entities. The TOE will protect
		data assets when they are being transmitted to and from the TOE, including through
		intervening untrusted components. </rationale>
          </objective-refer>
          <objective-refer ref="O.SESSION_LOCK">
            <rationale>The TOE will provide mechanisms that mitigate the risk of unattended sessions
		being hijacked. </rationale>
          </objective-refer>
          <objective-refer ref="O.TOE_ADMINISTRATION">
            <rationale>The TOE will provide mechanisms to ensure that only privileged users are able to log in
		and configure the TOE, and provide protections for logged-in users. The TOE will
		ensure that administrative responsibilities are separated across different roles in order
		to mitigate the impact of improper administrative activities or unauthorized
		administrative access. </rationale>
          </objective-refer>
        </threat>
        <threat name="T.UNAUTHORIZED_UPDATE">
          <description> A malicious party attempts to supply the end user with an update to the product that
		  may compromise the security features of the TOE.</description>
          <objective-refer ref="O.VERIFIABLE_UPDATES">
            <rationale>The TOE will provide the capability to help ensure that any updates to the TOE can be
		verified by the administrator to be unaltered and from a trusted source.</rationale>
          </objective-refer>
        </threat>
        <threat name="T.UNDETECTED_ACTIONS">
          <description> Remote users or external IT entities may take actions that adversely affect the security of the TOE.</description>
          <objective-refer ref="O.AUDIT_LOSS_RESPONSE">
            <rationale>The TOE will respond to possible loss of audit records when audit trail storage is full
		or nearly full by restricting auditable events</rationale>
          </objective-refer>
          <objective-refer ref="O.AUDIT_PROTECTION">
            <rationale>The TOE will protect audit records against unauthorized access, modification, or
		deletion to ensure accountability of user actions.</rationale>
          </objective-refer>
          <objective-refer ref="O.SYSTEM_MONITORING">
            <rationale>The TOE will provide the capability to generate audit data and send those data to
		an external IT entity. The TOE will record in audit records: date and time of action and
		the entity responsible for the action.</rationale>
          </objective-refer>
        </threat>
        <threat name="T.USER_DATA_REUSE">
          <description>A malicious user, process, or external IT entity may gain access to user data that is not cleared
		  when resources are reallocated.</description>
          <objective-refer ref="O.RESIDUAL_INFORMATION_CLEARING">
            <rationale>The TOE will ensure that any data contained in a protected resource is not available
		when the resource is reallocated.</rationale>
          </objective-refer>
        </threat>
        <threat name="T.WEAK_CRYPTO">
          <description>A weak hash or signature scheme may be compromised by an attacker and used to apply
		  integrity checks to malicious content so that it appears legitimate.</description>
          <objective-refer ref="O.PROTECTED_COMMUNICATIONS">
            <rationale>The TOE will provide protected communication channels for administrators, other parts of
		a distributed TOE, and authorized IT entities. The TOE will protect data assets when they are
		being transmitted to and from the TOE, including through intervening untrusted components.</rationale>
          </objective-refer>
          <objective-refer ref="O.VERIFIABLE_UPDATES">
            <rationale>The TOE will provide the capability to help ensure that any updates to the TOE can be
		verified by the administrator to be unaltered and from a trusted source.</rationale>
          </objective-refer>
        </threat>
      </threats>
    </section>
	  
    <section title="Assumptions" id="assumptions">
      <assumptions>
        <assumption name="A.NO_GENERAL_PURPOSE">
          <description>It is assumed that there are no general-purpose computing capabilities (e.g., compilers
		  or user applications) available on the TOE, other than those services necessary for the
		  operation, administration and support of the TOE. </description>
          <objective-refer ref="OE.NO_GENERAL_PURPOSE">
            <rationale>There are no general-purpose computing capabilities (e.g., compilers or user
		applications) available on the TOE, other than those services necessary for the
		operation, administration and support of the TOE.</rationale>
          </objective-refer>
        </assumption>
        <assumption name="A.PHYSICAL">
          <description>Physical security, commensurate with the value of the TOE and the data it contains, is 
		  assumed to be provided by the environment.</description>
          <objective-refer ref="OE.PHYSICAL">
            <rationale>Physical security, commensurate with the value of the TOE and the data it contains, is
		provided by the environment.</rationale>
          </objective-refer>
        </assumption>
        <assumption name="A.TRUSTED_ADMIN">
          <description> TOE Administrators are assumed to follow and apply all administrator guidance in
		  a trusted manner.</description>
          <objective-refer ref="OE.TRUSTED_ADMIN">
            <rationale>The administrator of the TOE is not careless, willfully negligent or hostile, and
		administers the software within compliance of the applied enterprise security policy.</rationale>
          </objective-refer>
        </assumption>
      </assumptions>
    </section>
	  
    <section title="Organizational Security Policies" id="OSPs">
      <OSPs>
        <OSP name="P.ACCESS_BANNER">
          <description>The TOE shall display an initial banner describing restrictions of use, legal agreements,
		  or any other appropriate information to which users consent by accessing the TOE.</description>
          <objective-refer ref="O.DISPLAY_BANNER">
            <rationale>The TOE will display an advisory warning regarding use of the TOE.</rationale>
          </objective-refer>
        </OSP>
      </OSPs>
    </section>
  </chapter>
	
  <chapter title="Security Objectives" id="obj">
    <section title="Security Objectives for the TOE" id="SecurityObjectivesTOE">
	In some cases, an objective is addressed only by requirements that are either selection-based or
	optional. In these cases, if none of those requirements are included in the ST, the ST author does not
	include that objective in the ST.
      <SOs>
        <SO name="O.AUDIT_LOSS_RESPONSE">
          <description> The TOE will respond to possible loss of audit records when audit trail storage is full 
		  or nearly full by restricting auditable events.</description>
          <addressed-by>FAU_ADP_EXT.1</addressed-by><rationale>X</rationale>
          <addressed-by>FAU_STG.4</addressed-by><rationale>X</rationale>
        </SO>
        <SO name="O.AUDIT_PROTECTION">
          <description>The TOE will protect audit records against unauthorized access, modification, or deletion
		  to ensure accountability of user actions.</description>
            <addressed-by>FAU_ADP_EXT.1</addressed-by><rationale>For reasons </rationale>
            <addressed-by>FAU_STG.1(1) (selection-based)</addressed-by><rationale>For reasons </rationale>
            <addressed-by>FAU_STG.1(2) (selection-based)</addressed-by><rationale>For reasons </rationale>
            <addressed-by> FAU_STG.1(2) (selection-based)</addressed-by><rationale>For reasons </rationale>
        </SO>
        <SO name="O.CERTIFICATES">
          <description>The TSF must ensure that certificates, certificate revocation lists, and certificate status
		  information are valid.</description>
            <addressed-by>FDP_CER_EXT.1</addressed-by><rationale>For reasons </rationale>
            <addressed-by>FDP_CER_EXT.2</addressed-by><rationale>For reasons </rationale>
            <addressed-by>FDP_CER_EXT.3</addressed-by><rationale>For reasons </rationale>
            <addressed-by>FDP_CER_EXT.4 (optional)</addressed-by><rationale>For reasons </rationale>
            <addressed-by>FDP_CRL_EXT.1 (selection-based)</addressed-by><rationale>For reasons </rationale>
            <addressed-by>FDP_CSI_EXT.1</addressed-by><rationale>For reasons </rationale>
            <addressed-by>FDP_OCSPG_EXT.1 (selection-based)</addressed-by><rationale>For reasons </rationale>
            <addressed-by>FDP_SDP_EXT.1 (selection-based)</addressed-by><rationale>For reasons </rationale>
            <addressed-by>FDP_STG_EXT.1 (optional)</addressed-by><rationale>For reasons </rationale>
            <addressed-by>FIA_CMCS_EXT.1 (selection-based)</addressed-by><rationale>For reasons </rationale>
            <addressed-by>FIA_ESTS_EXT.1 (selection-based)</addressed-by><rationale>For reasons </rationale>
            <addressed-by>FIA_X509_EXT.1</addressed-by><rationale>For reasons </rationale>
            <addressed-by>FIA_X509_EXT.2</addressed-by><rationale>For reasons </rationale>
            <addressed-by>FPT_NPE_EXT.1 (optional)</addressed-by><rationale>For reasons </rationale>
        </SO>
        <SO name="O.CONFIGURATION_MANAGEMENT">
          <description>The TOE will conduct configuration management to assure identification of system connectivity
		(software, hardware, and firmware), and components (software, hardware, and firmware), auditing
		of configuration data, and controlling changes to configuration items.
          </description>
          <addressed-by>FDP_CER_EXT.1, FDP_CER_EXT.4 (optional), FDP_CRL_EXT.1 (selection-based), FDP_OCSPG_EXT.1 (selection-based), FMT_MOF.1(1), FMT_MOF.1(2), FMT_MOF.1(3),
		FMT_MOF.1(4), FMT_MOF.1(5), FMT_MTD.1, FPT_NPE_EXT.1 (optional)</addressed-by>
          <rationale>Rationale for a big chunk</rationale>
        </SO>
        <SO name="O.DISPLAY_BANNER">
          <description>The TOE will display an advisory warning regarding use of the TOE.</description>
          <addressed-by>
            FTA_TAB.1
          </addressed-by>
          <rationale>Rationale for a big chunk</rationale>
        </SO>
        <SO name="O.INTEGRITY_PROTECTION">
          <description>The TOE will provide appropriate integrity protection for TSF data and software and any user data
		stored by the TOE.</description>
          <addressed-by>
            FCS_CDP_EXT.1, FCS_CKM_EXT.5 (selection-based), FDP_ITT.1 (selection-based),
		FPT_ITT.1 (selection-based), FPT_TST_EXT.1 (optional), FPT_TST_EXT.2 (optional)
          </addressed-by>
          <rationale>Rationale for a big chunk</rationale>
        </SO>
        <SO name="O.NON_REPUDIATION">
          <description>The TOE will prevent a subscriber from avoiding accountability for sending a message by providing
		evidence that the subscriber sent the message; and control communications from unknown source.
		</description>
          <addressed-by>
            FCO_NRO_EXT.2, FCO_NRR_EXT.2 (selection-based), FIA_CMCC_EXT.1 (selectionbased), FIA_ESTC_EXT.1 (selection-based)
          </addressed-by>
          <rationale>Rationale for a big chunk</rationale>
        </SO>
        <SO name="O.PROTECTED_COMMUNICATIONS">
          <description>The TOE will provide protected communication channels for administrators, other parts of a
		distributed TOE, and authorized IT entities. The TOE will protect data assets when they are being
		transmitted to and from the TOE, including through intervening untrusted components.
		</description>
          <addressed-by>
            FCS_CDP_EXT.1, FCS_CKM.1 (selection-based), FCS_CKM.2 (selection-based),
		FCS_CKM_EXT.1(1) (selection-based), FCS_CKM_EXT.1(2) (selection-based), FCS_CKM_EXT.1(3)
		(selection-based), FCS_CKM_EXT.1(4) (selection-based), FCS_CKM_EXT.4 (selection-based),
		FCS_CKM_EXT.7 (selection-based), FCS_CKM_EXT.8 (selection-based), FCS_COP.1(1) (selectionbased), 
		FCS_COP.1(2) (selection-based), FCS_COP.1(3) (selection-based), FCS_COP.1(4) (selectionbased), FCS_COP.1(5) (optional), FCS_HTTPS_EXT.1 (selection-based), FCS_IPSEC_EXT.1 (selectionbased), FCS_RBG_EXT.1 (selection-based), FCS_STG_EXT.1, FCS_TLSC_EXT.2 (selection-based),
		FCS_TLSS_EXT.1 (selection-based), FDP_ITT.1 (selection-based), FIA_PSK_EXT.1 (selection-based),
		FPT_ITT.1 (selection-based), FPT_KST_EXT.1, FPT_KST_EXT.2, FPT_SKP_EXT.1, FPT_SKY_EXT.1
		(optional), FPT_SKY_EXT.2 (selection-based), FTP_ITC.1 (selection-based), FTP_TRP.1          </addressed-by>
          <rationale>Rationale for a big chunk</rationale>
        </SO>
        <SO name="O.RECOVERY">
          <description>The TOE will have the capability to store and recover to a previous state at the direction of the
		administrator (e.g., provide support for archival and recovery capabilities).
		</description>
          <addressed-by>
            FCS_CDP_EXT.1, FCS_CKM_EXT.6 (selection-based), FPT_FLS.1, FPT_RCV.1   </addressed-by>
          <rationale>Rationale for a big chunk</rationale>
        </SO>
        <SO name="O.RESIDUAL_INFORMATION_CLEARING">
          <description>The TOE will ensure that any data contained in a protected resource is not available when the resource
		is reallocated.
		</description>
          <addressed-by>
            FDP_RIP.1  
	  </addressed-by>
          <rationale>Rationale for a big chunk</rationale>
        </SO>
        <SO name="O.SESSION_LOCK">
          <description>The TOE will provide mechanisms that mitigate the risk of unattended sessions being hijacked.
		</description>
          <addressed-by>
            FTA_SSL_EXT.1 (optional) 
	  </addressed-by>
          <rationale>Rationale for a big chunk</rationale>
        </SO>
        <SO name="O.SYSTEM_MONITORING">
          <description>The TOE will provide the capability to generate audit data. The TOE will record in audit records: date
		and time of action and the entity responsible for the action.
		</description>
          <addressed-by>
             FAU_ADP_EXT.1, FAU_GEN.1, FAU_GEN.2, FAU_SAR.1 (selection-based), FAU_SAR.3
		(selection-based), FAU_GCR_EXT.1, FAU_SCR_EXT.1 (selection-based), FAU_SEL.1 (selection-based),
		FAU_STG_EXT.1 (selection-based), FIA_UIA_EXT.1, FPT_STM.1
	  </addressed-by>
          <rationale>Rationale for a big chunk</rationale>
        </SO>
        <SO name="O.TOE_ADMINISTRATION">
          <description>The TOE will provide mechanisms to ensure that only privileged users are able to log in and configure
		the TOE, and provide protections for logged-in users. The TOE will ensure that administrative
		responsibilities are separated across different roles in order to mitigate the impact of improper
		administrative activities or unauthorized administrative access.
		</description>
          <addressed-by>
             FIA_AFL.1 (selection-based), FIA_PMG_EXT.1 (selection-based), FIA_UAU.7 (selectionbased), FIA_UAU_EXT.1, FIA_UIA_EXT.1, FMT_MOF.1(1), FMT_MOF.1(2), FMT_MOF.1(3),
		FMT_MOF.1(4), FMT_MOF.1(5), FMT_MTD.1, FMT_SMF.1, FMT_SMR.2, FPT_APW_EXT.1 (selectionbased), FTA_SSL_EXT.1 (optional), FTA_SSL.3 (optional), FTA_SSL.4
	  </addressed-by>
          <rationale>Rationale for a big chunk</rationale>
        </SO>
        <SO name="O.TSF_SELF_TEST">
          <description>The TOE will provide integrity protection to detect modifications to firmware, software, and archived
		data. If this SFR is not claimed by the TOE, this functionality is expected to be satisfied by
			the environmental objective OE.TRUSTED_PLATFORM.
		</description>
          <addressed-by>
              FPT_TST_EXT.1 (optional), FPT_TST_EXT.2 (optional)
	  </addressed-by>
          <rationale>Rationale for a big chunk</rationale>
        </SO>
        <SO name="O.VERIFIABLE_UPDATES">
          <description>The TOE will provide the capability to help ensure that any updates to the TOE can be verified by the
		administrator to be unaltered and from a trusted source.
		</description>
          <addressed-by>
              FCS_CDP_EXT.1, FCS_COP.1(2) (selection-based), FIA_X509_EXT.2, FPT_TUD_EXT.1
	  </addressed-by>
          <rationale>Rationale for a big chunk</rationale>
        </SO>
      </SOs>
    </section>
	  
    <section title="Security Objectives for the Operational Environment"
      id="SecurityObjectivesTOEorEnvironment">Note that PP allows the ST author in some cases to select if the TSF or Operational Environment is
	invoked to perform some function. There are several Objectives for the Operational Environment that
	correspond to those SFRs, covering the case where the ST author selects the item pertaining to the
	Operational Environment being invoked to perform the function. If the TOE performs all such functions
	(that is, the Operational Environment-related selection is not chosen), then the corresponding Objective
	for the Operational Environment will need to be removed by the ST author.
      <SOEs>
        <SOE name="OE.PLATFORM">
          <description>The OS relies on being installed on trusted
            hardware.</description>
        </SOE>
        <SOE name="OE.CERT_REPOSITORY">
          <description>The Operational Environment provides a certificate repository for storage of certificates (and
		optionally CRLs) issued by the TSF.
		</description>
        </SOE>
        <SOE name="OE.CERT_REPOSITORY_SEARCH">
          <description>The Operational Environment provides the ability to search a certificate repository for specific
		certificate fields in certificates issued by the TSF and return the certificate and an identifier for the
		certificate that can be used to search the audit trail for events related to that certificate. </description>
        </SOE>
        <SOE name="OE.AUDIT_RETENTION">
          <description>The Operational Environment provides mechanisms for retention of audit records for both normal
	and extended retention periods.</description>
        </SOE>
        <SOE name="OE.AUDIT_REVIEW">
          <description>The Operational Environment provides a mechanism for the review of specified audit data.</description>
        </SOE>
        <SOE name="OE.AUDIT_STORAGE">
          <description>The Operational Environment provides a mechanism for the storage of specified audit data.</description>
        </SOE>
        <SOE name="OE.CRYPTOGRAPHY">
          <description>The Operational Environment provides cryptographic services that can be invoked by the TSF in order
		to perform security functionality.</description>
        </SOE>
        <SOE name="OE.KEY_ARCHIVAL">
          <description>The Operational Environment provides the ability to use split knowledge procedures to enforce twoparty control to export keys necessary to resume CA functionality if the TSF should fail.
		</description>
        </SOE>
        <SOE name="OE.NO_GENERAL_PURPOSE">
          <description>There are no general-purpose computing capabilities (e.g., compilers or user applications) available
		on the TOE, other than those services necessary for the operation, administration and support of the
		TOE.</description>
        </SOE>
        <SOE name="OE.PHYSICAL">
          <description>Physical security, commensurate with the value of the TOE and the data it contains, is provided by the
		environment.</description>
        </SOE>
        <SOE name="OE.PUBLIC_KEY_PROTECTION">
          <description>The Operational Environment provides protection for specified public keys associated with CA
		functions.</description>
        </SOE>
        <SOE name="OE.SESSION_PROTECTION_LOCAL">
          <description>The Operational Environment provides the ability to lock or terminate local administrative sessions.</description>
        </SOE>
        <SOE name="OE.SESSION_PROTECTION_REMOTE">
          <description>The Operational Environment provides the ability to lock or terminate remote administrative sessions.</description>
        </SOE>
        <SOE name="OE.TOE_ADMINISTRATION">
          <description>The Operational Environment provides specified management capabilities required for the overall
		operation of a Certificate Authority, and the ability to restrict access to a subset of the capabilities as
		specified in the ST. </description>
        </SOE>
        <SOE name="OE.TRUSTED_ADMIN">
          <description>The administrator of the TOE is not careless, willfully negligent or hostile, and administers the
		software within compliance of the applied enterprise security policy.</description>
        </SOE>
        <SOE name="OE.TRUSTED_PLATFORM">
          <description>The operating system on which the TOE has been installed is securely configured, regularly patched,
		and not subject to unauthorized access.</description>
        </SOE>
      </SOEs></section>
	  
    <section title="Security Objectives Rationale" id="SOR">
      <!-- This section is populated by boilerplates.xsl in transforms. -->
      </section>
  </chapter>

  <chapter title="Security Requirements" id="req">
      The Security Functional Requirements (SFRs) included in this section are derived
	  from Part 2 of the <h:i>Common Criteria for Information Technology Security Evaluation, Version 3.1, Revision 4</h:i>, with
	  additional extended functional components.<h:br/><h:br/>
	  The CC defines operations on Security Functional Requirements: assignments, selections, assignments
		within selections and refinements. This document uses the following font conventions to identify the
		operations defined by the CC: <h:br/><h:br/>
		<h:ul>
      		<h:li>
	        <h:b>Refinement</h:b> operation (denoted by <h:b>bold text</h:b>): is used to add details to a
        	requirement, and thus further restricts a requirement.</h:li>
      		<h:li>
        	<h:b>Selection</h:b> (denoted by <h:i>italicized text</h:i>): is used to select one or more options
        	provided by the [CC] in stating a requirement.</h:li>
      		<h:li>
        	<h:b>Assignment</h:b> operation (denoted by <h:span class="assignable-content">italicized text</h:span>): is used to assign a
        	specific value to an unspecified parameter, such as the length of a password. Showing the
        	value in square brackets indicates assignment.</h:li>
      		<h:li>
        	<h:b>Iteration</h:b> operation: are identified with a number inside parentheses (e.g.
        		"(1)")</h:li>
      		<h:li>
        	<h:b>Extended SFRs</h:b>  are identified by having a label “_EXT” appended to the SFR name. </h:li>
    		</h:ul>

    <section title="Security Functional Requirements" id="SFRs">
	    The Security Functional Requirements (SFRs) included in this section are derived from Part 2 of the
	Common Criteria for Information Technology Security Evaluation, Version 3.1, Revision 4, with
	additional extended functional components. The following table lists the SFRs that are defined in this
	section as well as any auditable events associated with their enforcement. The following table presents
	the baseline (mandatory) requirements for compliant TOEs, and also used to specify whether the TSF or
	OE is responsible for actions pertaining to a particular audit event associated with the SFRs (this is done
	in FAU_ADP_EXT.1 below). If the TOE relies on the Operational Environment to provide some of the
	TOE’s auditing functionality, the ST author is expected to identify whether each of the auditable events
	for the claimed SFRs are implemented by the TSF or by the Operational Environment, along with the
	specific environmental component that provides the auditing functionality if applicable. The ST author
	should refer to the right-most column of Table 4 through Table 6 and complete these fields accordingly.<h:br/><h:br/>

	<!-- For some reason, the audit table is here. But why not? -->
	<!-- The CA audit table actually has 5 fields, but the fifth one is not used.
	     The fourth field reports the retention requirement for the records. This seems like it should not be
	     a PP requirement since it is operational and not really a product feature.  -->
	    
      <subsection title="Auditable Events for Mandatory SFRs" id="ss-audit-events">
	<audit-table table="mandatory"/>
      </subsection>
	      
        <!--                             -->
	<!-- Class: FAU: Security Audit  -->
        <!--                             -->
      <subsection title="Class: Security Audit (FAU)" id="fau">
	       
	 <!--               -->     
 	 <!-- FAU_ADP_EXT.1 -->
	 <!--               -->
         <f-component cc-id="fau_adp_ext.1" name="Audit Dependencies">
          <f-element>
            <title> The TSF shall implement audit functionality and 
		    <selectables>
			    <selectable>interface with auditing function(s) in the Operational Environment</selectable>
			    <selectable>no additional audit functionality</selectable>
		    </selectables>
		    in order to perform audit operations on the following audit data: 
		    <assignable>Auditable events in Table 4 through Table 6 that require persistent storage</assignable>. 
            </title>
            <note role="application">
		  If any audit functions (e.g. storage, review) are accomplished by the TOE
		communicating over a network connection with a physically external audit server,
		then the ST author must include FTP_ITC.1 with "audit server" selected. If the TOE
		relies on the Operational Environment to provide some of the TOE’s auditing
		functionality, the ST author is expected to identify whether each of the auditable
		events for the claimed SFRs are implemented by the TOE or by the Operational
		Environment, along with the specific environmental component that provides the
		auditing functionality if applicable. The ST author should refer to the right-most
		column of Table 4 through Table 6 and complete these fields accordingly<h:br/><h:br/>
		    
		   If any audit review is performed by an auditor through an interface provided by
		the TSF, then FAU_SAR.1 and FAU_SAR.3 in Annex B.2 will be included in the ST by
		the ST author.<h:br/><h:br/>

		If any audit pre-selection is performed by an auditor through an interface provided
		by the TSF, then FAU_SEL.1 in Annex B.2 will be included in the ST by the ST author.<h:br/><h:br/>
		    
		Audit records stored within the TOE boundary that are generated due to audit
		events marked “extended” in tables 4, 5, and 6 that are included in the ST, then
		FAU_STG.1(2) will be included in the ST by the ST author.<h:br/><h:br/>   

		If the TSF initiates the storage of the audit data (that is, it generates audit data
		that will be stored either by the TOE or the OE), then FAU_STG_EXT.1 will be
		included in the ST by the ST Author. <h:br/><h:br/>
		    
		Audit records for the TSF are divided into two sets of events, whose retention
		periods might be significantly different operationally. Generally, information
		necessary to maintain an issued certificate or to determine the circumstances of
		a certificate issuance is required to be available at least as long as the validity of
		an issued certificate, and perhaps longer according the statutes, laws, or policies
		applicable to the issuance and intended use of a particular certificate. Other audit
		data is typically retained only to support normal operations. The ‘Retention’
		column in Table 4 (as well as Tables 5 and 6 for the optional and selection-based
		SFRs) indicates whether the audit record is intended to be used for ‘normal’
		(shorter-term) or ‘extended’ (longer-term) purposes.<h:br/><h:br/>
   
		For the FDP_CER_EXT.2 audit event, the intent is that auditing is performed only
		once incoming data are recognized by the TOE as a “request”. Cases where
		incoming data are rejected before they are processed as “requests” by the TOE
		(and thus the action “fails”) do not need to be audited by the FDP_CER_EXT.2
		audit event.<h:br/><h:br/>
	  </note>
          <aactivity>
              <TSS>
		The evaluator shall examine the TSS and operational guidance in order to verify
		that they describe each of the relevant auditable events, how audit records of
		these events are formatted, and what component of the TOE or Operational
		Environment is responsible for handling these events.<h:br/><h:br/>
		      
		For those auditable events that are generated by the TOE and stored within the
		TOE boundary, the assurance activities are included for the relevant selectionbased audit SFRs.
              </TSS>
              <Guidance>
		There is no guidance associated with this evaluation activity.
              </Guidance>
             <Tests>
		For any auditable events that are handled by the TOE’s Operational
		Environment, the evaluator shall demonstrate that these events are auditable.<h:br/><h:br/>	     
		Testing that audit records associated with an SFR are generated is performed
		in conjunction with testing the SFR.
              </Tests>
	    </aactivity>
          </f-element>
 	  <audit-event/> 
        </f-component>

	 <!--               -->     
 	 <!-- FAU_GCR_EXT.1 -->
	 <!-- If "store" is chosen in the first selection, then FAU_SCR_EXT.1 is included. This is not documented
		clearly anywhere in the PP, but this is what we think is intended.
	-->
	<!--               -->     
        <f-component cc-id="fau_gcr_ext.1" name="Generation of Certificate Repository" status="mandatory">
          <f-element id="fau-gcr-ext-1e1">
            <title>The TSF shall 
		    <selectables>
			    <selectable id="store-certs">store</selectable> <!-- causes inclusion of FAU_SCR_EXT.1 -->
			    <selectable>invoke the Operational Environment to store</selectable>
		    </selectables>
		certificates and 
		    <selectables>
			    <selectable>CRLs</selectable>
			    <selectable>no other information</selectable>
		    </selectables>
		issued by the TSF. </title>
            <aactivity>
		<TSS>
		The evaluator shall examine the TSS to determine that it describes the
		certificate repository. If the certificate repository is provided by the OE, the
		evaluator shall check the TSS to ensure it describes the interfaces invoked by
		the TOE to store certificates (and CRLs). 
		</TSS>
                <Guidance>
		There is no guidance associated with this evaluation activity.
                </Guidance>
		<Tests>
			The evaluator shall perform the following tests:
			<testlist>
				<test>The evaluator shall generate a certificate to be stored in the
				repository. The evaluator shall confirm that the certificate is stored in
				the certificate repository.
				</test>
				<test>(conditional) If “CRLs” are selected in the SFR, the evaluator
				shall generate a CRL and verify that it is stored in the certificate
				repository.
				</test>
			</testlist>
		 </Tests>
	    </aactivity>
          </f-element>
          <audit-event/>
        </f-component>
		
	<!--               -->     
        <!-- FAU_GEN.1     -->
	<!--               -->     
        <f-component cc-id="fau_gen.1" name="Audit Data Generation" status="mandatory">
           <f-element>
		   <title><h:b>Refinement:</h:b>The TSF shall generate <refinement>and <selectables><selectable>invoke the Operational 
		      Environment to generate</selectable><selectable>no other actions</selectable></selectables></refinement>
		      an audit record of the following auditable events:
                            <h:ol type="a">
                                <h:li>Start-up of the TSF audit functions</h:li>
                                <h:li>All auditable events for the <refinement>not specified</refinement> level of audit; and </h:li>
                                <h:li><refinement>All administrative actions invoked through the TSF interface</refinement>;</h:li>
                                <h:li><refinement>Specifically defined auditable events listed in Table 4 through Table 6</refinement></h:li>
                            </h:ol>
             </title>
	     <note role="application">
		The ST author will include a consolidated table of auditable events for all
		mandatory, optional, and selected components in the ST per FAU_ADP_EXT.1 that
		will indicate the component that is responsible for producing the audit event.
		There are three cases for the generational of audit events. The audit event is
		generated by the TSF; the audit event is generated on initiation by the TOE, but
		the OE is involved in some or all of the actual generation of the audit event; and
		the audit event is generated entirely by the OE without prompting from the TOE.<h:br/><h:br/>
		The first two cases are covered by this requirement. Additionally, the start-up of
		the TOE functions and all administrative actions that performed either by or
		through the TOE are required to be auditable. If all of the audit records are
		generated by the TOE, or if the audit records are either generated entirely by the
		TOE and entirely by the OE (that is, none of the audit records are generated by
		invoking the OE), then “no other actions” is chosen in the selection. The meaning
		of “specifically defined auditable events…” in item d refers to events in the table
		produced by FAU_ADP_EXT.1 that indicate they are generated in whole or part of
		the TSF.
	    </note>	     
        </f-element>
        <f-element>
		<title><h:b>Refinement:</h:b>The TSF shall <refinement>
			<selectables><selectable>include</selectable>
				<selectable> invoke the Operational Environment to include</selectable>
			</selectables></refinement>
			within each audit record at least the following information:
                        <h:ol type="a">
                             <h:li>Date and time of the event, type of event, subject identity, and the outcome
				(success or failure) of the event; and</h:li>
                             <h:li>For each audit event type, based on the auditable event definitions of the
				functional components included in the PP/ST, <refinement>information specified in
				     column three of Table 4 through Table 6</refinement>. </h:li>
                        </h:ol>
                </title>
                <note role="application">
                      	As with the previous component, the ST author should update Table 4 above with
			any additional information generated. "Subject identity" in the context of this
			requirement could either be the administrator's user ID or the affected network
			interface, for example.<h:br/><h:br/>
			The ST author chooses whether the information is put into the audit record by the
			TSF or the OE via the selection; it is permissible to be a combination of both. It
			may be the case that when the TSF generates an audit record, some or all of the
			information listed in the SFR are actually put into the audit record by the OE. In
			these cases, “invoke the Operational Environment to record” should be selected.
			OE.AUDIT_GENERATION will be included in the ST if the OE is selected in any of
			the FAU_GEN elements or listed in the last column in table 4.
                 </note>
		<aactivity>
                    <TSS>
                       	The evaluator shall ensure that the TSS describes every audit event type
			mandated by the PP and that the description of the fields contains the
			information required in FAU_GEN.1.2, and the additional information specified
			in Tables 4 through 6, depending on the characterization of the SFR associated
			with the particular event as mandatory, optional, or selection-based.
			<h:br></h:br><h:br></h:br>
			The evaluator shall also ensure that the TSS describes all cases where the
			generation of ephemeral key pairs is not audited for FCS_CKM.1.    
                    </TSS>
                    <Guidance>
                        The evaluator shall examine the operational guidance to ensure that it
			describes the audit mechanism, lists all of the auditable events and provides a
			format for audit records. Each audit record format type must be covered, along
			with a brief description of each field. <h:br></h:br><h:br></h:br>
			The evaluator shall also make a determination of the administrative actions
			that are relevant in the context of this PP. The evaluator shall examine the
			operational guidance and make a determination of which administrative
			commands, including subcommands, scripts, and configuration files, are
			related to the configuration (including enabling or disabling) of the
			mechanisms implemented in the TOE that are necessary to enforce the
			requirements specified in the PP. The evaluator shall document the
			methodology or approach taken while determining which actions in the
			operational guidance are security relevant with respect to this PP. The
			evaluator may perform this activity as part of the activities associated with
			ensuring the operational guidance satisfies the requirements in accordance
			with AGD_OPE.<h:br></h:br><h:br></h:br>
			The evaluator shall check that audit review tools are described in the
			operational guidance and conform to the requirements of FAU_SAR.1.<h:br></h:br><h:br></h:br>
    			When the Operational Environment is selected in FAU_GEN.1.1 or
			FAU_GEN.1.2, the evaluator shall examine the operational guidance to ensure
			the configuration of the Operational Environment necessary to generate the
			required elements, and instructions on how to examine the various audit
			records is provided.
                    </Guidance>
                    <Tests>
                        The evaluator shall test the TOE’s ability to correctly generate audit records by
			having the TOE generate audit records for the events listed in Table 4, any
			events in Table 5 and Table 6 that correspond with the optional and selectionbased SFRs claimed in the Security Target, startup of the audit functions (or
			startup of the TOE if audit functionality is not enabled or disabled
			independently of the TOE), and administrative actions. This should include all
			instances of an event. The evaluator shall test that audit records are generated
			for the establishment and termination of a channel for each of the
			cryptographic protocols contained in the ST. For administrative actions, the
			evaluator shall test that each action determined by the evaluator above to be
			security relevant in the context of this PP is auditable.  <h:br></h:br><h:br></h:br>
			When verifying the test results, the evaluator shall use audit review tools in
			conformance of FAU_SAR.1 and the operational guidance. The evaluator shall
			ensure the audit records generated during testing match the format specified
			in the operational guidance, and that the fields in each audit record have the
			proper entries and that the audit records are provided in a manner suitable for
			interpretation. The evaluator shall also ensure the ability to apply searches of
			audit data based on the type of event, the user responsible for causing the
			event, and identity of the applicable certificate. When the Operational
			Environment is selected in FAU_GEN.1.1 or FAU_GEN.1.2, the evaluator shall
			follow the operational guidance to configure the Operational Environment as
			specified in the TSS and identify the audit records used and audit information
			assigned to each audit record. The evaluator shall then inspect the indicated
			audit records for audit information assigned to each audit record indicated.<h:br/><h:br/>    
			Note that the testing here can be accomplished in conjunction with the testing
			of the security mechanisms directly. For example, testing performed to ensure
			that the operational guidance provided is correct verifies that AGD_OPE.1 is
			satisfied and should address the invocation of the administrative actions that
			are needed to verify the audit records are generated as expected. <h:br/><h:br/> 
			<h:i>Equivalency</h:i><h:br/><h:br/> 
			Testing of the TOE may be performed on a subset of the platforms listed in the
			TOE's ST. Justification must be provided for those platforms that were excluded
			from testing.<h:br/><h:br/> 
                     </Tests>   
                  </aactivity>
                </f-element>
				<audit-event />
				<audit-table table="mandatory">
					<h:b>Table 1: Auditable events for Mandatory SFRs:</h:b><h:br/>
				</audit-table>
             </f-component>
	
	<!--               -->     
        <!-- FAU_GEN.2     -->
	<!--               -->     		
	<f-component cc-id="fau_gen.2" name="User Identity Association" status="mandatory">
          <f-element>
		  <title><h:b>Refinement:</h:b>For audit events resulting from actions of identified users, the TSF
		    shall be able to <refinement><selectables><selectable>associate</selectable>
		    <selectable>invoke the Operational Environment to associate</selectable></selectables>
		    </refinement>
		    each auditable event with the identity of the user that caused the event.
	    </title>
            <note role="application">
		As with FAU_GEN.1.2, if the TSF initiates the generation of the audit event, but
		the OE is responsible for associating the user ID with that event (if appropriate for
		that event), then the ST author selects “invoke the Operational Environment to
		associate” for this SFR. 
	    </note>
            <aactivity>
              	<Tests>
			This activity should be accomplished in conjunction with the testing of FAU_GEN.1. 
		</Tests>
	    </aactivity>
          </f-element>
	<audit-event/>
        </f-component>

	      
	<!--               -->     
        <!-- FAU_SAR.1     -->
	<!-- According to FAU_ADP_EXT.1, this SFR is included:
		"If any audit review is performed by an auditor through an interface provided by
		the TSF, then FAU_SAR.1 and FAU_SAR.3 in Annex B.2 will be included in the ST by
		the ST author." 
	     According to this very SFR, "This SFR is included in the ST by the ST author if the operations
 		provided by the TSF (as specified in FAU_ADP_EXT.1) include the review of audit records. If this
		SFR is not selected, the ST author includes OE.AUDIT_REVIEW." 

	     But there is no selection of operations in FAU_ADP_EXT.1. 
		 So, I'm going to implement this as an implementation dependent requirement.
	-->
	<!--               -->     
        <f-component cc-id="fau_sar.1" name="Audit Review" status="feat-based">
          <depends on="implements"><ref-id>auditReview</ref-id></depends>
		<f-element>
			<title>The TSF shall provide [<h:i>Auditors</h:i>] with the capability to read all
				information from the audit records.</title>
		</f-element>
		<f-element>
			<title>
				<refinement>Refinement:</refinement>The TSF shall provide the audit records in
				a manner suitable for the Auditor to interpret the information.
			</title>
			<note role="application">
	      			This SFR is included in the ST by the ST author if the operations provided by the
				TSF (as specified in FAU_ADP_EXT.1) include the review of audit records. If this
				SFR is not selected, the ST author includes OE.AUDIT_REVIEW.
			</note>
			<aactivity>
				<Tests>
					This activity should be accomplished in conjunction with the testing of
					FAU_GEN.1. Review of each of each of the generated audit records
					demonstrates that these records are reviewable. 
				</Tests>
			</aactivity>
		</f-element>
		<audit-event/>
      </f-component>

    	<!--               -->     
        <!-- FAU_SAR.3     -->
	<!-- According to FAU_ADP_EXT.1, this SFR is included:
		"If any audit review is performed by an auditor through an interface provided by
		the TSF, then FAU_SAR.1 and FAU_SAR.3 in Annex B.2 will be included in the ST by
		the ST author." 
	     According to this very SFR, "This SFR is included in the ST by the ST author if the operations
 		provided by the TSF (as specified in FAU_ADP_EXT.1) include the review of audit records." 

	     When we figure out how to include FAU_SAR.1, we will know how to include this one.
	-->
	<!--               -->     
        <f-component cc-id="fau_sar.3" name="Selectable Audit Review" status="feat-based">
          <depends on="implements"><ref-id>auditReview</ref-id></depends>
		<f-element>
			<title>
				The TSF shall provide the ability to apply [<h:i>searches</h:i>] of audit data
				based on <assignable>object identifier of certificate</assignable> associated with
				the event.
			</title>
			<note role="application">
	    			This SFR is included in the ST by the ST author if the operations provided by the
				TSF (as specified in FAU_ADP_EXT.1) include the review of audit records. If this
				SFR is not selected, the ST author includes OE.AUDIT_REVIEW. FAU_SCR_EXT.1
				defines the ability of the TOE to search a certificate repository to find certificates
				based on certain values of individual fields, and return an object identifier of the
				certificate. The intent of this SFR--along with FAU_SCR_EXT.1--is that the auditor
				has the ability to obtain a certificate’s unique identifier by searching for other
				known fields and then using that unique identifier as an input to searching audit
				data for all activities involving that certificate. Therefore, the assignment for this
				SFR and the corresponding assignment in FAU_SCR_EXT.1 are to be made
				identical by the ST author.
			</note>
			<aactivity>
				<Tests>
					This activity should be accomplished in conjunction with the testing of
					FAU_GEN.1.
				</Tests>
			</aactivity>
		</f-element>
		<audit-event/>
	</f-component>
				
	<!--               -->     
        <!-- FAU_SCR_EXT.1     -->
	<!-- After considerable analysis, we decided that this SFR should be included if "store" is selected
		in the first selection of FAU_GCR_EXT.1. The reasoning is that the TOE needs to do certificate
  		review if the TOE stores certificates (versus the OE storing certificates).  

		We also believe that the first selection should not be a selection, since this SFR should
		not be included if the OE provides the capability.

 		The app note below is original and has not been changed from the current PP version.   
	-->
	<!--               -->     
        <f-component cc-id="fau_scr_ext.1" name="Certificate Repository Review" status="sel-based">
		<selection-depends req="fau-gcr-ext-1e1" ids="store-certs"/>
	      	<f-element>
			<title>The TSF shall 
				<selectables>   <!-- This should not be a selection, only "provide" makes sense here -->
					<selectable>provide</selectable>
					<selectable>invoke the Operational Environment to provide</selectable>
				</selectables> the capability to search for certificates containing specified values
				of the following certificate fields:
				<selectables linebreak="yes">
					<selectable>subject name</selectable>
					<selectable>individual components of subject alternative name</selectable>
					<selectable>subject ID</selectable>
					<selectable>issuer ID</selectable>
					<selectable>algorithm ID</selectable>
					<selectable>public key</selectable>
					<selectable>key usage</selectable>
					<selectable>extended key usage</selectable>
					<selectable>serial number</selectable>
					<selectable><assignable>list of other certificate fields</assignable></selectable>
				</selectables>,
				returning all matching certificates and
				<assignable>object identifier(s) of matching certificate(s)</assignable>.
			</title>      
			<note role="application">
				The ability to search on certificate fields is useful for conducting forensic analysis.
				If the certificate repository is stored within the TOE boundary, then the first item
				of the first selection is chosen. If the repository is stored in the OE, but the auditor
				uses TSF interfaces to perform this function on the repository, then the second
				item of the first selection is chosen. It is allowed that this function be provided
				entirely by the OE (when the repository is stored in the OE); if this is the case, then
				this requirement is not included in the ST, but instead the
				OE.CERTIFICATE_REPOSITORY_SEARCH objective is included (this objective is
				omitted in the other two cases, when this SFR is included in the ST).<h:br/><h:br/>
				In the second selection and assignment, the ST author includes/fills in the values
				that can be searched on for this function; at least one value is required to be
				selected.
			</note>
			<aactivity>
				<Guidance>
					The following activities apply regardless of the selection made in the first
					selection in the SFR. <h:br/><h:br/>
					The evaluator shall examine the operational guidance to ensure it contains
					instructions for searching the specified information.
				</Guidance>
				<Tests>
					The test activities can be conducted in conjunction with
					those for FDP_CER_EXT.1 and FAU_GCR_EXT.1.<h:br/><h:br/>
					The evaluator shall generate a sufficient number and variety of certificates to
					populate the repository certificates having at least two values for each of the
					search fields selected in this SFR. The evaluator shall then, following the
					instructions within the operational guidance, search the repository or audit
					record for certificates containing specific values for each search field included
					in the ST, and confirm that all certificates matching the search criteria are
					returned; all returned certificates match the criteria; and the object identifier
					is returned. The object identifier will be used in testing for FAU_SAR.3.
				</Tests>
			</aactivity>
		</f-element>
		<audit-event/>
      </f-component>

    	<!--               -->     
        <!-- FAU_SEL.1     -->
	<!-- According to FAU_ADP_EXT.1, this SFR is included:
		"If any audit pre-selection is performed by an auditor through an interface provided
		by the TSF, then FAU_SEL.1 in Annex B.2 will be included in the ST by the ST author."
 
	     According to this very SFR, "This SFR is included in the ST by the ST author if the operations
 		provided by the TSF (as specified in FAU_ADP_EXT.1) include the pre-selection of audit records." 
		
		We are dealing with this by using feat-based. It might make more sense for FAU_ADP_EXT to include a 
		selection of operations, but here we are.
	-->
	<!--               -->     
        <f-component cc-id="fau_sel.1" name="Selective Audit" status="feat-based">
          <depends on="implements"><ref-id>auditPreSelect</ref-id></depends>
		<f-element>
			<title>
				<refinement>Refinement:</refinement> The TSF shall be able to select the set of
				events to be audited by <refinement>specific mechanisms</refinement> from the set of all auditable events
				based on the following attributes:
				<h:ol type="a"><h:li><selectables>
					<selectable>object identity</selectable>
					<selectable>user identity</selectable>
					<selectable>subject identity</selectable>
					<selectable>host identity</selectable>
					<selectable>event type</selectable>
				</selectables></h:li>
				<h:li><assignable>list of additional attributes that audit selectivity 
					is based upon</assignable>.</h:li>
				</h:ol>
			</title>
			<note role="application">
				This SFR is included in the ST by the ST author if the operations provided by the
				TSF (as specified in FAU_ADP_EXT.1) include the pre-selection of audit records.
			</note>
			<aactivity>
				<TSS>
					There are no TSS assurance activities for this requirement beyond what is
					necessary to satisfy the requirements in [CEM].
				</TSS>
				<Guidance>
					The evaluator shall examine the operational guidance to ensure that it itemizes
					all event types, as well as describes all attributes that are to be selectable in
					accordance with the requirement, to include those attributes listed in the
					assignment. The operational guidance shall also contain instructions on how to
					set the pre-selection as well as explain the syntax (if present) for multi-value
					pre-selection. The administrative guidance shall also identify those audit
					records that are always recorded, regardless of the selection criteria currently
					being enforced.
				</Guidance>
				<Tests>
					The evaluator shall perform the following tests:
					<testlist>
						<test>
							For each attribute listed in the requirement, the evaluator shall
							devise a test to show that selecting the attribute causes only audit
							events with that attribute (or those that are always recorded, as
							identified in the administrative guidance) to be recorded.
						</test>
						<test>
							[conditional] If the TSF supports specification of more complex
							audit pre-selection criteria (e.g., multiple attributes, logical
							expressions using attributes) then the evaluator shall devise tests
							showing that this capability is correctly implemented. The evaluator
							shall also, in the test plan, provide a short narrative justifying the set
							of tests as representative and sufficient to exercise the capability.
						</test>
					</testlist>
					<h:i>Equivalency</h:i><h:br/><h:br/>
					Testing of the TOE may be performed on a subset of the platforms listed in the
					TOE's ST. Justification must be provided for those platforms that were excluded
					from testing.
				</Tests>
			</aactivity>
		</f-element>
		<audit-event>
			<audit-event-descr>All modifications to the audit configuration that occur while the audit
				collection functions are operating.</audit-event-descr>
		</audit-event>
	</f-component>		
			
    	<!--               -->     
        <!-- FAU_STG.1(1)     -->
	<!-- According to FAU_ADP_EXT.1, this SFR is included:
		"Audit records stored within the TOE boundary that are generated due to audit
		events marked “extended” in tables 4, 5, and 6 that are included in the ST, then
		FAU_STG.1(2) will be included in the ST by the ST author." But that is not this SFR.
 
	     According to this very SFR, "This requirement applies when the audit data are stored by the TOE 
		itself. If the TSF does not store all (or any) of the audit data, OE.AUDIT_STORAGE is included
		in the ST." 
		
		This really should be activated by a selection in FAU_ADP_EXT.1, but it's an assignmant for some reason.
		So, we're going to use the feature feature until it gets fixed. If that is possible.
	-->
	<!--               -->     
        <f-component cc-id="fau_stg.1" name="Selective Audit" iteration="1" status="feat-based">
          <depends on="implements"><ref-id>auditStorage</ref-id></depends>
		<f-element>
			<title>
				The TSF shall protect the stored audit records in the audit trail from unauthorized
				deletion.
			</title>
		</f-element>
		<f-element>
			<title>
				The TSF shall be able to [<h:i>prevent</h:i>] unauthorized modifications to the
				stored audit records in the audit trail.
			</title>
			<note role="application">
				This requirement applies when the audit data are stored by the TOE itself. If the
				TSF does not store all (or any) of the audit data, OE.AUDIT_STORAGE is included
				in the ST.
			</note>
			<aactivity>
				<TSS>
					The evaluator shall examine the TSS to ensure that it lists each type of audit log
					generated by the TOE. For each audit log, the TSS shall describe how it is stored,
					where it is located, and how it is protected. The evaluator shall verify that the
					TSS’ description of the protection includes prevention of unauthorized
					deletion. The TSS description shall also include prevention of modification. If
					roles other than the Auditor are not provided with an interface for accessing
					the stored audit records, the TSS shall provide a justification for why the role
					cannot delete or modify the audit records.
				</TSS>
				<Guidance>
					There are no AGD assurance activities for this requirement beyond what is
					necessary to satisfy the requirements in [CEM].
				</Guidance>
				<Tests>
					<testlist>
						<test>
							The evaluator shall assume each role (other than the auditor
							role) and attempt to delete the stored audit records, then verify that
							the attempted deletion failed. 
						</test>
						<test>
							The evaluator shall assume each role (including the auditor role)
							and attempt to modify the stored audit records and verify that the
							attempted modification was prevented.
						</test>
					</testlist>
					<h:i>Equivalency</h:i><h:br/><h:br/>
					Testing of the TOE may be performed on a subset of the platforms listed in the
					TOE's ST. Justification must be provided for those platforms that were excluded
					from testing.
				</Tests>
			</aactivity>
		</f-element>
		<audit-event/>
	</f-component>
	    
    	<!--               -->     
        <!-- FAU_STG.1(2)     -->
	<!-- According to FAU_ADP_EXT.1, this SFR is included:
		"Audit records stored within the TOE boundary that are generated due to audit
		events marked “extended” in tables 4, 5, and 6 that are included in the ST, then
		FAU_STG.1(2) will be included in the ST by the ST author." But that is not this SFR.
 
	     According to this very SFR, "This requirement applies to audit data stored within the TOE boundary
 		that is expected to persist intact beyond the validity of certificates issued by the CA, even
		in the event of unexpected TSF failure. Refer to Table 4 through Table 6 for the
		auditable events marked as requiring extended retention that are relevant to this
		SFR." 
		
		See FAU_STG.1(1)
	-->
	<!--               -->     
        <f-component cc-id="fau_stg.1" name="Selective Audit" iteration="2" status="feat-based">
          <depends on="implements"><ref-id>auditStorage</ref-id></depends>
		<f-element>
			<title>
				<refinement>Refinement:</refinement> The TSF shall protect the stored audit records
				<refinement>with extended retention requirements</refinement> in the audit trail
				from deletion prior to their retention period by an auditor.
			</title>
		</f-element>
		<f-element>
			<title>
				<refinement>Refinement:</refinement> The TSF shall be able to [<h:i>prevent</h:i>] 
				modifications to the stored audit records <refinement>with extended retention
				requirements</refinement> in the audit trail.
			</title>
			<note role="application">
				This requirement applies to audit data stored within the TOE boundary that is
				expected to persist intact beyond the validity of certificates issued by the CA, even
				in the event of unexpected TSF failure. Refer to Table 4 through Table 6 for the
				auditable events marked as requiring extended retention that are relevant to this
				SFR.<h:br/><h:br/>
				Audit events that are not covered by this SFR (that is, those requiring extended
				retention and stored in the OE) will be protected via integrity and redundancy
				mechanisms typically provided in archive servers. To reflect this, if any audit
				events marked “extended” in tables 4, 5, and 6 are stored in the OE, then
				OE.AUDIT_RETENTION is included in the ST.<h:br/><h:br/>
				If any audit storage provided by the TOE is used for audit events marked
				“extended” in tables 4, 5, and 6 that are included in the ST, then this SFR will be
				included in the ST by the ST author.
			</note>
			<aactivity>
				<TSS>
					The evaluator shall examine the TSS to ensure that it lists each type of audit log
					generated by the TOE. For each audit log, the TSS shall describe how it is stored,
					where it is located, and how it is protected. The evaluator shall verify that the
					TSS’ description of the protection includes prevention of deletion prior to the
					retention period. The TSS description shall also include prevention of
					modification of events after they are written to the audit trail. If the TSF
					requires the actions of an Auditor to meet these requirements, the TSS shall
					describe the restrictions on Auditor activity. If roles other than the Auditor are
					provided with an interface for accessing the stored audit records, the TSS shall
					provide a justification for why the role cannot delete or modify the audit
					records.
				</TSS>
				<Guidance>
					There are no AGD assurance activities for this requirement beyond what is
					necessary to satisfy the requirements in [CEM].
				</Guidance>
				<Tests>
					The testing may be accomplished with the testing performed by FAU_STG.1(1).<h:br/><h:br/>
					The evaluator shall perform the following tests for each role other than the
					Auditor role:
					<testlist>
						<test>
							For each audit event marked identified with extended retention
							requirements in the ST, the evaluator shall assume a role and attempt
							to delete the stored audit records, then verify that the attempted
							deletion failed. 
						</test>
						<test>
							For each audit event marked identified with extended retention
							requirements in the ST, the evaluator shall assume a role and attempt
							to modify the stored audit records and verify that the attempted
							modification was prevented.
						</test>
					</testlist>
					<h:i>Equivalency</h:i><h:br/><h:br/>
					Testing of the TOE may be performed on a subset of the platforms listed in the
					TOE's ST. Justification must be provided for those platforms that were excluded
					from testing.
				</Tests>
			</aactivity>
		</f-element>
		<audit-event/>
	</f-component>


	<!--               -->     
        <!-- FAU_STG.4     -->
	<!--               -->     
        <f-component cc-id="fau_stg.4" name="Prevention of Audit Data Loss" status="mandatory">
        <f-element>
		<title><h:b>Refinement:</h:b>The TSF shall <refinement>[prevent audited events, except those taken
			by the Auditor]</refinement> and <assignable>other actions to be taken in case of audit storage
			failure</assignable> if the audit trail <h:b>cannot be written to.</h:b>
                </title>
		<note role="application">
			This requirement applies to the TOE regardless of whether the audit trail is stored
			within the TOE boundary (e.g. the audit trail is full) or on an external system in the
			Operational Environment (e.g. the connection to a remote audit repository is
			broken). In either case, the ST author is expected to describe how the TSF is made
			aware of any such failures and how it behaves in response.
		</note>
		<aactivity>
			<TSS>
				The evaluator shall examine the TSS to ensure it describes the behavior of the
				TSF and what actions can be performed by the Auditor, if any, when the audit
				trail is full. 
			</TSS>
			<Guidance>
				The evaluator shall examine the operational guidance to ensure it describes
				what having a full audit trail means and how an Auditor recognizes that this has
				occurred. The evaluator shall also examine the operational guidance to ensure
				it includes remedial steps for correcting the issue. 
			</Guidance>
			<Tests>
				The evaluator shall perform the following tests. Test 1 is performed regardless
				of where the audit repository is stored, since it is testing the capability of the
				TOE to react to an indication that the repository is full. Test 2 is only executed
				in cases where an external repository is supported, and tests the ability of the
				TOE to detect when the connection to the repository becomes unavailable.<h:br/><h:br/>
				<testlist>
					<test>
					        The evaluator shall cause the audit trail to become full, verify
						that the TSF behaves as documented in the TSS, and verify that a
						privileged user can perform the documented remedial steps.
					</test>
					<test> (conditional) If the TOE uses a remote repository in the
						Operational Environment to store audit data, the evaluator shall cause
						the audit trail to become unavailable, verify that the TSF behaves as
						documented in the TSS, and verify that a privileged user can perform
						the documented remedial steps.
					</test>
				</testlist>
				<h:br/><h:br/>
				<h:i>Equivalency</h:i><h:br/><h:br/>
				Testing of the TOE may be performed on a subset of the platforms listed in the
				TOE's ST. Justification must be provided for those platforms that were excluded
				from testing.
			</Tests>
		</aactivity>
        </f-element>
	<audit-event/>
	</f-component>

    	<!--               -->     
        <!-- FAU_STG_EXT.1     -->
		<!-- According to FAU_ADP_EXT.1, this SFR is included:
		"If the TSF initiates the storage of the audit data (that is, it generates audit data
		that will be stored either by the TOE or the OE), then FAU_STG_EXT.1 will be
		included in the ST by the ST Author. "
 
	     According to this very SFR, "This requirement is included in the ST if the TSF initiates the storage 
		of the audit data. The last item in the selection (external audit server) should only be selected
		(and this SFR included in the ST) if the TOE is responsible for connecting to the
		external audit server to store the data." 
		
		I don't understand why this is a selection-based requirement. I am making it mandatory for now.
	-->
	<!--               -->     
        <f-component cc-id="fau_stg_ext.1" name="External Audit Trail Storage" status="mandatory">
<!--		<selection-depends req="fau_adp_ext.1" ids="XXXXXXXXXXXXXXXX"/></selection-depends>  -->
		<f-element id="fau-stg-ext-1e1">
			<title>
				The TSF shall maintain availability and integrity of audit data by storing it
				<selectables>
					<selectable id="loc-TOE">locally on the TOE</selectable>
					<selectable>locally on the TOE platform</selectable>
					<selectable id="tchannel">on an external IT entity using a trusted channel protocol
						defined in FTP_ITC.1</selectable>
				</selectables>.
			</title>
			<note role="application">
				There are 3 cases for the storage of audit data: Locally on the TOE (within the TOE
				boundary without going over a network connection); locally on the TOE platform
				(outside the TOE boundary, but without going over a network connection); and
				external to the TOE platform (meaning over a network connection to a physically
				distinct IT entity). The TOE may rely on a non-TOE audit server for storage of these
				audit records and the ability to allow the administrator to review these audit
				records is provided by the operational environment. In the selection, the ST author
				chooses the method used by the TOE to store audit data.<h:br/><h:br/>
				This requirement is included in the ST if the TSF initiates the storage of the audit
				data. The last item in the selection (external audit server) should only be selected
				(and this SFR included in the ST) if the TOE is responsible for connecting to the
				external audit server to store the data.<h:br/><h:br/>
				If the last item in the selection is chosen, the ST author must include FTP_ITC.1
				with “audit server” selection, and ensures that the supporting protocol
				requirement matches the selection is included in the ST.<h:br/><h:br/>
				The TOE platform and external IT entity are considered part of the Operational
				Environment.
			</note>
			<aactivity>
				<TSS>
					The evaluator shall examine the TSS to ensure it describes the audit storage
					mechanism from the perspective of the TOE. The TSS must also describe the
					means by which the audit data are stored locally, or transferred to the external
					IT entity (and how the trusted channel is provided). 
				</TSS>
				<Guidance>
					The evaluator shall examine the operational guidance to ensure it describes
					the configuration of any local audit storage mechanism (first two items in the
					selection in the SFR), including its location and size.<h:br/><h:br/>
					The evaluator shall examine the operational guidance to determine that it
					describes the relationship between the local audit data (stored inside the TOE
					boundary and, if applicable, on the TOE platform) and the audit data that are
					sent to the external IT entity (if applicable). For example, when an audit event
					is generated, whether it is simultaneously sent to the external IT entity and the
					local store, or is the local store used as a buffer and “cleared” periodically by
					sending the data to the external IT entity.<h:br/><h:br/>
					If an external audit server is used, the evaluator shall also examine the
					operational guidance to ensure it describes how to establish the trusted
					channel to the audit server, as well as describe any requirements on the audit
					server (particular audit server protocol, version of the protocol required, etc.),
					as well as configuration of the TOE needed to communicate with the audit
					server.
				</Guidance>
				<Tests>
					Testing of the trusted channel mechanism (if the last item is selected in the
					SFR) will be performed as specified in the associated assurance activities for
					the particular trusted channel mechanism.<h:br/><h:br/>
					The evaluator shall perform the following tests if the last selection in the SFR is
					made:
					<testlist>
						<test>
							[conditional] The evaluator shall establish a connection
							between the TOE and the audit server according to the configuration
							guidance provided. The evaluator shall then examine the traffic that
							passes between the audit server and the TOE during several activities
							of the evaluator’s choice designed to generate audit data to be
							transferred to the audit server. The evaluator shall verify that the
							connection has been successfully established, and that they are
							successfully received by the audit server. The evaluator shall record the
							particular software (name, version) used on the audit server during
							testing.
						</test>
						<test>
							[conditional] The evaluator shall examine the audit data
							transferred to the external audit server in Test 1 and compare it to the
							locally stored audit data. The evaluator shall verify that the audit
							records match. If there and any differences, the evaluator shall
							examine the operational guidance to verify that it explains any
							discrepancies between locally stored and transmitted audit data. 
						</test>
					</testlist>
					<h:i>Equivalency</h:i><h:br/><h:br/>
					Testing of the TOE may be performed on a subset of the platforms listed in the
					TOE's ST. Justification must be provided for those platforms that were excluded
					from testing.
				</Tests>
			</aactivity>
		</f-element>
		<audit-event/>
	</f-component>

    	<!--               -->     
        <!-- FAU_STG_EXT.2     -->
	<!-- According to FAU_ADP_EXT.1, this SFR is included:
		""
 
	     According to this very SFR, "This SFR is to be included if “locally on the TOE” is selected in FAU_STG_EXT.1, and
		OE.AUDIT_RETENTION is not included in the ST. " 
	-->
	<!--               -->     
        <f-component cc-id="fau_stg_ext.2" name="Audit Data Retention" status="sel-based">
		<selection-depends req="fau-stg-ext-1e1" ids="loc-TOE"/>
		<f-element>
			<title>
				The TSF shall apply the following rules for retention of audit data: 
				<h:ul>
					<h:li>Audit records required to have extended retention shall be retained at
						least until an auditor configured extension beyond the validity of 
						all certificates impacted by the event. </h:li>
					<h:li><assignable>list of rules</assignable></h:li>
				</h:ul>
			</title>
			<note role="application">
				This SFR is to be included if “locally on the TOE” is selected in FAU_STG_EXT.1, and
				OE.AUDIT_RETENTION is not included in the ST. The TSF may apply different
				policies for different types of audit data (e.g. one type of record may be stored
				indefinitely while another type is automatically purged after a set period of time).
				If this SFR is not included in the ST, then OE.AUDIT_RETENTION is included in the
				ST.
			</note>
			<aactivity>
				<TSS>
					The evaluator shall review the TSS to ensure the rules specified are adequate
					for the retention of audit records as indicated in Tables 4 through 6.<h:br/><h:br/>
					The evaluator shall assume the role of an auditor and establish an extension
					period for the retention of certificate-related audit records. The evaluator shall
					cause the TSF to issue a certificate of short validity period. Prior to the
					retention period (not-after-date+extension), and prior to transferring the audit
					record to an external archive, the evaluator shall attempt to delete he audit
					record of an event marked ‘extended’, and observe that the audit record was
					not deleted. Also during this time, the evaluator shall attempt to modify the
					audit record of an event marked ‘extended’, and observe that the audit record
					was not modified. 
				</TSS>
			</aactivity>
		</f-element>
		<audit-event/>
	</f-component>


	</subsection>
	    
        <!--                             -->
	<!-- Class: FCO: Communications  -->
        <!--                             -->
      <subsection title="Class: Communications (FCO)" id="fco">

	<!--               -->     
        <!-- FCO_NRO_EXT.2 -->
	<!--               -->     
	<f-component cc-id="fco_nro_ext.2" name="Certificate-Based Proof of Origin">
		<f-element>
               	<title>The TSF shall provide proof of origin for certificates it issues in accordance with
			the digital signature requirements using a mechanism in accordance with RFC
			5280 and FCS_COP.1(2).
                </title>
		</f-element>
		<f-element>
               	<title>The TSF shall provide proof of origin for certificate status information it issues in
			accordance with the digital signature requirements in 
			<selectables><selectable>CRLs (RFC 5280)</selectable>
				<selectable>OCSP (RFC 6960)</selectable>
				<selectable><assignable>other OCSP standards</assignable></selectable>
			</selectables> and FCS_COP.1(2).
                </title>
		</f-element>
		<f-element>
               	<title>The TSF shall require and verify proof of origin for certificate requests it receives
			<selectables><selectable>CMC using mechanisms in accordance with FIA_CMCS_EXT.1</selectable>
				<selectable>EST using mechanisms in accordance with FIA_ESTS_EXT.1</selectable></selectables>.
                </title>
		</f-element>
		<f-element>
               	<title>The TSF shall require and verify proof of origin for public keys contained in
			certificate requests it receives via 
			<selectables><selectable>proof-of-possession mechanisms in CMC using mechanisms in
				accordance with FIA_CMCS_EXT.1</selectable>
				<selectable>proof-of-possession mechanisms in EST in accordance with FIA_ESTS_EXT.1</selectable>
			</selectables>.
                </title>
		</f-element>
		<f-element>
               	<title>The TSF shall 
			<selectables>
				<selectable>require and verify proof of origin for revocation requests it receives via
					<selectables>
						<selectable>CMC using mechanisms in accordance with FIA_CMCS_EXT.1</selectable>
						<selectable>EST using optional “full CMC” functionality in accordance with FIA_ESTS_EXT.1</selectable>
					</selectables>
				</selectable>
				<selectable>
					<assignable>support manual processes for revocation requests and responses</assignable>
				</selectable>
			</selectables>.
		</title>
                <note role="application">
			The TOE is responsible for providing proof of origin for information it issues and
			verifying proof of origin for information it receives. Based on what is chosen in the
			selection for FCO_NRO_EXT.2.2, the applicable requirements from Annex B (i.e.,
			FDP_CRL_EXT.1, FDP_OCSPG_EXT.1) must be included. Based on what is chosen
			in the selections for FCO_NRO_EXT.2.3-FCO_NRO_EXT.2.5, the applicable
			requirements from Annex B (i.e., FIA_CMCS_EXT.1, FIA_ESTS_EXT.1) must be
			included. <h:br/><h:br/>
			A TOE that supports both EST and CMC and can obtain revocation requests via
			one of the protocols would be in compliance with FCO_NRO_EXT.2.5. Manual
			process to support revocation requests and responses are claimed and described
			if EST does not support full CMC requests and CMC is not claimed.<h:br/><h:br/>
			This SFR references FCS_COP.1(2) which, according to FCS_CDP_EXT.1, may be
			implemented by the TOE or the OE. If FCS_CDP_EXT.1 indicates that FCS_COP.1(2)
			is implemented by the OE, then FCO_NRO_EXT.2.1 and FCO_NRO_EXT.2.2 are in
			accordance with FCS_COP.1(2) if they interface with the OE to invoke the
			signature algorithms indicated in FCS_COP.1(2). 
		</note>
		<aactivity>
			<TSS>
				The evaluator shall examine the TSS to ensure it describes the mechanisms
				used for generating proof of origin and the security-relevant information to
				which the mechanism applies. The TSS shall describe how the TSF relates the
				identity and other specified attributes of the originator of the information to
				the security relevant portions of the information to which the evidence applies.
				The TSS shall also describe how verification of the proof of origin of information
				for all security-relevant information is performed and shall also specify the
				cases in which verification of proof of origin is performed.<h:br/><h:br/>
				For TOEs that only support EST, and do not support revocation requests under
				either CMC or EST, the TSS must describe the mechanism used to determine
				whether to revoke certificates.<h:br/><h:br/>
				For TOEs that select “support manual processes for revocation requests and
				responses,” the evaluator shall ensure the TSS describes those processes.
			</TSS>
			<Guidance>
				If configurable, evaluator shall examine the operational guidance to ensure it
				defines how to configure the applicable algorithms used for providing and
				verifying proof of origin as defined in FCS_COP.1(2).<h:br/><h:br/>
				For TOEs that only support EST, and do not support revocation requests under
				either CMC or EST, the evaluator shall examine the guidance to ensure it
				describes support for privileged user functionality as part of this mechanism.<h:br/><h:br/>
				For TOEs that select “support manual processes for revocation requests and
				responses,” the evaluator shall ensure the operational guidance provides a
				description of the processes the administrators are to follow. The evaluator
				shall ensure these are consistent with the descriptions of these processes in
				the TSS.
			</Guidance>
			<Tests>
				The evaluator shall perform the following tests for each request format
				selected and for each request supported:<h:br/><h:br/>
				TOE is online (requires establishment of a client capable of generating
				certificate requests and has a valid HTTPS connection to the TOE):
                                <testlist>
                                    <test>For each supported request, the evaluator shall generate and
					submit a properly authenticated request to the TOE and verify the
					responses are signed.
                                    </test>
                                    <test>For each supported request, the evaluator shall generate
					requests that are unsigned, submit to the TOE, and verify that the TOE
					rejects the request.
                                    </test>
                                    <test>For each supported request, the evaluator shall generate
					requests that have an invalid signature based on the RFC, submit to the
					TOE, and verify that the TOE rejects the request.
                                    </test>
                                    <test>For each supported request, the evaluator shall generate
					requests that are not signed by authorized entities, submit to the TOE,
					and verify that the TOE rejects the request.
                                    </test>
                                    <test>For each supported request using password based
					authentication, the evaluator shall use invalid passwords and verify
					that the TSF rejects the requests.
                                    </test>
                                    <test>For each proof of possession mode supported, the evaluator
					shall generate an otherwise valid request but modify the proof of
					possession value. The evaluator shall submit the modified request and
					verify that the TSF rejects the request.
                                    </test>
                                    <test>(Transport Test) For each supported request message, the evaluator shall send
					an otherwise valid request using HTTP rather than HTTPS and shall
					verify the TSF rejects the request.
                                    </test>
                                    <test>(Offline Test): With the TOE in offline mode, the evaluator shall log into the
					TOE locally as the CA Operations Staff role and perform tests 1-4
					above.
                                    </test>
                                </testlist>
				<h:i>Equivalency</h:i>
				Testing of the TOE may be performed on a subset of the platforms listed in the
				TOE's ST. Justification must be provided for those platforms that were excluded
				from testing.
			</Tests>
                    </aactivity>
		</f-element>
	    <audit-event/>
          </f-component>

	    
    <!--                  -->     
    <!-- FCO_NRR_EXT.2 -->
    <!-- Selection-based  -->
    <!--                  -->    	      
<f-component name="Certificate-Based Proof of Receipt" cc-id="fco_nrr_ext.2" status="sel-based">
	<selection-depends req="fia-cmcs-ext-1e2" ids="sel-cert-req-protocol"/>
	<f-element id="fco-nrr-ext-2e1">
		<title>
			The TSF shall provide proof of receipt for 
			<selectables>
				<selectable>CMC</selectable>
				<selectable>EST</selectable>
			</selectables> by providing signed responses using mechanisms in accordance with 
			<selectables>
				<selectable id="sel-fia-cmcs-ext-1">FIA_CMCS_EXT.1</selectable>
				<selectable id="sel-fia-ests-ext-1">FIA_ESTS_EXT.1</selectable>
			</selectables>.
		</title>
		<note role="application">
			Based on what is chosen in the selections, the applicable requirements from Annex
			B (i.e., FIA_CMCS_EXT.1, FIA_ESTS_EXT.1) must be included.<h:br/><h:br/>
			This SFR is claimed if “CMC full responses” is selected in FIA_CMCS_EXT.1.2.
		</note>
		<aactivity>
			<TSS>
				The evaluator shall examine the TSS to ensure it describes the mechanisms
				used for generating proof of origin for certificate request response.<h:br/><h:br/>
				If configurable, evaluator shall examine the operational guidance to ensure it
				defines how to configure the applicable algorithms used for providing proof of
				origin as defined in FCS_COP.1(2).
			</TSS>
			<Tests>
				The evaluator shall perform the following test for each selection:
				<testlist>
					<test>
						For each supported request message, the evaluator shall
						generate and submit a properly authenticated request to the TOE and
						verify the response is signed. The evaluator shall verify the signature
						on the responses and show that they are signed by the TOE that
						generated the response.
					</test>
				</testlist>
				<h:i>Equivalency</h:i><h:br/><h:br/>
				Testing of the TOE may be performed on a subset of the platforms listed in the
				TOE’s ST. Justification must be provided for those platforms that were excluded
				from testing.
			</Tests>
		</aactivity>
	</f-element>
	<audit-event />
</f-component>
		
</subsection>
	
	    
	      
        <!--                             -->
	<!-- Class: FCS: Cryptographic Support  -->
        <!--                             -->
      <subsection title="Class: Cryptographic Support (FCS)" id="fcs">

	      
	      		<!-- Test for audit events added to external package - FCS_COP.1/FLERM -->
		<f-component-decl cc-id="fcs_cop.1" iteration="FLERM" name="Cryptographic Operation (Flerming)" status="optional" pkg-id="pkg_tls">
			<audit-event>
				<audit-event-descr>All the things</audit-event-descr>
				<audit-event-info>The thing about the place</audit-event-info>
			</audit-event>
			<audit-event type="optional">
				<audit-event-descr>All the other things</audit-event-descr>
				<audit-event-info>The thing about the place</audit-event-info>
			</audit-event>
		</f-component-decl>

      		<!-- Test for audit events added to external package - FCS_COP.1/FLERM -->
		<f-component-decl cc-id="fcs_cop.2" iteration="FLARM" name="Cryptographic Operation (Flerming)" pkg-id="pkg_tls">
			<audit-event>
				<audit-event-descr>All the things</audit-event-descr>
				<audit-event-info>The thing about the place</audit-event-info>
			</audit-event>
			<audit-event type="optional">
				<audit-event-descr>All the other things</audit-event-descr>
				<audit-event-info>The thing about the place</audit-event-info>
			</audit-event>
		</f-component-decl>

	      
	<!--               -->     
    <!-- FCS_CDP_EXT.1 -->
	<!--               -->     
        <f-component cc-id="fcs_cdp_ext.1" name="Cryptographic Dependencies">
          <f-element id="fcs-cdp-ext-1e1">
            <title> The TSF shall 
		    <selectables>
			    <selectable>implement cryptographic functionality</selectable>
			    <selectable>invoke interfaces provided by the Operational Environment</selectable>
		    </selectables>
		    in order to perform 
		    <selectables>
			    <selectable id="crypto-sel-ckm-1">FCS_CKM.1</selectable>
			    <selectable id="crypto-sel-ckm-2">FCS_CKM.2</selectable>
			    <selectable id="crypto-sel-ckm-ext-1i1">FCS_CKM_EXT.1(1)</selectable>
                            <selectable id="crypto-sel-ckm-ext-1i2">FCS_CKM_EXT.1(2)</selectable>  <!-- Is this here? -->
			    <selectable id="crypto-sel-ckm-ext-1i3">FCS_CKM_EXT.1(3)</selectable>
			    <selectable id="crypto-sel-ckm-ext-1i4">FCS_CKM_EXT.1(4)</selectable>
			    <selectable id="crypto-sel-ckm-ext-4">FCS_CKM_EXT.4</selectable>
			    <selectable id="crypto-sel-ckm-ext-5">FCS_CKM_EXT.5</selectable>
			    <selectable id="crypto-sel-ckm-ext-6">FCS_CKM_EXT.6</selectable>
		            <selectable id="crypto-sel-ckm-ext-7">FCS_CKM_EXT.7</selectable>
			    <selectable id="crypto-sel-ckm-ext-8">FCS_CKM_EXT.8</selectable>
			    <selectable id="crypto-sel-cop-1i1">FCS_COP.1(1)</selectable>
			    <selectable id="crypto-sel-cop-1i2">FCS_COP.1(2)</selectable>
			    <selectable id="crypto-sel-cop-1i3">FCS_COP.1(3)</selectable>
			    <selectable id="crypto-sel-cop-1i4">FCS_COP.1(4)</selectable>
			    <selectable id="crypto-sel-rbg-ext-1">FCS_RBG_EXT.1</selectable>
			    <selectable id="crypto-sel-ksh-ext-1">FCS_KSH_EXT.1</selectable>
		    </selectables>
		    cryptographic operations.
            </title>
            <note role="application"> 
		Cryptographic functionality can be provided entirely by the TOE, entirely by the
		Operational Environment, or by both. The SFRs that detail the cryptographic
		functionality are contained in Annexes A, B, and C; these SFRs are included in the
		ST depending on selections in other SFRs that describe the mandated and optional
		functionality that requires cryptographic functions (for instance, the inclusion of
		TLS). The appropriate selection for whether the cryptographic functionality is
		implemented by the TOE or by the OE is made for each of the SFRs in the Annex
		when instantiated in the ST. If both the TSF and OE work together to provide the
		required cryptography for the TOE, iterate this SFR once for the TSF and once of
		the OE, and list the specific SFRs implemented by each. In aggregate, all
		cryptographic SFRs required by the TOE should be listed. <h:br/><h:br/>
		    
		The only exception to this case is where the cryptographic function is implemented
		in the OE and there is no direct TSF invocation for that function. For instance, if
		the DRBG is implemented by an HSM that is in the OE, that the TOE only invokes
		the HSM for higher-level cryptographic functions (such as “create key”, “sign
		certificate”, etc.), then (in that case) FCS_RBG_EXT.1 would not appear in any
		iteration of the FCS_CDP_EXT.<h:br/><h:br/>
    
		If the functionality is provided by communicating over a network connection with
		a physically external cryptographic device, then the ST author must include
		FTP_ITC.1 with “external cryptographic module” selected.<h:br/><h:br/>
   
		The individual cryptographic SFRs may have Assurance Activities in addition to
		those specified below; the intent is that the Assurance Activities below augment
		those that are provided for the individual cryptographic SFRs.		
	    </note>
            <aactivity>
              <TSS> If the TSF invokes interfaces to a cryptographic module in the Operational
		Environment to provide the necessary cryptographic functionality, the
		evaluator shall review the TSS to ensure that it specifies the interfaces that
		are invoked, and the cryptographic provider of the functionality. The
		evaluator shall review the TSS and verify that all cryptographic SFRs required
		by the ST—through inclusion of (other) mandatory and optional SFRs--are
		included.<h:br/><h:br/>
		Other required TSS activities are associated with the cryptographic SFRs
		themselves.    
	      </TSS>
              <Guidance>
		Required Guidance activities are associated with the cryptographic SFRs themselves.
              </Guidance>
              <Tests>
		Required Test activities are associated with the cryptographic SFRs themselves.
              </Tests>
            </aactivity>
          </f-element>
		<audit-event/>
    </f-component>

    <!--                  -->     
    <!-- FCS_CKM.1 -->
    <!-- Selection-based on FCS_CDP_EXT.1 -->
    <!--                  -->     
    <f-component cc-id="fcs_ckm.1" name="Cryptographic Key Generation" status="sel-based">
	<selection-depends req="fcs-cdp-ext-1e1" ids="crypto-sel-ckm-1"/>
	<f-element>
		<title><refinement>Refinement:</refinement> The TSF shall <refinement>
			<selectables>
				<selectable>generate</selectable>
				<selectable>invoke interfaces provided by the Operational Environment to generate</selectable>
			</selectables> asymmetric </refinement>cryptographic keys in accordance with the specified key generation algorithm:
			<selectables linebreak="yes">
				<selectable>RSA schemes using cryptographic key sizes of 2048-bit or
					greater that meet the following: FIPS PUB 186-4, “Digital Signature Standard (DSS)”, Appendix B.3;</selectable>
				<selectable>ECC schemes using “NIST curves”
					<selectables>
						<selectable>P-256</selectable>
						<selectable>P-384</selectable>
						<selectable>P-521</selectable>
					</selectables>
					that meet the following: FIPS PUB 186-4, “Digital Signature Standard (DSS)”, Appendix B.4;</selectable>
				<selectable>FFC schemes using cryptographic key sizes of 2048-bit or
					greater that meet the following: FIPS PUB 186-4, “Digital Signature Standard (DSS)”,
					Appendix B.1</selectable>
			</selectables>
			and specified cryptographic key sizes 
				<assignable>equivalent to or greater than a symmetric key strength of 112 bits</assignable>
				<h:s>that meet the following: [assignment: list of standards]</h:s>.
		</title>
	    	<note role="application">
			The ST authors should specify whether the TOE generates these keys or whether
			the Operational Environment is used.<h:br/><h:br/>
			For keys used for authentication, only RSA- or ECC-based selections are allowed.
			The ST author will make clear in the ST which keys are used for what purpose.<h:br/><h:br/>
			This component requires that the TSF or Operational Environment be able to
			generate the public/private key pairs that are used for key establishment purposes
			for the various cryptographic protocols (HTTPS, TLS, IPsec, SSH) used by the TOE.
			If multiple schemes are supported, then the ST author should iterate this
			requirement to capture this capability. The scheme used will be chosen by the ST
			author from the selection.<h:br/><h:br/>
			Since the domain parameters to be used are specified by the requirements of the
			protocol in this PP, it is not expected that the TOE will generate domain
			parameters, and therefore there is no additional domain parameter validation
			needed when the TOE complies with the protocols specified in this PP.<h:br/><h:br/>
			The generated key strength of 2048-bit DSA and RSA keys need to be equivalent
			to, or greater than, a symmetric key strength of 112 bits. See NIST Special
			Publication 800-57, “Recommendation for Key Management” for information
			about equivalent key strengths. 
		</note>	
		<aactivity>
			<TSS>
				The evaluator shall ensure that the TSS identifies the key sizes supported. If the
				ST specifies more than one scheme, the evaluator shall examine the TSS to
				verify that it identifies the usage for each scheme.<h:br/><h:br/>
			</TSS>
			<Guidance>
				The evaluator shall verify that the AGD guidance instructs the administrator
				how to configure the TOE or OE to use the selected key generation scheme(s)
				and key size(s) for all cryptographic protocols defined in the Security Target.<h:br/><h:br/>
			</Guidance>
			<Tests>
				If this requirement is met by the TOE, the evaluator shall verify the
				implementation of the key generation routines of the supported schemes using
				the following tests:<h:br/><h:br/>
				<h:h4>Key Generation for FIPS PUB 186-4 RSA Schemes</h:h4><h:br/><h:br/>
				The evaluator shall verify the implementation of RSA Key Generation by the
				TOE using the Key Generation test. This test verifies the ability of the TSF to
				correctly produce values for the key components including the public
				verification exponent e, the private prime factors p and q, the public modulus
				n and the calculation of the private signature exponent d.<h:br/><h:br/>
				Key Pair generation specifies 5 ways (or methods) to generate the primes p
				and q. These include:<h:br/><h:br/>
				<h:ol type="a">
					<h:li>Random Primes:<h:ul>  
						<h:li>Provable Primes</h:li>
						<h:li>Probable Primes</h:li>
					</h:ul></h:li>
					<h:li>Primes with Conditions:<h:ul>
						<h:li>Primes p1, p2, q1,q2, p and q shall all be provable primes</h:li>
						<h:li>Primes p1, p2, q1, and q2 shall be provable primes and p and q
							shall be probable primes</h:li>
						<h:li> Primes p1, p2, q1,q2, p and q shall all be probable primes</h:li>
					</h:ul></h:li>
				</h:ol>
				To test the key generation method for the Random Provable primes method
				and for all the Primes with Conditions methods, the evaluator must seed the
				TSF key generation routine with sufficient data to deterministically generate
				the RSA key pair. This includes the random seed(s), the public exponent of
				the RSA key, and the desired key length. For each key length supported, the
				evaluator shall have the TSF generate 25 key pairs. The evaluator shall verify
				the correctness of the TSF’s implementation by comparing values generated
				by the TSF with those generated from a known good implementation.<h:br/><h:br/>
				<h:h4>Key Generation for Elliptic Curve Cryptography (ECC)</h:h4>
				<h:h5>FIPS 186-4 ECC Key Generation Test</h:h5>
				For each supported NIST curve, i.e., P-256, P-384 and P-521, the evaluator
				shall require the implementation under test (IUT) to generate 10 private/public
				key pairs. The private key shall be generated using an approved random bit
				generator (RBG). To determine correctness, the evaluator shall submit the
				generated key pairs to the public key verification (PKV) function of a known
				good implementation.
				<h:h5>FIPS 186-4 Public Key Verification (PKV) Test</h:h5>
				For each supported NIST curve, i.e., P-256, P-384 and P-521, the evaluator
				shall generate 10 private/public key pairs using the key generation function of
				a known good implementation and modify five of the public key values so that
				they are incorrect, leaving five values unchanged (i.e., correct). The evaluator
				shall obtain in response a set of 10 PASS/FAIL values.
				<h:h5>Key Generation for Finite-Field Cryptography (FFC)</h:h5>
				The evaluator shall verify the implementation of the Parameters Generation
				and the Key Generation for FFC by the TOE using the Parameter Generation
				and Key Generation test. This test verifies the ability of the TSF to correctly
				produce values for the field prime p, the cryptographic prime q (dividing p-1),
				the cryptographic group generator g, and the calculation of the private key x
				and public key y.<h:br/><h:br/>
				The Parameter generation specifies 2 ways (or methods) to generate the
				cryptographic prime q and the field prime p:
				<h:ul><h:li>Primes q and p shall both be provable primes</h:li>
					<h:li>Primes q and field prime p shall both be probable primes</h:li>
				</h:ul>
				and two ways to generate the cryptographic group generator g:
				<h:ul><h:li> Generator g constructed through a verifiable process</h:li>
					<h:li> Generator g constructed through an unverifiable process.</h:li>
				</h:ul>
				The Key generation specifies 2 ways to generate the private key x:
				<h:ul><h:li>len(q) bit output of RBG where 1 &lt;=x &lt;= q-1</h:li>
					<h:li>len(q) + 64 bit output of RBG, followed by a mod q-1 operation
						and a +1 operation, where 1&lt;= x&lt;=q-1.</h:li>
				</h:ul>
				The security strength of the RBG must be at least that of the security offered
				by the FFC parameter set.<h:br/><h:br/>
				To test the cryptographic and field prime generation method for the provable
				primes method and/or the group generator g for a verifiable process, the
				evaluator must seed the TSF parameter generation routine with sufficient data
				to deterministically generate the parameter set.<h:br/><h:br/>
				For each key length supported, the evaluator shall have the TSF generate 25
				parameter sets and key pairs. The evaluator shall verify the correctness of the
				TSF’s implementation by comparing values generated by the TSF with those
				generated from a known good implementation. Verification must also confirm
				<h:ul><h:li>g != 0,1</h:li>
					<h:li>q divides p-1</h:li>
					<h:li>g^q mod p = 1</h:li>
					<h:li>g^x mod p = y</h:li>
				</h:ul>
				for each FFC parameter set and key pair.<h:br/><h:br/>
				<h:i>Equivalency</h:i>
				Testing of the TOE may be performed on a subset of the platforms listed in the
				TOE’s ST. Justification must be provided for those platforms that were excluded
				from testing.<h:br/><h:br/>
			</Tests>
		</aactivity>
	</f-element>
        <audit-event>
		<audit-event-descr>Generation of non-ephemeral key for TOE-related funtions.</audit-event-descr>
		<audit-event-info>Public key generated if successful</audit-event-info>
	</audit-event>
	<audit-event type="optional">
		<audit-event-descr>Generation of ephemeral key for TOE-related functions.</audit-event-descr>
		<audit-event-info>Public key generated if successful.</audit-event-info>
	</audit-event>
    </f-component>
			
    <!--                  -->     
    <!-- FCS_CKM.2 -->
    <!-- Selection-based on FCS_CDP_EXT.1 -->
    <!--                  -->     
    <f-component cc-id="fcs_ckm.2" name="Cryptographic Key Establishment" status="sel-based">
	<selection-depends req="fcs-cdp-ext-1e1" ids="crypto-sel-ckm-2"/>
	<f-element>
		<title>
			<refinement> Refinement:</refinement>The TSF shall <refinement>
			<selectables>
				<selectable>perform</selectable>
				<selectable>invoke interfaces provided by the Operational Environment to perform</selectable>
			</selectables> key establishment </refinement>in accordance with a
			specified cryptographic key <refinement>establishment</refinement> algorithm
			<refinement><selectables linebreak="yes">
				<selectable>RSA-based key establishment schemes that meet the following: NIST
					Special Publication 800-56B Revision 1, “Recommendation for Pair-Wise
					Key Establishment Schemes Using Integer Factorization Cryptography”;</selectable>
	      			<selectable>Elliptic curve-based key establishment schemes that meet the following:
					NIST Special Publication 800-56A Revision 2, “Recommendation for 
					PairWise Key Establishment Schemes Using Discrete Logarithm 
					Cryptography”;</selectable>
				<selectable>Finite field-based key establishment schemes that meet the following: NIST
					Special Publication 800-56A Revision 2, “Recommendation for Pair-Wise
					Key Establishment Schemes Using Discrete Logarithm Cryptography”;</selectable>
				<selectable>Key establishment scheme using Diffie-Hellman group 14 that meetsthe
					following: RFC 3526, Section 3;</selectable>
			</selectables></refinement>
			<h:s>that meet the following: [assignment: list of standards]</h:s>.
		</title>
		<note role="application">
			This is a refinement of the SFR FCS_CKM.2 to deal with key establishment rather
			than key distribution. The ST authors should specify whether the TOE performs
			the key establishment function or whether the Operational Environment is used.<h:br/><h:br/>
			The ST author selects all key establishment schemes used for the selected
			cryptographic protocols. For Diffie-Hellman group 14, ST authors should make the
			corresponding selection from the SFR instead of using the Finite field-based key
			establishment selection.<h:br/><h:br/>
			The RSA-based key establishment schemes are described in Section 9 of NIST SP
			800-56B Revision 1; however, Section 9 relies on implementation of other
			sections in SP 800-56B Revision 1. <h:br/><h:br/>
			The elliptic curves used for the key establishment scheme correlate with the
			curves specified in FCS_CKM.1.1.<h:br/><h:br/>
			The domain parameters used for the finite field-based key establishment scheme
			are specified by the key generation according to FCS_CKM.1.1.
		</note>
		<aactivity>
			<TSS>
				The evaluator shall ensure that the supported key establishment schemes
				correspond to the key generation schemes identified in FCS_CKM.1.1. If the ST
				specifies more than one scheme, the evaluator shall examine the TSS to verify
				that it identifies the usage for each scheme (including whether the TOE acts as
				a sender, a recipient, or both). If Diffie-Hellman group 14 is selected from
				FCS_CKM.2.1, the TSS shall describe how the implementation meets RFC 3526
				Section 3.
			</TSS>
			<Guidance>
				The evaluator shall examine the AGD guidance to ensure it contains
				instructions for configuring the TOE or Operational Environment to use the
				selected key establishment scheme(s).
			</Guidance>
			<Tests>
				If this requirement is met by the TOE, the evaluator shall verify the
				implementation of the key generation routines of the supported schemes using
				the following tests:<h:br/><h:br/>
				<h:h4>SP800-56A Key Establishment Schemes</h:h4>
				The evaluator shall verify a TOE's implementation of SP800-56A key agreement
				schemes using the following Function and Validity tests. These validation tests
				for each key agreement scheme verify that a TOE has implemented the
				components of the key agreement scheme according to the specifications in
				the Recommendation. These components include the calculation of the DLC
				primitives (the shared secret value Z) and the calculation of the derived keying
				material (DKM) via the Key Derivation Function (KDF). If key confirmation is
				supported, the evaluator shall also verify that the components of key
				confirmation have been implemented correctly, using the test procedures
				described below. This includes the parsing of the DKM, the generation of
				MACdata and the calculation of MACtag. <h:br/><h:br/>
				<h:i>Function Test</h:i><h:br/><h:br/>
				The Function test verifies the ability of the TOE to implement the key
				agreement schemes correctly. To conduct this test the evaluator shall generate
				or obtain test vectors from a known good implementation of the TOE
				supported schemes. For each supported key agreement scheme-key 
				agreement role combination, KDF type, and, if supported, key confirmation
				role- key confirmation type combination, the tester shall generate 10 sets of
				test vectors. The data set consists of one set of domain parameter values (FFC)
				or the NIST approved curve (ECC) per 10 sets of public keys. These keys are
				static, ephemeral or both depending on the scheme being tested.<h:br/><h:br/>
				The evaluator shall obtain the DKM, the corresponding TOE’s public keys (static
				and/or ephemeral), the MAC tag(s), and any inputs used in the KDF, such as the
				Other Information field OI and TOE id fields.<h:br/><h:br/>
				If the TOE does not use a KDF defined in SP 800-56A, the evaluator shall obtain
				only the public keys and the hashed value of the shared secret.<h:br/><h:br/>
				The evaluator shall verify the correctness of the TSF’s implementation of a
				given scheme by using a known good implementation to calculate the shared
				secret value, derive the keying material DKM, and compare hashes or MAC tags
				generated from these values.<h:br/><h:br/>
				If key confirmation is supported, the TSF shall perform the above for each
				implemented approved MAC algorithm. <h:br/><h:br/>
				<h:i>Validity Test</h:i>
				The Validity test verifies the ability of the TOE to recognize another party’s valid
				and invalid key agreement results with or without key confirmation. To conduct
				this test, the evaluator shall obtain a list of the supporting cryptographic
				functions included in the SP800-56A key agreement implementation to
				determine which errors the TOE should be able to recognize. The evaluator
				generates a set of 24 (FFC) or 30 (ECC) test vectors consisting of data sets
				including domain parameter values or NIST approved curves, the evaluator’s
				public keys, the TOE’s public/private key pairs, MACTag, and any inputs used in
				the KDF, such as the other info and TOE id fields.<h:br/><h:br/>
				The evaluator shall inject an error in some of the test vectors to test that the
				TOE recognizes invalid key agreement results caused by the following fields
				being incorrect: the shared secret value Z, the DKM, the other information field
				OI, the data to be MACed, or the generated MACTag. If the TOE contains the
				full or partial (only ECC) public key validation, the evaluator will also individually
				inject errors in both parties’ static public keys, both parties’ ephemeral public
				keys and the TOE’s static private key to assure the TOE detects errors in the
				public key validation function and/or the partial key validation function (in ECC
				only). At least two of the test vectors shall remain unmodified and therefore
				should result in valid key agreement results (they should pass).<h:br/><h:br/>
				The TOE shall use these modified test vectors to emulate the key agreement
				scheme using the corresponding parameters. The evaluator shall compare the 
				TOE’s results with the results using a known good implementation verifying
				that the TOE detects these errors. <h:br/><h:br/>
				<h:h4>SP800-56B Key Establishment Schemes </h:h4>
				If the TOE acts as a sender, the following assurance activity shall be performed
				to ensure the proper operation of every TOE supported combination of RSAbased key establishment scheme: <h:br/><h:br/>
				<h:ol type="a"><h:li>
				To conduct this test the evaluator shall generate or obtain test vectors
				from a known good implementation of the TOE supported schemes.
				For each combination of supported key establishment scheme and its
				options (with or without key confirmation if supported, for each
				supported key confirmation MAC function if key confirmation is
				supported, and for each supported mask generation function if
				KTSOAEP is supported), the tester shall generate 10 sets of test vectors.
				Each test vector shall include the RSA public key, the plaintext keying
				material, any additional input parameters if applicable, the MacKey
				and MacTag if key confirmation is incorporated, and the outputted
				ciphertext. For each test vector, the evaluator shall perform a key
				establishment encryption operation on the TOE with the same inputs
				(in cases where key confirmation is incorporated, the test shall use the
				MacKey from the test vector instead of the randomly generated
				MacKey used in normal operation) and ensure that the outputted
				ciphertext is equivalent to the ciphertext in the test vector. 
				</h:li></h:ol>
				If the TOE acts as a receiver, the following assurance activities shall be
				performed to ensure the proper operation of every TOE supported
				combination of RSA-based key establishment scheme: 
				<h:ol type="a"><h:li>
				 To conduct this test the evaluator shall generate or obtain test vectors
				from a known good implementation of the TOE supported schemes. For
				each combination of supported key establishment scheme and its options
				(with our without key confirmation if supported, for each supported key
				confirmation MAC function if key confirmation is supported, and for each
				supported mask generation function if KTSOAEP is supported), the tester
				shall generate 10 sets of test vectors. Each test vector shall include the RSA
				private key, the plaintext keying material (KeyData), any additional input
				parameters if applicable, the MacTag in cases where key confirmation is
				incorporated, and the outputted ciphertext. For each test vector, the
				evaluator shall perform the key establishment decryption operation on the
				TOE and ensure that the outputted plaintext keying material (KeyData) is
				equivalent to the plaintext keying material in the test vector. In cases
				where key confirmation is incorporated, the evaluator shall perform the
				key confirmation steps and ensure that the outputted MacTag is equivalent
				to the MacTag in the test vector. </h:li>
				<h:li> The evaluator shall ensure that the TSS describes how the TOE handles
				decryption errors. In accordance with NIST Special Publication 800- 56B,
				the TOE must not reveal the particular error that occurred, either through
				the contents of any outputted or logged error message or through timing
				variations. If KTS-OAEP is supported, the evaluator shall create separate
				contrived ciphertext values that trigger each of the three decryption error
				checks described in NIST Special Publication 800-56B section 7.2.2.3,
				ensure that each decryption attempt results in an error, and ensure that
				any outputted or logged error message is identical for each. If KTS-KEMKWS is supported, the evaluator shall create separate contrived ciphertext
				values that trigger each of the three decryption error checks described in
				NIST Special Publication 800- 56B section 7.2.3.3, ensure that each
				decryption attempt results in an error, and ensure that any outputted or
				logged error message is identical for each. </h:li>
				</h:ol>
				<h:h4>Diffie-Hellman Group 14 </h:h4>
				The evaluator shall verify the correctness of the TSF’s implementation of
				Diffie-Hellman group 14 by using a known good implementation for each
				protocol selected in FTP_TRP.1/Admin, FTP_TRP.1/Join, FTP_ITC.1 and
				FPT_ITT.1 that uses Diffie-Hellman group 14.<h:br/><h:br/>
				<h:i>Equivalency</h:i>
				Testing of the TOE may be performed on a subset of the platforms listed in the
				TOE’s ST. Justification must be provided for those platforms that were excluded
				from testing.<h:br/><h:br/>
			</Tests>
		</aactivity>
	</f-element>
        <audit-event>
		<audit-event-descr>Establishment of non-ephemeral key for TOE-related funtions.</audit-event-descr>
		<audit-event-info>Key established if successful</audit-event-info>
	</audit-event>
	<audit-event type="optional">
		<audit-event-descr>Establishment of ephemeral key for TOE-related functions.</audit-event-descr>
		<audit-event-info>Key established if successful.</audit-event-info>
	</audit-event>
    </f-component>	

				
    <!--                  -->     
    <!-- FCS_CKM_EXT.1(1) -->
    <!-- Feat-based on protectSubscriberInfo feature -->
    <!--                  -->     
    <f-component cc-id="fcs_ckm_ext.1" iteration="1" name="Symmetric Key Generation for DEKs" status="feat-based">
          <depends on="implements"><ref-id>protectSubscriberInfo</ref-id></depends>
          <f-element>
            <title>The TSF shall
		    <selectables>
			    <selectable>generate</selectable>
			    <selectable>invoke interfaces provided by the Operational Environment to generate</selectable>
		    </selectables> 
		    data encryption keys (DEKs) of size 
		    <selectables>
			    <selectable>128-bit</selectable>
			    <selectable>256-bit</selectable>
		    </selectables> using
		    <selectables linebreak="yes">
		  	<selectable>an RBG that meets this profile (as specified in FCS_RBG_EXT.1)</selectable>
			<selectable>a key generation capability of the Operational Environment</selectable>
			<selectable>a TSF-provided mechanism that combines KEKs in a way that preserves the
				effective entropy of each factor by 
				<selectables linebreak="yes">
					<selectable>using an XOR operation</selectable>
					<selectable>concatenating the keys and using a key derivation
						function (KDF) in accordance with SP 800-108</selectable>
					<selectable>encrypting one key with another in accordance with
						FCS_COP.1(1) and using modes 
						<selectables>
							<selectable>AES-CCM</selectable>
							<selectable>AES-GCM</selectable>
							<selectable>AES Key Wrap</selectable>
							<selectable>AES Key Wrap with Padding</selectable>
						</selectables></selectable>
					</selectables>
			    </selectable>
		    </selectables>.
	</title>
        <note role="application">
		Data encryption keys (DEKs) are used to protect data at rest (e.g., subscriber PII
		of security critical parameters) that needs to be encrypted. These are
		distinguished from KEKs (whose generation is described in FCS_CKM_EXT.1(2))
		that are used to protect other keys – DEKs, other KEKs, and other types of keys
		stored by the user or applications.<h:br/><h:br/>
		The first selection must match the selection for this component in FCS_CDP_EXT.1
		in terms of whether this functionality is implemented by the TOE or through the
		OE.<h:br/><h:br/>
		The second selection is simply the number of bits in the DEK.<h:br/><h:br/>
		For the third selection, if the TSF invokes an RBG that is implemented by the TOE
		or implemented by the OE, the first item is selected and FCS_RBG_EXT.1 is
		included in the ST. If the TSF invokes a key-generation mechanism in the OE (that
		is not a direct invocation of an RBG), then the second item (“a key generation
		capability of the Operational Environment”) is selected; in this case the second
		item of the first selection ("invoke interfaces provided by the Operational
		Environment to generate") should have also been chosen. If the TSF uses a method
		to combine KEKs to produce the DEK, the third item is selected and the method
		used to produce the DEK from the KEKs is chosen in the fourth selection.
		Additionally, if thisthird item is selected (TSF combining KEKs to produce the DEK),
		then FCS_CKM_EXT.1(2) (to specify how the KEKs used are generated) and
		FCS_CKM_EXT.7 (to specify how the REK that anchors the KEKs is generated and
		protected) in Annex B.8 must be included. Finally, if the third item in the fourth
		selection statement is chosen (key wrap), then FCS_COP.1(1) will be included in
		the ST and the appropriate key wrap method will be chosen in the fifth selection.
	  </note>
          <aactivity>
          	<TSS>
			For DEKs generated using an RBG, the evaluator shall examine the TSS of the
			TOE to verify that it describes, for either the TOE or the Operational
			Environment, how the functionality described by FCS_RBG_EXT.1 is invoked.
			The evaluator shall review the TSS and other evidence to determine that the
			key size being requested from the RBG is identical to the key size used for the
			encryption/decryption of the data or key.<h:br/><h:br/>
			For each DEK that is formed from a combination by the TSF (that is, “perform”
			is selected in the first selection, and “combined from KEKs…” is selected in the
			second selection), the evaluator shall verify that the TSS describes the method
			of combination and contains a justification for preserving the effective entropy.		
              	</TSS>
		<Guidance>
			There are no AGD assurance activities for this requirement beyond what is
			necessary to satisfy the requirements in [CEM].
		</Guidance>
		<Tests>
			There are no ATE assurance activities for this requirement beyond what is
			necessary to satisfy the requirements in [CEM].<h:br/><h:br/>
			<h:i>Equivalency</h:i><h:br/><h:br/>
			Testing of the TOE may be performed on a subset of the platforms listed in the
			TOE’s ST. Justification must be provided for those platforms that were excluded
			from testing.
		  </Tests>
	    </aactivity>
          </f-element>
	  <audit-event/>
    </f-component>
	      
    <!--                  -->     
    <!-- FCS_CKM_EXT.1(3) -->
    <!-- Selection-based  -->
    <!--                  -->     
    <f-component cc-id="fcs_ckm_ext.1" iteration="3" name="Key Generation for Key Encryption Keys (TOE Key Archival)"
		 status="sel-based">
	<selection-depends req="fcs-cdp-ext-1e1" ids="crypto-sel-ckm-1i3"/>
	<f-element>
		<title>
			The TSF shall be able to 
			<selectables>
				<selectable>generate</selectable>
				<selectable>invoke interfaces provided by the Operational Environment to generate</selectable>
			</selectables>
			<selectables>
				<selectable>asymmetric KEKs of 
					<assignable>security strength greater than or equal to 112 bits</assignable> security strength
				</selectable>
				<selectable>symmetric KEKs of size
					<selectables>
						<selectable>128-bit</selectable>
						<selectable>256-bit</selectable>
					</selectables>
				</selectable>
			</selectables> using <h:br/><h:br/>
			<selectables linebreak="yes">
				<selectable>an Operational Environment-provided mechanism that combines Key Shares
					and produces a KEK,</selectable>
				<selectable>a TSF-provided mechanism that combines Key Shares in a way that preserves
					the effective entropy of each factor by 
					<selectables linebreak="yes">
						<selectable>polynomial interpolation based on Shimir’s secret
							sharing scheme</selectable>
						<selectable>geometric construction based on Blakely’s secret
							sharing mechanism,</selectable>
						<selectable>encrypting a shared secret with multiple public
							keys using a threshold cryptographic scheme</selectable>
						<selectable>computing Chinese Remainders, via a Asmuth-Bloom
							threshold secret sharing scheme,</selectable>
						<selectable><assignable>a secure, threshold-based secret
							sharing scheme</assignable></selectable>
					</selectables>
				</selectable>
			</selectables>
			for the archival and recovery of TOE keys from two or more shares according to
			a key sharing mechanism.
		</title>
	    	<note role="application">
			This SFR is included when the third selection in FPT_SKY_EXT.1 indicates that a
			“key sharing mechanisms in accordance with…” is used. This requirement
			specifies how the KEK that will be used to protect the keys listed in FPT_SKY_EXT.1
			is generated from two or more shares. The generation of the shares themselves
			is specified in FCS_CKM_EXT.1(4), which the ST author includes whenever this SFR
			is included in the ST. The key that is generated by this requirement is used by the
			mechanisms specified in FCS_CKM_EXT.6 to protect the keys specified in
			FPT_SKY_EXT.1.<h:br/><h:br/>
			In the first selection, the ST author chooses whether the TOE performs the
			operation, or whether it invokes interfaces in the Operational Environment for the
			functionality.<h:br/><h:br/>
			The second selection indicates if the KEK generated is asymmetric or symmetric.<h:br/><h:br/>
			If an asymmetric KEK is generated, then the ST author specifies the security
			strength of the mechanism in terms of the number of bits.<h:br/><h:br/>
			If a symmetric KEK is generated, the number of bits of the KEK is specified in the
			third selection.<h:br/><h:br/>
			For the fourth selection, identify the key sharing mechanism used and reference
			analysis that documents the basis for the security and entropy preservations. <h:br/><h:br/>
		</note>
		<aactivity>
			<TSS>
				The evaluator shall ensure the TSS describes the mechanism used to generate
				a KEK from the key shares and identifies the cryptographic provider used.<h:br/><h:br/>
				If this requirement is met by the TOE, then the evaluator shall ensure the TSS
				identifies analysis to prove that the entropy of the KEK.<h:br/><h:br/>
			</TSS>
		</aactivity>
	</f-element>
	<audit-event />
    </f-component>  

    <!--                  -->     
    <!-- FCS_CKM_EXT.1(4) -->
    <!-- Selection-based  -->
    <!--                  -->     
    <f-component cc-id="fcs_ckm_ext.1" iteration="4" name="Generation of Key Shares" status="sel-based">
	<selection-depends req="fcs-cdp-ext-1e1" ids="crypto-sel-ckm-1i4"/>
	<f-element>
		<title>The TSF shall be able to
			<selectables>
				<selectable>generate</selectable>
				<selectable>invoke interfaces provided by the Operational Environment to generate</selectable>
			</selectables> key shares of strength [<h:i>greater than or
			equal to the security strength of the KEK defined in FCS_CKM_EXT.1(3)</h:i>]
			for the key sharing mechanism indicated in FCS_CKM_EXT.1(3).
		</title>
		<aactivity>
			<TSS>
				The evaluator shall review the TSS to confirm that the key share mechanism is
				described. If the TSF generates the key shares (the first item in the selection is
				chosen), the evaluator shall review the TSS to confirm that the generated 
				shares are greater than or equal to the security strength of the KEK defined in
				FCS_CKM_EXT.1(3).
			</TSS>
		</aactivity>
	</f-element>
	<audit-event />
    </f-component>

    <!--                  -->     
    <!-- FCS_CKM_EXT.4 -->
    <!-- Selection-based  -->
    <!--                  -->     
    <f-component cc-id="fcs_ckm_ext.4" name="Cryptographic Key Destruction" status="sel-based">
	<selection-depends req="fcs-cdp-ext-1e1" ids="crypto-sel-ckm-ext-4"/>
	<f-element>
		<title>
			The TSF shall 
			<selectables>
				<selectable>destroy</selectable>
				<selectable>invoke interfaces provided by the Operational Environment to destroy</selectable>
			</selectables>
			all cryptographic keys and critical security parameters
			which are not permanently protected from export by hardware when no longer
			required, in accordance with the specified cryptographic key destruction method
			<selectables linebreak="yes">
				<selectable>by clearing the KEK encrypting the target key</selectable>
				<selectable>for volatile memory, the destruction shall be executed by a
					<selectables linebreak = "yes">
						<selectable>single direct overwrite consisting of 
							<selectables linebreak = "yes">
								<selectable>a pseudo-random pattern using the TSF’s RBG</selectable>
								<selectable>zeroes</selectable>
								<selectable>ones</selectable>
								<selectable>a new value of a key</selectable>
								<selectable><assignable>some value that does not contain any CSP</assignable></selectable>
							</selectables>
						</selectable>
						<selectable>removal of power to the memory</selectable>
						<selectable>destruction of reference to the key directly followed by a request for 
							garbage collection</selectable>
					</selectables>
				</selectable>
				<selectable>for non-volatile memory that consists of the invocation of an interface
					provided by the underlying platform that
					<selectables linebreak="yes">
						<selectable>logically addresses the storage location of the key and performs a
							<selectables>
								<selectable>single</selectable>
								<selectable><assignable>ST author-defined multi-pass</assignable></selectable>
							</selectables> direct overwrite consisting of
							<selectables linebreak = "yes">
								<selectable>a pseudo-random pattern using the TSF’s RBG</selectable>
								<selectable>zeroes</selectable>
								<selectable>ones</selectable>
								<selectable>a new value of a key</selectable>
								<selectable><assignable>some value that does not contain any CSP</assignable></selectable>
							</selectables>
						</selectable>
						<selectable>instructs the underlying platform to destroy the abstraction that
							represents the key</selectable>
					</selectables>
				</selectable>
			</selectables>
		</title>
	</f-element>
	<f-element>
		<title>
			The TSF shall 
			<selectables>
				<selectable>destroy</selectable>
				<selectable>invoke interfaces provided by the Operational Environment to destroy</selectable>
			</selectables> all plaintext keying material cryptographic security
				parameters when no longer needed. 
		</title>	
		<note role="application">
			The interface referenced in the requirement could take different forms, the most
			likely of which is an application programming interface to an OS kernel. There may
			be various levels of abstraction visible. For instance, in a given implementation
			the application may have access to the file system details and may be able to
			logically address specific memory locations. In another implementation, the
			application may simply have a handle to a resource and can only ask the platform
			to delete the resource. The level of detail to which the TOE has access will be
			reflected in the TSS section of the ST.<h:br/><h:br/>
			Several selections allow assignment of a ‘value that does not contain any CSP’.
			This means that the TOE uses some other specified data not drawn from an RBG
			meeting FCS_RBG_EXT requirements, and not being any of the particular values
			listed as other selection options. The point of the phrase ‘does not contain any
			CSP’ is to ensure that the overwritten data is carefully selected, and not taken
			from a general ‘pool’ that might contain current or residual data that itself
			requires confidentiality protection.<h:br/><h:br/>
			Key destruction does not apply to the public component of asymmetric key pairs.<h:br/><h:br/>
	 	</note>
		<aactivity>
			<TSS>
				The evaluator shall examine the TSS to ensure it describes each of the secret
				keys (keys used for symmetric encryption), private keys, and critical security
				parameters; when they are destroyed (for example, immediately after use, on
				system shutdown, etc.); and the type of destruction procedure that is
				performed (overwrite with zeros, overwrite three times with random pattern,
				etc.). If different types of memory are used to store the materials to be
				protected, the evaluator shall examine the TSS to ensure it describes the
				destruction procedure in terms of the memory in which the data are stored.
			</TSS>
			<Guidance>
			    	The evaluator shall examine the AGD guidance to ensure it contains
				instructions for configuring the TOE to support the required key destruction
				functionality.
		    	</Guidance>
			<Tests>
				If this requirement is met by volatile memory in the TOE boundary (the second
				item in the second selection of FCS_CKM_EXT.4.1), the evaluator shall attempt
				to perform the following tests:
				<testlist>
			    		<test>The evaluator shall utilize appropriate combinations of
						specialized operational environment and development tools
						(debuggers, simulators, etc.) for the TOE and instrumented TOE builds
						to test that keys are cleared correctly, including all intermediate copies
						of the key that may have been created internally by the TOE during
						normal cryptographic processing with that key.<h:br/><h:br/>
						Cryptographic TOE implementations in software shall be loaded and
						exercised under a debugger to perform such tests. The evaluator shall
						perform the following test for each key subject to clearing, including
						intermediate plaintext copies of keys that are subsequently encrypted
						for storage by the TOE:
			    			<h:ol type="1">
							<h:li>Load the instrumented TOE build in a debugger.</h:li>
							<h:li>Record the value of the key in the TOE subject to clearing. </h:li>
							<h:li>Cause the TOE to perform a normal cryptographic processing with
							      the key from #1.</h:li>
							<h:li>Cause the TOE to clear the key.</h:li>
							<h:li>Cause the TOE to stop the execution but not exit.</h:li>
							<h:li>Cause the TOE to dump the entire memory footprint of the TOE
								into a binary file.</h:li>
							<h:li>Search the content of the binary file created in #4 for instances of
							      the known key value from #1.</h:li>
					      </h:ol>
						The test succeeds if no copies of the key from #1 are found in step #7 above
						and fails otherwise.<h:br/><h:br/>
						The evaluator shall perform this test on all keys, including those subsequently
						encrypted for storage, to ensure plaintext intermediate copies are cleared.<h:br/><h:br/>
				      </test>
				      <test>
					(Conditional) In cases where the TOE is implemented in
					firmware and operates in a limited operating environment that does
					not allow the use of debuggers, the evaluator shall utilize a simulator
					for the TOE on a general purpose operating system. The evaluator shall
					confirm that keys can be tracked and that destruction occurs. The
					evaluator shall provide a rationale explaining the instrumentation of
					the simulated test environment and justifying the obtained test
					results.<h:br/><h:br/>
					<h:i>Equivalency</h:i>
					Testing of the TOE may be performed on a subset of the platforms listed in the
					TOE’s ST. Justification must be provided for those platforms that were excluded
					from testing.
					</test>
				</testlist>
			</Tests>
		</aactivity>
	</f-element>
	<audit-event>
	    <audit-event-descr>Failure of the key destruction process for TOE keys</audit-event-descr>
	    <audit-event-info>Identity of object or entity being cleared.</audit-event-info>
	</audit-event>
    </f-component>

	      
    <!--                  -->     
    <!-- FCS_CKM_EXT.5 -->
    <!-- Selection-based  -->
    <!--                  -->     
    <f-component cc-id="fcs_ckm_ext.5" name="Public Key Integrity" status="sel-based">
	<selection-depends req="fcs-cdp-ext-1e1" ids="crypto-sel-ckm-ext-5"/>
	<f-element>
		<title>
			The TSF shall 
			<selectables>
				<selectable>protect</selectable>
				<selectable>invoke interfaces in the Operational Environment to protect</selectable>
			</selectables> public keys used to meet CA requirements against undetected
			modification through the use of
			<selectables>
				<selectable>digital signatures (in accordance with FCS_COP.1(2))</selectable>
				<selectable>keyed hashes (in accordance with FCS_COP.1(4))</selectable>
			</selectables>.
		</title>
	</f-element>
	<f-element>
		<title>The 
			<selectables>
				<selectable>digital signature</selectable>
				<selectable>keyed hash</selectable>
			</selectables> used to protect a public key shall be verified upon each access to the key. 
		</title>
		<note role="application">
			This SFR is included when the second selection in FDP_STG_EXT.1.1 is chosen, and
			applies to the public keys listed in that SFR. If integrity protection is provided
			entirely by the OE with no interaction from the TOE (and that is the only method
			of protecting the public keys), then FDP_STG_EXT.1 should not be claimed in the
			ST, and instead OE.PUBLIC_KEY_PROTECTION should be included in the ST.<h:br/><h:br/>
			The first item in the first selection is chosen when the TSF performs the
			cryptographic operation in the second selection itself. If the OE performs the
			cryptographic operation (calculation of the digital signature or keyed hash), the
			ST author chooses the second item in the first selection. In either case, the TSF is
			the entity responsible for checking the public key on each access and taking
			actions on integrity failures.<h:br/><h:br/>
			The ST author selects “integrity failure on Trust Anchor database” for FPT_FLS.1 if
			this SFR is included in the ST.<h:br/><h:br/>
		</note>
		<aactivity>
			<TSS>
				The evaluator shall examine the TSS to ensure it describes each applicable public
				key, where it is stored and protected, the purpose of the public key, the
				mechanism used to protect the public key from undetected modification, and
				the method (for each public key) by which the integrity of the key is checked in
				accordance with FCS_CKM_EXT.5.2.
			</TSS>
			<Guidance>
				There are no AGD assurance activities for this requirement beyond what is
				necessary to satisfy the requirements in [CEM].
			</Guidance>
			<Tests>
				NOTE: It might not be possible to directly access certain public keys via the TOE
				interface in a way that is needed to perform the test below. If that is the case,
				then the evaluator must describe for each applicable key the interface and
				indicate why the interface does not allow access to the public keys.<h:br/><h:br/>
				For each public key identified in the TSS, the evaluator shall perform the
				following test:
				<testlist>
					<test>
						The evaluator shall attempt to violate the protection of a public
						key to verify that the action specified in FCS_CKM_EXT.5.2 occurs.
					</test>
				</testlist>
				<h:i>Equivalency</h:i><h:br/><h:br/>
				Testing of the TOE may be performed on a subset of the platforms listed in the
				TOE’s ST. Justification must be provided for those platforms that were excluded
				from testing.
			</Tests>
		</aactivity>
	</f-element>
	<audit-event>
		<audit-event-descr>Failure of the key destruction process for TOE related keys.</audit-event-descr>
	</audit-event>
    </f-component>
	      
    <!--                  -->     
    <!-- FCS_CKM_EXT.6 -->
    <!-- Selection-based  -->
    <!--                  -->     
    <f-component cc-id="fcs_ckm_ext.6" name="Key Archival" status="sel-based">
	<selection-depends req="fcs-cdp-ext-1e1" ids="crypto-sel-ckm-ext-6"/>
	<f-element>
		<title>The TSF shall 
			<selectables>
				<selectable>provide</selectable>
				<selectable>invoke interfaces in the Operational Environment to provide</selectable>
			</selectables> a mechanism to protect TOE secret and private keys required for
			continuity of operations and 
			<selectables>
				<selectable>user private keys</selectable>
				<selectable>no other keys</selectable>
			</selectables>.
		</title>
	</f-element>
	<f-element>
		<title>
			The TSF shall 
			<selectables>
				<selectable>be able to</selectable>
				<selectable>invoke interfaces in the Operational Environment to be able to</selectable>
			</selectables> export the protected keys (in FCS_CKM_EXT.6.1) for
			the purpose of archival in encrypted form.
		</title>
	</f-element>
	<f-element>
		<title>
			The TSF shall 
			<selectables>
				<selectable>be able to</selectable>
				<selectable>invoke interfaces in the Operational Environment to be able to</selectable>
			</selectables> import protected keys (in FCS_CKM_EXT.6.1) for the
			purpose of continued operations after failure.
		</title>
	</f-element>
	<f-element>
		<title>
			The TSF shall 
			<selectables>
				<selectable>encrypt</selectable>
				<selectable>invoke interfaces in the Operational Environment to encrypt</selectable>
			</selectables> the keys specified in FCS_CKM_EXT.6.1 in accordance with 
			<selectables>
				<selectable>FCS_COP.1(1)</selectable>
				<selectable>FCS_CKM.1</selectable>
			</selectables> using the KEK generated in accordance with
			FCS_CKM_EXT.1(3).
		</title>
	</f-element>
	<f-element>
		<title>
			The TSF shall 
			<selectables>
				<selectable>decrypt</selectable>
				<selectable>invoke interfaces in the Operational Environment to decrypt</selectable>
			</selectables> the keys specified in FCS_CKM_EXT.6.1 in accordance with 
			<selectables>
				<selectable>FCS_COP.1(1)</selectable>
				<selectable>FCS_CKM.1</selectable>
			</selectables> using the KEK generated in accordance with FCS_CKM_EXT.1(3).
		</title>
		<note role="application">
			This requirement is required when ‘key sharing mechanisms…’ is selected in
			FPT_SKY_EXT.1., and ensures that the archival of any keys required for continuity
			of operations (e.g., signature keys used to sign CRLs) from the TOE involves
			encryption of those keys using KEKs that were derived using key sharing
			mechanisms as specified in FCS_CKM_EXT.1(3). 
		</note>
		<aactivity>
			<TSS>
				The evaluator shall examine the TSS to verify that it lists the keys that are
				archived, the encryption method (key size and mode) used, and that the
				method of archival is described.
			</TSS>
			<Guidance>
				The evaluator shall verify that the operational guidance provides instructions
				on how to perform this function (protection and export of the keys to be
				archived) in a manner that is consistent with its description in the ST. If aspects
				of the archive function are configurable, the evaluator shall confirm that the
				operational guidance describes the various configuration options.
			</Guidance>
		</aactivity>
	</f-element>
	<audit-event>
		<audit-event-descr>All key archival actions.</audit-event-descr>
	</audit-event>
    </f-component>
	    
    <!--                  -->     
    <!-- FCS_COP.1(1) -->
    <!-- Selection-based  -->
    <!--                  -->    	      
<f-component name="Cryptographic Operation (AES Encryption/Decryption)" cc-id="fcs_cop.1" iteration="1" status="sel-based">
	<selection-depends req="fcs-cdp-ext-1e1" ids="crypto-sel-cop-1i1"/>
	<f-element>
		<title>
			<refinement>Refinement:</refinement> The TSF shall 
			<refinement><selectables>
				<selectable>perform</selectable>
				<selectable>invoke interfaces in the operational environment to perform</selectable>
			</selectables></refinement> [<h:i>encryption and decryption</h:i>] in accordance
			with a specified cryptographic algorithm: <h:br/><h:br/>
			<refinement><selectables linebreak="yes">
				<selectable>AES-CBC (as defined in NIST SP 800-38A) mode</selectable>
				<selectable>AES-CCM (as defined in NIST SP 800-38C) mode</selectable>
				<selectable>AES-GCM (as defined in NIST SP 800-38D) mode</selectable>
				<selectable>AES-XTS (as defined in NIST SP 800-38E) mode</selectable>
				<selectable>AES Key Wrap (KW) (as defined in NIST SP 800-38F) mode</selectable>
				<selectable>AES Key Wrap with Padding (KWP) (as defined in NIST SP 800-38F) mode</selectable>
			</selectables></refinement>
			and cryptographic key size 
			<selectables>
				<selectable>128-bit</selectable>
				<selectable>256-bit</selectable>
			</selectables> <h:s>that meet the following: [assignment: list of standards]</h:s>.
		</title>
		<note role="application">
			For the third selection of FCS_COP.1.1(1), the ST author should choose the mode
			or modes in which AES operates. For the fourth selection, the ST author should
			choose the key sizes besides 128-bit that are supported by this functionality.<h:br/><h:br/>
			This SFR is in support of multiple TOE encryption requirements. AES-CBC is used
			for encryption only, AES-CCM and AES-GCM for encryption and authentication,
			AES-XTS for encryption only, and AES Key Wrap and AES Key Wrap with Padding
			for key wrapping. It is necessary for the ST author to ensure that the selected AES
			modes and key sizes are consistent with the claims made in any of the selectionbased cryptographic protocols (e.g. if FCS_IPSEC_EXT.1 is selected, CBC and/or
			GCM must be selected depending on the selections made in FCS_IPSEC_EXT.1.4).<h:br/><h:br/>
		</note>
		<aactivity>
			<TSS>
				Regardless of whether the requirement is met by the TSF or the TSF in
				conjunction with the TOE platform, the evaluator shall examine the TSS to
				ensure that all key encryption and decryption functions use the approved
				algorithms, modes, and key sizes.
			</TSS>
			<Guidance>
				The evaluator shall examine the AGD guidance to ensure it contains
				instructions for configuring the TOE or the TOE in conjunction with the
				Operational Environment for the required encryption algorithms and
				associated modes and key sizes.
			</Guidance>
			<Tests>
				The following tests shall be performed for functionality implemented by the
				TSF.<h:br/><h:br/>
				<h:b>AES-CBC Tests</h:b><h:br/><h:br/>
				<h:b>AES-CBC Known Answer Tests</h:b><h:br/><h:br/>
				There are four Known Answer Tests (KATs), described below. In all KATs, the
				plaintext, ciphertext, and IV values shall be 128-bit blocks. The results from
				each test may either be obtained by the evaluator directly or by supplying the
				inputs to the implementer and receiving the results in response. To determine
				correctness, the evaluator shall compare the resulting values to those obtained
				by submitting the same inputs to a known good implementation. <h:br/><h:br/>
				
				<h:b>KAT-1.</h:b> To test the encrypt functionality of AES-CBC, the evaluator shall
				supply a set of 5 plaintext values for each key size selected and obtain 
				the ciphertext value that results from AES-CBC encryption of the given
				plaintext using a key value of all zeros and an IV of all zeros. Five
				plaintext values shall be encrypted with an all-zeros key of length equal
				to the selected key size, for each key size selected.<h:br/><h:br/>
				To test the decrypt functionality of AES-CBC, the evaluator shall
				perform the same test as for encrypt, using the ciphertext values as
				input and AES-CBC decryption.

				<h:b>KAT-2.</h:b> To test the encrypt functionality of AES-CBC, the evaluator shall
				supply a set of 5 key values for each key size selected and obtain the
				ciphertext value that results from AES-CBC encryption of an all-zeros
				plaintext using the given key value and an IV of all zeros. Five of the
				keys shall be of length equal to the selected key size, for each key size
				selected.<h:br/><h:br/>
				To test the decrypt functionality of AES-CBC, the evaluator shall
				perform the same test as for encrypt, using an all-zero ciphertext value
				as input and AES-CBC decryption.<h:br/><h:br/>
			
				<h:b>KAT-3.</h:b> To test the encrypt functionality of AES-CBC, the evaluator shall
				supply a set of key values described below for each key size selected
				and obtain the ciphertext value that results from AES encryption of an
				all-zeros plaintext using the given key value and an IV of all zeros. The
				keys in each set shall have the same length as the selected key size, for
				each key size, N. Key I in each set shall have the leftmost I bits be ones
				and the rightmost N-I bits be zeros, for I in [1,N].<h:br/><h:br/>
				To test the decrypt functionality of AES-CBC, the evaluator shall supply
				the two sets of key and ciphertext value pairs described below and
				obtain the plaintext value that results from AES-CBC decryption of the
				given ciphertext using the given key and an IV of all zeros. Each set of
				key/ciphertext pairs shall have N N-bit key/ciphertext pairs, and the
				second set of key/ciphertext pairs for selected key size, N. Key I in each
				set shall have the leftmost I bits be ones and the rightmost N-I bits be
				zeros, for I in [1,N]. The ciphertext value in each pair shall be the value
				that results in an all-zeros plaintext when decrypted with its
				corresponding key.<h:br/><h:br/>
				
				<h:b>KAT-4.</h:b> To test the encrypt functionality of AES-CBC, the evaluator shall
				supply the set of 128 plaintext values described below and obtain
				ciphertext values that result from AES-CBC encryption of the given
				plaintext using a key value of all zeros of length equal to the selected
				key size with an IV of all zeros for each key size selected. Plaintext value
				I in each set shall have the leftmost I bits be ones and the rightmost
				128-I bits be zeros, for I in [1,128].<h:br/><h:br/>
				To test the decrypt functionality of AES-CBC, the evaluator shall
				perform the same test as for encrypt, using ciphertext values of the 
				same form as the plaintext in the encrypt test as input and AES-CBC
				decryption.<h:br/><h:br/>
				
				<h:b>AES-CBC Multi-Block Message Test</h:b><h:br/><h:br/>
				The evaluator shall test the encrypt functionality by encrypting an i-block
				message where 1 &lt; I &lt;=10. The evaluator shall choose a key, an IV and plaintext
				message of length I blocks and encrypt the message, using the mode to be
				tested, with the chosen key and IV. The ciphertext shall be compared to the
				result of encrypting the same plaintext message with the same key and IV using
				a known good implementation.<h:br/><h:br/>
				The evaluator shall also test the decrypt functionality for each mode by
				decrypting an i-block message where 1 &lt; I &lt;=10. The evaluator shall choose a
				key, an IV and a ciphertext message of length I blocks and decrypt the message,
				using the mode to be tested, with the chosen key and IV. The plaintext shall be
				compared to the result of decrypting the same ciphertext message with the
				same key and IV using a known good implementation. <h:br/><h:br/>
				
				<h:b>AES-CBC Monte Carlo Tests</h:b><h:br/><h:br/>
				The evaluator shall test the encrypt functionality using a set of 100 plaintext,
				IV, and key 3-tuples for each selected key size. The plaintext and IV values shall
				be 128-bit blocks. For each 3-tuple, 1000 iterations shall be run as follows: <h:br/><h:br/>
				
				<h:pre>
				# Input: PT, IV, Key
				for I = 1 to 1000:
					if I == 1:
						CT[1] = AES-CBC-Encrypt(Key, IV, PT)
						PT = IV
					else:
						CT[i] = AES-CBC-Encrypt(Key, PT)
						PT = CT[i-1]
				</h:pre><h:br/><h:br/>
			
				The ciphertext computed in the 1000th iteration (i.e., CT[1000]) is the result for
				that trial. This result shall be compared to the result of running 1000 iterations
				with the same values using a known good implementation.<h:br/><h:br/>
				The evaluator shall test the decrypt functionality using the same test as for
				encrypt, exchanging CT and PT and replacing AES-CBC-Encrypt with AES-CBCDecrypt. <h:br/><h:br/>
				
				<h:b><h:u>AES-CCM Tests</h:u></h:b><h:br/><h:br/>
				The evaluator shall test the generation-encryption and decryption-verification
				functionality of AES-CCM for the following input parameter and tag lengths: <h:br/><h:br/>
				<h:b>Eash selected key length</h:b><h:br/><h:br/>
				<h:b>Two payload lengths.</h:b>One payload length shall be the shortest
				supported payload length, greater than or equal to zero bytes. The
				other payload length shall be the longest supported payload length,
				less than or equal to 32 bytes (256 bits). <h:br/><h:br/>
				<h:b>Two payload lengths.</h:b> One payload length shall be the shortest
				supported payload length, greater than or equal to zero bytes. The
				other payload length shall be the longest supported payload length,
				less than or equal to 32 bytes (256 bits). <h:br/><h:br/>
				<h:b>Two or three associated data lengths.</h:b> One associated data length shall
				be 0, if supported. One associated data length shall be the shortest
				supported payload length, greater than or equal to zero bytes. One
				associated data length shall be the longest supported payload length,
				less than or equal to 32 bytes (256 bits). If the implementation
				supports an associated data length of 216 bytes, an<h:br/><h:br/>
				<h:b>Nonce lengths.</h:b> All supported nonce lengths between 7 and 13 bytes,
				inclusive, shall be tested.<h:br/><h:br/>
				<h:b>Tag lengths.</h:b> All supported tag lengths of 4, 6, 8, 10, 12, 14 and 16 bytes
				shall be tested.<h:br/><h:br/>
				To test the generation-encryption functionality of AES-CCMP, the evaluator
				shall perform the following four tests: <h:br/><h:br/>
				<testlist>
					<test>For EACH supported key and associated data length and ANY
					supported payload, nonce and tag length, the evaluator shall supply
					one key value, one nonce value and 10 pairs of associated data and
						payload values and obtain the resulting ciphertext. </test>
					<test>. For EACH supported key and payload length and ANY supported
					associated data, nonce and tag length, the evaluator shall supply one
					key value, one nonce value and 10 pairs of associated data and payload
						values and obtain the resulting ciphertext. </test>
					<test>For EACH supported key and nonce length and ANY supported
					associated data, payload and tag length, the evaluator shall supply one
					key value and 10 associated data, payload and nonce value 3-tuples
						and obtain the resulting ciphertext. </test>
					<test>For EACH supported key and tag length and ANY supported
					associated data, payload and nonce length, the evaluator shall supply
					one key value, one nonce value and 10 pairs of associated data and
						payload values and obtain the resulting ciphertext. </test>
				</testlist>
				To determine correctness in each of the above tests, the evaluator shall
				compare the ciphertext with the result of generation-encryption of the same
				inputs with a known good implementation.<h:br/><h:br/>
				To test the decryption-verification functionality of AES-CCM, for EACH
				combination of supported associated data length, payload length, nonce
				length and tag length, the evaluator shall supply a key value and 15 nonce,
				associated data and ciphertext 3-tuples and obtain either a FAIL result or a 
				PASS result with the decrypted payload. The evaluator shall supply 10 tuples
				that should FAIL and 5 that should PASS per set of 15.<h:br/><h:br/>
				Additionally, the evaluator shall use tests from the IEEE 802.11-02/362r6
				document “Proposed Test vectors for IEEE 802.11 TG”, dated September 10,
				2002, Section 2.1 AES-CCMP Encapsulation Example and Section 2.2 Additional
				AES CCMP Test Vectors to further verify the IEEE 802.11-2007 implementation
				of AES-CCMP.<h:br/><h:br/>
				<h:b>AES-Galois\Counter Mode (GCM) Monte Carlo Test</h:b> <h:br/><h:br/>
				The evaluator shall test the authenticated encrypt functionality of AES-GCM for
				each combination of the following input parameter lengths: <h:br/><h:br/>
				<h:b>Each selected key length</h:b><h:br/><h:br/>
				<h:b>Two plaintext lengths.</h:b> One of the plaintext lengths shall be a non-zero
				integer multiple of 128 bits, if supported. The other plaintext length
				shall not be an integer multiple of 128 bits, if supported.<h:br/><h:br/>
				<h:b>Three AAD lengths.</h:b> One AAD length shall be 0, if supported. One AAD
				length shall be a non-zero integer multiple of 128 bits, if supported.
				One AAD length shall not be an integer multiple of 128 bits, if
				supported.<h:br/><h:br/>
				<h:b>Two IV lengths.</h:b> If 96 bit IV is supported, 96 bits shall be one of the two
				IV lengths tested.<h:br/><h:br/>
				The evaluator shall test the encrypt functionality using a set of 10 key,
				plaintext, AAD, and IV tuples for each combination of parameter lengths above
				and obtain the ciphertext value and tag that results from AES-GCM
				authenticated encrypt. Each supported tag length shall be tested at least once
				per set of 10. The IV value may be supplied by the evaluator or the
				implementation being tested, as long as it is known.<h:br/><h:br/>
				The evaluator shall test the decrypt functionality using a set of 10 key,
				ciphertext, tag, AAD, and IV 5-tuples for each combination of parameter
				lengths above and obtain a Pass/Fail result on authentication and the
				decrypted plaintext if Pass. The set shall include five tuples that Pass and five
				that Fail.<h:br/><h:br/>
				The results from each test may either be obtained by the evaluator directly or
				by supplying the inputs to the implementer and receiving the results in
				response. To determine correctness, the evaluator shall compare the resulting
				values to those obtained by submitting the same inputs to a known good
				implementation.<h:br/><h:br/>
				<h:b>XTS-AES Monte Carlo Test</h:b><h:br/><h:br/>
				The evaluator shall test the encrypt functionality of XTS-AES for each
				combination of the following input parameter lengths: <h:br/><h:br/>
				<h:b>Each selected key length</h:b><h:br/><h:br/>
				<h:b>Three data unit (i.e., plaintext) lengths.</h:b> One of the data unit lengths
				shall be a non-zero integer multiple of 128 bits, if supported. One of
				the data unit lengths shall be an integer multiple of 128 bits, if
				supported. The third data unit length shall be either the longest
				supported data unit length or 216 bits, whichever is smaller.<h:br/><h:br/>
				Using a set of 100 key, plaintext and 128-bit random tweak value 3-tuples and
				obtain the ciphertext that results from XTS-AES encrypt.<h:br/><h:br/>
				The evaluator may supply a data unit sequence number instead of the tweak
				value if the implementation supports it. The data unit sequence number is a
				base-10 number ranging between 0 and 255 that implementations convert to
				a tweak value internally.<h:br/><h:br/>
				The evaluator shall test the decrypt functionality of XTS-AES using the same
				test as for encrypt, replacing plaintext values with ciphertext values and XTSAES 
				encrypt with XTS-AES decrypt.<h:br/><h:br/>
				<h:b>AES Key Wrap (AES-KW) and Key Wrap with Padding (AES-KWP) Test</h:b><h:br/><h:br/>
				The evaluator shall test the authenticated encryption functionality of AES-KW
				for EACH combination of the following input parameter lengths:<h:br/><h:br/>
				<h:b>Each selected key length</h:b><h:br/><h:br/>
				<h:b>Three plaintext lengths.</h:b> One of the plaintext lengths shall be two
				semiblocks (128 bits). One of the plaintext lengths shall be three semiblocks 
				(192 bits). The third data unit length shall be the longest
				supported plaintext length less than or equal to 64 semi-blocks (4096
				bits).<h:br/><h:br/>
				Using a set of 100 key and plaintext pairs and obtain the ciphertext that results
				from AES-KW authenticated encryption. To determine correctness, the
				evaluator shall use the AES-KW authenticated-encryption function of a known
				good implementation.<h:br/><h:br/>
				The evaluator shall test the authenticated-decryption functionality of AES-KW
				using the same test as for authenticated-encryption, replacing plaintext values
				with ciphertext values and AES-KW authenticated-encryption with AES-KW
				authenticated-decryption.<h:br/><h:br/>
				The evaluator shall test the authenticated-encryption functionality of AES-KWP
				using the same test as for AES-KW authenticated-encryption with the following
				change in the three plaintext lengths:<h:br/><h:br/>
				One plaintext length shall be one octet. One plaintext length shall be
				20 octets (160 bits).<h:br/><h:br/>
				One plaintext length shall be the longest supported plaintext length
				less than or equal to 512 octets (4096 bits). <h:br/><h:br/>
				The evaluator shall test the authenticated-decryption functionality of AES-KWP
				using the same test as for AES-KWP authenticated-encryption, replacing
				plaintext values with ciphertext values and AES-KWP authenticated-encryption
				with AES-KWP authenticated-decryption.<h:br/><h:br/>
				<h:i>Equivalency</h:i><h:br/><h:br/>
				Testing of the TOE may be performed on a subset of the platforms listed in the
				TOE’s ST. Justification must be provided for those platforms that were excluded
				from testing.<h:br/><h:br/>
			</Tests>
		</aactivity>
	</f-element>
	<audit-event />
    </f-component>
								
    <!--                  -->     
    <!-- FCS_COP.1(2) -->
    <!-- Selection-based  -->
    <!--                  -->    	      
<f-component name="Cryptographic Operation (Cryptographic Signature)" cc-id="fcs_cop.1" iteration="2" status="sel-based">
	<selection-depends req="fcs-cdp-ext-1e1" ids="crypto-sel-cop-1i2"/>
	<f-element>
		<title>
			<refinement>Refinement:</refinement>
			The TSF shall <refinement>
			<selectables>
				<selectable>perform</selectable>
				<selectable>invoke interfaces in the operational environment to perform</selectable>
			</selectables></refinement> [<h:i>cryptographic signature services</h:i>] in
			accordance with the following specified cryptographic algorithms 
			<refinement><selectables linebreak="yes">
				<selectable>RSA Digital Signature Algorithm (rDSA) with a key size (modulus) of
					<assignable>2048 bits or greater</assignable>
					that meets FIPS-PUB 186-4, “Digital Signature Standard”</selectable>
				<selectable>Elliptic Curve Digital Signature Algorithm (ECDSA) with a key size 
					of 256 bits or greater that meets FIPS PUB 186-4, “Digital Signature
					Standard” with “NIST curves” P-256, P-384 and 
					<selectables>
						<selectable>P-521</selectable><selectable>no other curves</selectable>
					</selectables>
					(as defined in FIPS PUB 186-4, “Digital Signature Standard”)</selectable>
				<selectable>Digital Signature Algorithm (DSA) with a key size (modulus) of 2048
					bits or greater, that meets FIPS-PUB 186-4, “Digital Signature Standard”]</selectable>
			</selectables></refinement>
			<h:s><h:i>and cryptographic key sizes [assignment: cryptographic key sizes] that meet the
				following: [assignment: list of standards].</h:i></h:s>
		</title>
		<note role="application">
			The ST should specify whether the TOE performs the algorithms, or whether the
			TOE in combination with the Operational Environment is used.<h:br/><h:br/>
			The ST author should choose the algorithm implemented to perform digital
			signatures; if more than one algorithm is available, this requirement (and the
			corresponding FCS_CKM.1 requirement) should be iterated to specify the
			functionality. For the algorithm chosen, the ST author should make the
			appropriate assignments/selections to specify the parameters that are
			implemented for that algorithm.<h:br/><h:br/>
			For elliptic curve-based schemes, the key size refers to the log2 of the order of the
			base point. As the preferred approach for digital signatures, ECDSA will be
			required in future publications of this PP.<h:br/><h:br/>
		</note>
		<aactivity>
			<TSS>
				Regardless of whether the requirement is met by the TSF or TOE platform, the
				evaluator shall examine the TSS to ensure that all signature generation and
				verification functions use the approved algorithms and key sizes.
			</TSS>
			<Guidance>
				The evaluator shall examine the AGD guidance to ensure it contains
				instructions for configuring the TOE or the TIE in conjunction with the
				Operational Environment for the required signature algorithms and associated
				modes and key sizes.
			</Guidance>
			<Tests>
				The following tests shall be performed for functionality implemented by the
				TSF.<h:br/><h:br/>
				<h:b>Key Generation</h:b><h:br/><h:br/>
				<h:b>Key Generation for RSA Signature Schemes</h:b><h:br/><h:br/>
				The evaluator shall verify the implementation of RSA Key Generation
				by the TOE using the Key Generation test. This test verifies the ability
				of the TSF to correctly produce values for the key components
				including the public verification exponent e, the private prime factors
				p and q, the public modulus n and the calculation of the private
				signature exponent d.<h:br/><h:br/>
				Key Pair generation specifies 5 ways (or methods) to generate the
				primes p and q. These include:<h:br/><h:br/>
				<h:ul>
					<h:li>Random Primes:</h:li>
					<h:ul>
						<h:li>Provable Primes</h:li>
						<h:li>Probable Primes</h:li>
					</h:ul>
					<h:li>Primes with Conditions:</h:li>
					<h:ul>
						<h:li>Primes p1, p2, q1,q2, p and q shall all be provable primes</h:li>
						<h:li>Primes p1, p2, q1, and q2 shall be provable primes and
							p and q shall be probable primes</h:li>
						<h:li>Primes p1, p2, q1,q2, p and q shall all be probable
							primes </h:li>
					</h:ul>
				</h:ul>
				To test the key generation method for the Random Provable primes
				method and for all the Primes with Conditions methods, the evaluator
				must seed the TSF key generation routine with sufficient data to
				deterministically generate the RSA key pair. This includes the random
				seed(s), the public exponent of the RSA key, and the desired key length.
				For each key length supported, the evaluator shall have the TSF
				generate 25 key pairs. The evaluator shall verify the correctness of the
				TSF’s implementation by comparing values generated by the TSF with
				those generated from a known good implementation.<h:br/><h:br/>
				<h:b>ECDSA Key Generation Tests</h:b><h:br/><h:br/>
				<h:u>FIPS 186-4 ECDSA Key Generation Test</h:u><h:br/><h:br/>
				For each supported NIST curve, i.e., P-256, P-384 and P-521, the
				evaluator shall require the implementation under test (IUT) to
				generate 10 private/public key pairs. The private key shall be
				generated using an approved random bit generator (RBG). To
				determine correctness, the evaluator shall submit the generated key
				pairs to the public key verification (PKV) function of a known good
				implementation.<h:br/><h:br/>
				<h:u>FIPS 186-4 Public Key Verification (PKV) Test</h:u><h:br/><h:br/>
				For each supported NIST curve, i.e., P-256, P-384 and P-521, the
				evaluator shall generate 10 private/public key pairs using the key
				generation function of a known good implementation and modify five
				of the public key values so that they are incorrect, leaving five values
				unchanged (i.e., correct). The evaluator shall obtain in response a set
				of 10 PASS/FAIL values.<h:br/><h:br/>
				<h:b>ECDSA Algorithm Tests</h:b><h:br/><h:br/>
				<h:u>ECDSA FIPS 186-4 Signature Generation Test</h:u><h:br/><h:br/>
				For each supported NIST curve (i.e., P-256, P-384 and P-521) and SHA
				function pair, the evaluator shall generate 10 1024-bit long messages
				and obtain for each message a public key and the resulting signature
				values R and S. To determine correctness, the evaluator shall use the
				signature verification function of a known good implementation.<h:br/><h:br/>
				<h:u>ECDSA FIPS 186-4 Signature Verification Test</h:u><h:br/><h:br/>
				For each supported NIST curve (i.e., P-256, P-384 and P-521) and SHA
				function pair, the evaluator shall generate a set of 10 1024-bit
				message, public key and signature tuples and modify one of the values
				(message, public key or signature) in five of the 10 tuples. The
				evaluator shall obtain in response a set of 10 PASS/FAIL values.<h:br/><h:br/>
				<h:b>RSA Signature Algorithm Tests</h:b><h:br/><h:br/>
				<h:u>Signature Generation Tests</h:u><h:br/><h:br/>
				The evaluator shall verify the implementation of RSA Signature
				Generation by the TOE using the Signature Generation Test. To
				conduct this test the evaluator must generate or obtain 10 messages
				from a trusted reference implementation for each modulus size/SHA
				combination supported by the TSF. The evaluator shall have the TOE
				use their private key and modulus value to sign these messages.<h:br/><h:br/>
				The evaluator shall verify the correctness of the TSF’s signature using a
				known good implementation and the associated public keys to verify
				the signatures.<h:br/><h:br/>
				<h:u>Signature Verification Test</h:u><h:br/><h:br/>
				The evaluator shall perform the Signature Verification test to verify the
				ability of the TOE to recognize another party’s valid and invalid
				signatures. The evaluator shall inject errors into the test vectors
				produced during the Signature Verification Test by introducing errors
				in some of the public keys e, messages, IR format, and/or signatures.
				The TOE attempts to verify the signatures and returns success or
				failure.<h:br/><h:br/>
				The evaluator shall use these test vectors to emulate the signature verification
				test using the corresponding parameters and verify that the TOE detects these
				errors.<h:br/><h:br/>
				<h:i>Equivalency</h:i><h:br/><h:br/>
				Testing of the TOE may be performed on a subset of the platforms listed in the
				TOE’s ST. Justification must be provided for those platforms that were excluded
				from testing.<h:br/><h:br/>
			</Tests>
		</aactivity>
	</f-element>
	<audit-event>
		<audit-event-descr>All occurrences of signature generation using a CA signing key.</audit-event-descr>
		<audit-event-info>Name/identifier of object being signed.</audit-event-info>
		<audit-event-info>Identifier of key used for signing.</audit-event-info>
	</audit-event>
	<audit-event>
		<audit-event-descr>Failure in signature generation.</audit-event-descr>
	</audit-event>
    </f-component>
				
			
    <!--                  -->     
    <!-- FCS_COP.1(3) -->
    <!-- Selection-based  -->
    <!--                  -->    	      
<f-component name="Cryptographic Operation (Cryptographic Hashing)" cc-id="fcs_cop.1" iteration="3" status="sel-based">
	<selection-depends req="fcs-cdp-ext-1e1" ids="crypto-sel-cop-1i3"/>
	<f-element>
		<title>
			<refinement>Refinement: </refinement>The TSF shall <refinement>
			<selectables>
				<selectable>perform</selectable>
				<selectable>invoke interfaces in the operational environment to perform</selectable>
			</selectables></refinement> [<h:i>cryptographic hashing services</h:i>] in
			accordance with a specified cryptographic algorithm 
			<refinement><selectables>
				<selectable>SHA-1</selectable>
				<selectable>SHA-256</selectable>
				<selectable>SHA-384</selectable>
				<selectable>SHA-512</selectable>
			</selectables> and message digest sizes 
			<selectables>
				<selectable>160</selectable>
				<selectable>256</selectable>
				<selectable>384</selectable>
				<selectable>512</selectable>
			</selectables> bits</refinement>
			that meet the following: [<h:i>FIPS Pub 180-4, “Secure Hash Standard”</h:i>].
		</title>
		<note role="application">
			In future versions of this document, SHA-1 may be removed as an option. SHA-1
			for generating digital signatures was disallowed after December 2013, and SHA1 for verification of digital signatures is strongly discouraged as there may be risk
			in accepting these signatures.<h:br/><h:br/>
			The selection of the hashing algorithm must correspond to the selection of the
			message digest size; for example, if SHA-1 is chosen, then the only valid message
			digest size selection would be 160 bits.<h:br/><h:br/>
			The TSF hashing functions can be implemented in one of two modes. The first
			mode is the byte-oriented mode. In this mode the TSF only hashes messages that
			are an integral number of bytes in length; i.e., the length (in bits) of the message
			to be hashed is divisible by 8. The second mode is the bit-oriented mode. In this
			mode the TSF hashes messages of arbitrary length. As there are different tests for
			each mode, an indication is given in the following sections for the bit-oriented vs.
			the byte-oriented test modes.<h:br/><h:br/>
		</note>
		<aactivity>
			<TSS>
				Regardless of whether the requirement is met by the TSF or TOE platform, the
				evaluator shall examine the TSS to ensure that all hash functions use the
				approved algorithms, modes and key sizes.
			</TSS>
			<Guidance>
				The evaluator shall examine the AGD guidance to ensure it documents how to
				configure the TOE or the TOE in conjunction with the Operational Environment
				for the required hash sizes. The AGD guidance shall also include instructions
				for disabling deprecated algorithms.
			</Guidance>
			<Tests>
				If this requirement is met by the TOE, the evaluator shall perform all of the
				following tests for each hash algorithm implemented by the TSF and used to
				satisfy the requirements of this PP.<h:br/><h:br/>
				<h:b>Short Messages Test -- Bit-Oriented Mode</h:b><h:br/><h:br/>
				The evaluator shall devise an input set consisting of m+1 messages, where m is
				the block length of the hash algorithm. The length of the messages range
				sequentially from 0 to m bits. The message text shall be pseudorandomly
				generated. The evaluator shall compute the message digest for each of the
				messages and ensure that the correct result is produced when the messages
				are provided to the TSF.<h:br/><h:br/>
				<h:b>Short Messages Test -- Byte-Oriented Mode</h:b><h:br/><h:br/>
				The evaluator shall devise an input set consisting of m/8+1 messages, where m
				is the block length of the hash algorithm. The length of the messages range
				sequentially from 0 to m/8 bytes, with each message being an integral number
				of bytes. The message text shall be pseudorandomly generated. The evaluator
				shall compute the message digest for each of the messages and ensure that
				the correct result is produced when the messages are provided to the TSF.<h:br/><h:br/>
				<h:b>Selected Long Messages Test -- Bit-Oriented Mode</h:b><h:br/><h:br/>
				The evaluator shall devise an input set consisting of m messages, where m is
				the block length of the hash algorithm. The length of the ith message is 512 +
				99*i, where 1 ≤ i ≤ m. The message text shall be pseudorandomly generated.
				The evaluator shall compute the message digest for each of the messages and
				ensure that the correct result is produced when the messages are provided to
				the TSF.<h:br/><h:br/>
				<h:b>Selected Long Messages Test -- Byte-Oriented Mode</h:b><h:br/><h:br/>
				The evaluator shall devise an input set consisting of m/8 messages, where m is
				the block length of the hash algorithm. The length of the ith message is 512 +
				8*99*i, where 1 ≤ i ≤ m/8. The message text shall be pseudorandomly
				generated. The evaluator shall compute the message digest for each of the
				messages and ensure that the correct result is produced when the messages
				are provided to the TSF.<h:br/><h:br/>
				<h:b>Pseudorandomly Generated Messages Test</h:b><h:br/><h:br/>
				This test is for byte-oriented implementations only. The evaluator shall
				randomly generate a seed that is n bits long, where n is the length of
				the message digest produced by the hash function to be tested. The
				evaluator shall then formulate a set of 100 messages and associated
				digests by following the algorithm provided in Figure 1 of [SHAVS]. The
				evaluator shall then ensure that the correct result is produced when
				the messages are provided to the TSF.<h:br/><h:br/>
				<h:i>Equivalency</h:i><h:br/><h:br/>
				Testing of the TOE may be performed on a subset of the platforms listed in the
				TOE’s ST. Justification must be provided for those platforms that were excluded
				from testing.
			</Tests>
		</aactivity>
	</f-element>
	<audit-event/>
    </f-component>
			
    <!--                  -->     
    <!-- FCS_COP.1(4) -->
    <!-- Selection-based  -->
    <!--                  -->    	      
<f-component name="Cryptographic Operation (Keyed-Hash Message Authentication)" cc-id="fcs_cop.1" iteration="4" status="sel-based">
	<selection-depends req="fcs-cdp-ext-1e1" ids="crypto-sel-cop-1i4"/>
	<f-element>
		<title>
			<refinement>Refinement: </refinement>The TSF shall 
			<refinement><selectables>
				<selectable>perform</selectable>
				<selectable>invoke interfaces in the operational environment to perform</selectable>
			</selectables></refinement>
			[<h:i>keyed hash message authentication</h:i>] in
			accordance with a specified cryptographic algorithm <refinement>HMAC-
			<selectables>
				<selectable>SHA-1</selectable>
				<selectable>SHA-256</selectable>
				<selectable>SHA-384</selectable>
				<selectable>SHA-512</selectable>
			</selectables> key size <assignable>key size (in bits) used in HMAC</assignable>, 
			and message digest sizes 
			<selectables>
				<selectable>160</selectable>
				<selectable>256</selectable>
				<selectable>384</selectable>
				<selectable>512</selectable>
			</selectables> bits</refinement> that meet the following: 
			[<h:i>FIPS Pub 198-1,“The Keyed Hash Message Authentication Code”;
			FIPS Pub 180-4, “Secure Hash Standard”</h:i>].
		</title>
		<note role="application">
			The intent of this requirement is to specify the keyed hash message authentication
			function used when used for key establishment purposes for the various
			cryptographic protocols used by the TOE (e.g., trusted channel). The hash
			selection must support the message digest size selection. The hash selection
			should be consistent with the overall strength of the algorithm used for
			FCS_COP.1(1).<h:br/><h:br/>
			In future versions of this document, SHA-1 may be removed as an option. SHA-1
			for generating digital signatures was disallowed after December 2013, and SHA1 for verification of digital signatures is strongly discouraged as there may be risk
			in accepting these signatures. <h:br/><h:br/>
		</note>
		<aactivity>
			<TSS>
				Regardless of whether the requirement is met by the TSF or TOE platform, the
				evaluator shall examine the TSS to ensure that all keyed hash functions use the
				approved algorithms and key sizes.
			</TSS>
			<Guidance>
				The evaluator shall examine the AGD guidance to ensure it contains
				instructions for configuring the TOE or the TOE in conjunction with the
				Operational Environment for the required hash sizes and message digest sizes.
			</Guidance>
			<Tests>
				If this requirement is met by the TOE, the evaluator shall perform the following
				test:<h:br/><h:br/>
				<testlist>
					<test>
						For each of the supported parameter sets, the evaluator shall
						compose 15 sets of test data. Each set shall consist of a key and
						message data. The evaluator shall have the TSF generate HMAC tags
						for these sets of test data. The resulting MAC tags shall be compared
						to the result of generating HMAC tags with the same key and IV using
						a known good implementation.
					</test>
				</testlist>
				<h:i>Equivalency</h:i><h:br/><h:br/>
				Testing of the TOE may be performed on a subset of the platforms listed in the
				TOE’s ST. Justification must be provided for those platforms that were excluded
				from testing.
			</Tests>
		</aactivity>
	</f-element>
	<audit-event/>
    </f-component>			
	
	      
    <!--                  -->     
    <!-- FCS_COP.1(5) -->
    <!-- Mandatory  -->
    <!--                  -->    	      
<f-component name="Cryptographic Operation (Password-based Key Derivation Function)" cc-id="fcs_cop.1" iteration="5" status="optional">
       	<f-element>
		<title>
				<refinement>Refinement:</refinement> The TSF shall
			    	<refinement><selectables>
				    	<selectable>perform</selectable>
				    	<selectable>invoke interfaces in the Operational Environment to perform</selectable>
				    	</selectables>
			    	</refinement>
				[<h:i>Password-based Key Derivation Functions</h:i>]
				in accordance with a specified cryptographic algorithm
				<refinement><selectables>
					<selectable>HMAC-SHA-1</selectable>
					<selectable>HMAC-SHA-256</selectable>
					<selectable>HMAC-SHA-384</selectable>
					<selectable>HMAC-SHA-512</selectable>
					</selectables>
				</refinement>					
				and <refinement>output</refinement> cryptographic key sizes
				<selectables>
					<selectable>128-bit</selectable>
					<selectable>256-bit</selectable>
				</selectables> that meet the following: [<h:i>NIST SP 800-32</h:i>].
			</title>
			<note role="application">
				This requirement is optional. It will be claimed if the method of protecting key
				shares in FPT_SKY_EXT.2 or any other mechanism to enforce access by privileged
				user depends on passwords. It may also be claimed if other mechanisms use
				password-based encryption.<h:br/><h:br/>
				In the first selection for each element, the ST author chooses whether the TOE
				performs the derivation, or whether it invokes interfaces in the Operational
				Environment for the functionality.<h:br/><h:br/>
				The ST author selects the appropriate hash algorithm used in the second selection.<h:br/><h:br/>
				The cryptographic key sizes in the third selection should be made to correspond to
				the KEK key sizes selected in FCS_CKM_EXT.1(3). A future requirement will add a
				refinement to require a PBKDF iteration count of at least 1000.<h:br/><h:br/>
				This password must be conditioned into a string of bits that forms the submask to
				be used as input into the KEK. Conditioning is be performed using one of the
				identified hash functions. NIST SP 800-132 requires the use of a pseudo-random
				function (PRF) consisting of HMAC with an approved hash function. The ST author
				selects the hash function used, also includes the appropriate requirements for
				HMAC and the hash function.
			</note>
			<aactivity>
				<TSS>
					If this SFR is implemented by the TSF, then the evaluator shall perform the
					following activities.<h:br/><h:br/>
					The evaluator shall check that the TSS describes the method by which the
					password is first encoded and then fed to the SHA algorithm. The settings for
					the algorithm (padding, blocking, etc.) shall be described, and the evaluator
					shall verify that these are supported by the selections in this component as well
					as the selections concerning the hash function itself. The evaluator shall verify
					that the TSS contains a description of how the output of the hash function is
					used to form the submask that will be input into the function and is the same
					length as the DEK or KEK being protected.<h:br/><h:br/>
					For the NIST SP 800-132-based conditioning of the passphrase, the required
					assurance activities will be performed when doing the assurance activities for
					the appropriate requirements (FCS_COP.1.1(4)). If any manipulation of the key
					is performed in forming the submask that will be used to form the KEK, that
					process shall be described in the TSS.
				</TSS>
				<Guidance>
					There are no AGD assurance activities for this requirement beyond what is
					necessary to satisfy the requirements in [CEM].
				</Guidance>
				<Tests>
					There are no ATE assurance activities for this requirement beyond what is
					necessary to satisfy the requirements in [CEM].
				      	<h:i>Equivalency</h:i><h:br/><h:br/>
				      	Testing of the TOE may be performed on a subset of the platforms listed in the
					TOE’s ST. Justification must be provided for those platforms that were excluded
					from testing.
				</Tests>
			</aactivity>
		</f-element>
		<audit-event/>
	</f-component>

    <!--                  -->     
    <!-- FCS_RBG_EXT.1 -->
    <!-- Selection-based  -->
    <!--                  -->    	      
<f-component name="Cryptographic Random Bit Generation" cc-id="fcs_rbg_ext.1" status="sel-based">
	<selection-depends req="fcs-cdp-ext-1e1" ids="crypto-sel-rbg-ext-1"/>
	<f-element>
		<title>
			The TSF shall 
			<selectables>
				<selectable>perform</selectable>
				<selectable>invoke interfaces in the operational environment to perform</selectable>
			</selectables> all deterministic random bit generation (RBG) services in accordance
			with NIST Special Publication 800-90A using 
			<selectables>
				<selectable>Hash_DRBG (any)</selectable>
				<selectable>HMAC_DRBG (any)</selectable>
				<selectable>CTR_DRBG (AES)</selectable>
			</selectables>.
		</title>
	</f-element>
	<f-element>
		<title>
			The deterministic RBG shall be seeded by an entropy source that accumulates
			entropy from
			<selectables>
				<selectable>a software-based noise source</selectable>
				<selectable>TSF hardware-based noise source</selectable>
				<selectable>an Operational Environment-based noise source</selectable>
			</selectables> with a minimum of 
			<selectables>
				<selectable>128 bits</selectable>
				<selectable>256 bits</selectable>
			</selectables> of entropy at least equal to the greatest security
			strength (according to NIST SP 800-57) of the keys and authorization factors that
			it will generate.
		</title>
		<note role="application">
			SP 800-90A contains three different methods of generating random numbers;
			each of these, in turn, depends on underlying cryptographic primitives (hash
			functions/ciphers). The ST author will select the function used, and include the
			specific underlying cryptographic primitives used in the requirement or in the TSS.
			While any of the identified hash functions (SHA- 224, SHA-256, SHA-384, SHA-512)
			are allowed for Hash_DRBG or HMAC_DRBG, only AES-based implementations for
			CTR_DRBG are allowed.<h:br/><h:br/>
			The ST author must also ensure that any underlying functions are included in the
			baseline requirements for the TOE.<h:br/><h:br/>
			For the selection in FCS_RBG_EXT.1.2, the ST author selects the appropriate
			number of bits of entropy that corresponds to the greatest security strength of the 
			algorithms included in the ST. Security strength is defined in Tables 2 and 3 of NIST
			SP 800-57A. For example, if the implementation includes 2048-bit RSA (security
			strength of 112 bits), AES 128 (security strength 128 bits), and HMAC-SHA-256
			(security strength 256 bits), then the ST author would select 256 bits.<h:br/><h:br/>
			The ST author may select either software or hardware noise sources for a TOEimplemented noise source, or an Operational Environment noise source. A
			hardware noise source is a component that produces data that cannot be
			explained by a deterministic rule, due to its physical nature. In other words, a
			hardware based noise source generates sequences of random numbers from a
			physical process that cannot be predicted. For example, a sampled ring oscillator
			consists of an odd number of inverter gates chained into a loop, with an electrical
			pulse traveling from inverter to inverter around the loop. The inverters are not
			clocked, so the precise time required for a complete circuit around the loop varies
			slightly as various physical effects modify the small delay time at each inverter on
			the line to the next inverter. This variance results in an approximate natural
			frequency that contains drift and jitter over time. The output of the ring oscillator
			consists of the oscillating binary value sampled at a constant rate from one of the
			inverters – a rate that is significantly slower than the oscillator’s natural
			frequency. <h:br/><h:br/>
		</note>
		<aactivity>
			<TSS>
				The evaluator shall examine the TSS to ensure it describes the deterministic
				random bit generation services provided by either the TSF or the Operational
				Environment, including a description of the entropy source.
			</TSS>
			<Guidance>
				If any part of the deterministic RBG services is configurable, the evaluator shall
				ensure that the operational guidance provides clear instructions for how to
				configure them, including those that pertain to the Operational Environment,
				if applicable.
			</Guidance>
			<Tests>
				Documentation shall be produced—and the evaluator shall perform the
				activities—in accordance with Annex D, Entropy Documentation and
				Assessment, regardless of whether the entropy source is implemented by the
				TOE or the Operational Environment. Note that this is only applicable if the
				TOE implements or directly invokes the DRBG. If this is not the case, then
				FCS_RBG_EXT.1 should not be included in the ST, as outlined in the application
				note for FCS_CDP_EXT.1.<h:br/><h:br/>
				For RBG implementations in the TSF, the evaluator shall also perform the
				following tests, depending on the standard to which the RBG conforms.<h:br/><h:br/>
				<h:b>Implementations Conforming to NIST Special Publication 800-90A</h:b><h:br/><h:br/>
				The evaluator shall perform 15 trials for the RBG implementation. If the RBG is
				configurable, the evaluator shall perform 15 trials for each configuration. The
				evaluator shall also confirm that the operational guidance contains appropriate
				instructions for configuring the RBG functionality.<h:br/><h:br/>
				If the RBG has prediction resistance enabled, each trial consists of<h:br/><h:br/>
				<h:ol type="1">
					<h:li>instantiate DRBG, </h:li>
					<h:li>generate the first block of random bits,</h:li>
					<h:li>generate a second block of random bits,</h:li>
					<h:li>uninstantiate.</h:li>
				</h:ol>
				The evaluator verifies that the second block of random bits is the expected
				value. The evaluator shall generate eight input values for each trial. The first is
				a count (0 – 14). The next three are entropy input, nonce, and personalization
				string for the instantiate operation. The next two are additional input and
				entropy input for the first call to generate. The final two are additional input
				and entropy input for the second call to generate. These values are randomly
				generated. “generate one block of random bits” means to generate random
				bits with number of returned bits equal to the Output Block Length (as defined
				in NIST SP 800-90A).<h:br/><h:br/>
				If the RBG does not have prediction resistance, each trial consists of<h:br/><h:br/>
				<h:ol type="1">
					<h:li>instantiate DRBG, </h:li>
					<h:li>generate the first block of random bits,</h:li>
					<h:li>reseed, </h:li>
					<h:li>generate a second block of random bits,</h:li>
					<h:li>uninstantiate.</h:li>
				</h:ol>
				The evaluator verifies that the second block of random bits is the expected
				value. The evaluator shall generate eight input values for each trial. The first is
				a count (0 – 14). The next three are entropy input, nonce, and personalization
				string for the instantiate operation. The fifth value is additional input to the
				first call to generate. The sixth and seventh are additional input and entropy
				input to the call to reseed. The final value is additional input to the second
				generate call.<h:br/><h:br/>
				The following paragraphs contain more information on some of the input
				values to be generated/selected by the evaluator.<h:br/><h:br/>
				<h:b>Entropy input:</h:b> the length of the entropy input value must equal the
				seed length. <h:br/><h:br/>			
				<h:b>Nonce:</h:b> If a nonce is supported (CTR_DRBG with no df does not use a
				nonce), the nonce bit length is one-half the seed length.<h:br/><h:br/>
				<h:b>Personalization string:</h:b> The length of the personalization string must
				be &lt;= seed length. If the implementation only supports one
				personalization string length, then the same length can be used for
				both values. If more than one string length is support, the evaluator
				shall use personalization strings of two different lengths. If the
				implementation does not use a personalization string, no value needs
				to be supplied.<h:br/><h:br/>
				<h:b>Additional input:</h:b> the additional input bit lengths have the same
				defaults and restrictions as the personalization string lengths.<h:br/><h:br/>
				<h:i>Equivalency</h:i><h:br/><h:br/>
				Testing of the TOE may be performed on a subset of the platforms listed in the
				TOE’s ST. Justification must be provided for those platforms that were excluded
				from testing.<h:br/><h:br/>
			</Tests>
		</aactivity>
	</f-element>
	<audit-event />
    </f-component>
		
	      
	<!--               -->     
        <!-- FCS_STG_EXT.1 -->
	<!--               -->           
        <f-component name="Cryptographic Key Storage" cc-id="fcs_stg_ext.1">
            <f-element>
              <title>Persistent private and secret keys shall be stored within the
		<selectables>
			<selectable>TSF</selectable>
			<selectable>Operational environment</selectable>
		</selectables>
                <selectables linebreak="yes">
			<selectable>encrypted within a hardware rooted key hierarchy established in
				accordance with
				<selectables>
					<selectable>FCS_CKM_EXT.1(2)</selectable>
					<selectable>FCS_CKM_EXT.1(3)</selectable>
				</selectables>,
				FCS_CKM_EXT.7, and FCS_CKM_EXT.8
				</selectable>
			<selectable>in a hardware cryptographic module</selectable>
		 </selectables>. 
	      </title>
              <note role="application">This requirement ensures that persistent secret keys and private keys are stored
		securely when not in use. If some secrets/keys are manipulated by the TOE and
		others are manipulated by the environment, then both of the selections can be
		specified by the ST author and the ST author must identify in the TSS those keys
		which are manipulated by the TOE and those by the environment.<h:br/><h:br/> 
		If the TOE is an application, and not a dedicated server, then it should store its
		private keys in the environment-provided key storage.<h:br/><h:br/>
		The ST author is responsible for selecting the manner in which the keys are stored
		and where they are stored in the selections above. <h:br/><h:br/> 
		This SFR applies only to keys that are relevant to the requirements in the PP/ST; it
		does not apply to keys that have no bearing on CA PP functionality.
 	      </note>
	      <aactivity>
		      <TSS>
			Regardless of whether this requirement is met by the TOE or the Operational
			Environment, the evaluator will check the TSS to ensure that it lists each
			persistent secret and private key needed to meet the requirements in the ST.
			For each of these items, the evaluator will confirm that the TSS lists for what
			purpose it is used, and how it is stored. 
		      </TSS>
		      <Guidance>
			There are no AGD assurance activities for this requirement beyond what is
			necessary to satisfy the requirements in [CEM].   
		      </Guidance>
		      <Tests>
			There are no ATE assurance activities for this requirement beyond what is
			necessary to satisfy the requirements in [CEM]. 
		      <h:i>Equivalency</h:i><h:br/><h:br/>
		      	Testing of the TOE may be performed on a subset of the platforms listed in the
			TOE’s ST. Justification must be provided for those platforms that were excluded
			from testing.
		      </Tests>
	      </aactivity>
	    </f-element>
	<audit-event/>
	</f-component>
      </subsection>
		

        <!--                             -->
	<!-- Class: FDP: User Data Protection  -->
        <!--                             -->
      <subsection title="Class: User Data Protection (FDP)" id="fdp">

	<!--               -->     
        <!-- FDP_CER_EXT.1 -->
	<!--               -->     
        <f-component cc-id="fdp_cer_ext.1" name="Certificate Profiles">
		<f-element>
			<title>
				The TSF shall implement a certificate profile function and shall ensure that issued
				certificates are consistent with configured profiles.
			</title>
		</f-element>
		<f-element>
			<title>
				The TSF shall generate certificates using profiles that comply with requirements
				for certificates as specified in IETF RFC 5280, “Internet X.509 Public Key
				Infrastructure Certificate and Certificate Revocation List (CRL) Profile”, while
				ensuring that the following conditions are met:
				<h:ol type="a">
					<h:li>The version field shall contain the integer 2.</h:li>
					<h:li>The issuerUniqueID or subjectUniqueID fields are not populated.</h:li>
					<h:li>The serialNumber shall be unique with respect to the issuing Certification
						Authority</h:li>
					<h:li>The validity field shall specify a notBefore value that does not precede the
						current time and a notAfter value that does not precede the value specified
						in notBefore.</h:li>
					<h:li>The issuer field is not empty.</h:li>
					<h:li>The signature field and the algorithm in the subjectPublicKeyInfo field shall
						contain the OID for a signature algorithm specified in FCS_COP.1(2).</h:li>
					<h:li>The following extensions are supported:
						<h:ol type="a">
							<h:li>subjectKeyIdentifier</h:li>
							<h:li>authorityKeyIdentifier</h:li>
							<h:li>basicConstraints</h:li>
							<h:li>keyUsage</h:li>
							<h:li>extendedKeyUsage</h:li>
							<h:li>certificatePolicy</h:li>
						</h:ol>
					</h:li>
					<h:li>A subject field containing a null Name (e.g., a sequence of zero relative
						distinguished names) is accompanied by a populated critical subjectAltName
						extension.</h:li>
					<h:li>The subjectKeyIdentifier extension is populated with a value unique for each
						public key contained in a certificate issued by the TSF. </h:li>
					<h:li>The authorityKeyIdentifier extension in any certificate issued by the TOE must
						be populated and must be the same as the subjectKeyIdentifier extension
						contained in the issuer’s signing certificate. </h:li>
					<h:li>Populated keyUsage and extendedKeyUsage fields in the same certificate
						contain consistent values. </h:li>
				</h:ol>
			</title>
			<note role="application">
				FDP_CER_EXT.1.2 is intended to clarify the standard interpretation that subject
				key identifiers MUST be unique to a public key in a certificate issued by a CA (not
				that the public keys are unique). The intended meaning is that it is acceptable to
				issue a certificate with a public key contained in a request that happens to match 
				another certificate issued by the CA when the other certificate also contains the
				requested public key; it is not acceptable that requests for certificates containing
				different public keys result in the same subject key identifier - as this would
				contradict the definition of the subject key identifier included in the RFC: "The
				subject key identifier extension provides a means of identifying certificates that
				contain a particular public key." This is not possible if the value is not unique to
				the public keys it issues. <h:br/><h:br/>
				The SFR refines RFC 5280 by requiring all certificate profiles used by the TOE be
				configurable to include the subject key identifier; the RFC only requires it for CA
				certificates. The RFC indicates a CA SHOULD provide subject key identifiers for end
				entity certificates.<h:br/><h:br/>
				When a single instance of the TOE represents multiple CAs, it is acceptable that a
				subject key identifier issued by one CA match the subject key identifier of another
				CA, whether implemented within the TOE or as a separate instance.
			</note>
		</f-element>
      		<f-element>
			<title>
				The TSF shall be able to generate at least 20 bits of random for use in issued
				certificates to be included in 
				<selectables>
					<selectable>serialNumber</selectable>
					<selectable>notBefore</selectable>
					<selectable>notAfter</selectable>
				</selectables> fields, where the random values are generated in accordance with FCS_RBG_EXT.1.
			</title>
			<note role="application">
				The requirement applies only to the issuance of X.509 v3 certificates. An optional
				requirement in Annex A allows for the issuance of X.509 certificates other than
				V3.<h:br/><h:br/>
				Consistency is defined in RFC5280 for FDP_CER_EXT.1.2, item i; specifically, for
				each extendedKeyUsage purpose specified, there must be a consistent keyUsage
				purpose set.<h:br/><h:br/>
				RFC updates to RFC 5280 are included in this requirement.<h:br/><h:br/>
				The random input to issued certificates in FDP_CER_EXT.1.3 can be spread across
				multiple of the selectable fields so that the total number of inserted bits is at least
				20. Select all that apply.
			</note>
			<aactivity>
				<TSS>
					The evaluator shall examine the TSS to ensure it describes the certificate profile
					function in accordance with FDP_CER_EXT.1.1 The TSS shall describe how
					certificate profiles are configured and then selected to issue certificates in
					accordance with FDP_CER_EXT.1.2. The evaluator shall also ensure that the TSS
					describes how the TSF ensures that a certificate-requesting subject possesses
					the applicable private key. Finally, the evaluator shall ensure that the TSS
					describes how 20 bits of random are generated in accordance with
					FDP_CER_EXT.1.3 and which certificate fields are involved.
				</TSS>
				<Guidance>
					The evaluator shall examine the operational guidance to ensure that
					instructions are available to configure certificate profiles used for certificate
					generation in accordance with this requirement. The operational guidance
					shall also specify how to configure proof of possession and, if applicable, how
					to configure unique serial number generation.
				</Guidance>
				<Tests>
					The evaluator shall perform the following tests for each supported certificate
					format:
					<testlist>
					<test>
						The evaluator shall configure a certificate profile using the
						available guidance, request a certificate using the profile, and then
						examine the certificate contents to ensure it matches the configured
						certificate profile.
					</test>
					<test>
						The evaluator shall specifically examine the certificate
						generated in Test 1 to ensure that it satisfies all field constraints in
						FDP_CER_EXT.1.2.
					</test>
					<test>
						The evaluator shall test the fields “d”, “e”, “f”, and “i” in
						FDP_CER_EXT.1.2 as follows:<h:br/><h:br/>
						<h:b>Field “d”:</h:b> The evaluator shall send a request with a
						subjectPublicKeyInfo that is allowed by the profile, and observe the
						request succeeds. The evaluator shall then send a request with a
						subjectPublicKeyInfo that is not allowed by the profile, and observe
						that the request is rejected (or the value that is put into the certificate
						is what was in the profile).<h:br/><h:br/>
						<h:b>Field “e”:</h:b> The evaluator shall send a request with a KeyUsage that is
						allowed by the profile, and observe the request succeeds. The
						evaluator shall then send a request with a KeyUsage that is not allowed
						by the profile, and observe that the request is rejected (or the value
						that is put into the certificate is what was in the profile).<h:br/><h:br/>
						<h:b>Field “f”:</h:b> The evaluator shall send requests to show that the CA accepts
						requests that provide an identifier in either one or both of the subject
						and subjectAltName fields, but rejects requests that do not provide an
						identifier for either one of those fields.<h:br/><h:br/>
						<h:b>Field “i”:</h:b> For each EKU listed in section 4.2.1.12 of RFC 5280, the
						evaluator performs the following tests. The evaluator shall send a
						request with a KeyUsage that is consistent (as documented in section
						4.2.1.12 of RFC 5280) with the profile EKU, and observe the request
						succeeds. The evaluator shall then send a request with a KeyUsage
						that is not consistent (as documented in section 4.2.1.12 of RFC 5280)
						with the profile EKU, and observe that the request is rejected. The
						evaluator shall send the EKU to a profile with a consistent KeyUsage
						(but no specified EKU) and observe the request succeeds. The 
						evaluator shall send the EKU to a profile with an inconsistent KeyUsage
						(but no specified EKU) and observe the request is rejected.<h:br/><h:br/>
					</test>
					<test>
						For each extendedKeyUsage value defined in section 4.2.1.12
						of RFC 5280, the evaluator shall attempt to configure a certificate
						profile with each inconsistent keyUsage for that extendedKeyUsage
						field. If the CA rejects the attempt to create such a profile, then the
						test succeeds. If the creation of such a profile is allowed, the evaluator
						shall submit a certificate request using the profile, and show that the
						TSF does not issue the certificate.<h:br/><h:br/>
					</test>
					<test>
						The evaluator shall configure a certificate profile and create a
						certificate request that violates the validity period setting in the
						configured profile (e.g., notBefore precedes the current time, the
						combination of notBefore and notAfter is beyond the validity period
						setting). The evaluator shall submit the certificate request using the
						profile and verify that the TSF rejects the request.<h:br/><h:br/>
					</test>
					</testlist>
					<h:i>Equivalency</h:i><h:br/><h:br/>		
					Testing of the TOE may be performed on a subset of the platforms listed in the
					TOE’s ST. Justification must be provided for those platforms that were excluded
					from testing.<h:br/><h:br/>
				</Tests>
			</aactivity>
		</f-element>	
		<audit-event>
			<audit-event-descr>Certificate generation: Success.</audit-event-descr>
			<audit-event-info>Certificate value or object identifier.</audit-event-info>
		</audit-event>
	</f-component>

	<!--               -->     
        <!-- FDP_CER_EXT.2 -->
	<!--               -->     
        <f-component cc-id="fdp_cer_ext.2" name="Certificate Request Matching">
		<f-element>
			<title>
				The TSF shall establish a linkage from certificate requests to issued certificates.
			</title>
			<aactivity>
				<TSS>
					The evaluator shall examine the TSS to ensure it describes the linkage between
					submitted requests and issued certificates.
				</TSS>
				<Guidance>
					The evaluator shall examine the operational guidance to ensure it contains
					instructions for how to trace a submitted request to an issued certificate and
					vice versa via the TOE’s interface.
				</Guidance>
				<Tests>
					The evaluator shall perform the following test:
					<testlist>
						<test>
							The evaluator shall configure a certificate profile using the available
							guidance and request a certificate using the profile as a subscriber. The
							evaluator shall then assume the CA Operations role and verify that a linkage
							between submitted certificate requests and issued certificates is provided.
						</test>
					</testlist>
					<h:i>Equivalency</h:i><h:br/><h:br/>		
					Testing of the TOE may be performed on a subset of the platforms listed in the
					TOE’s ST. Justification must be provided for those platforms that were excluded
					from testing.<h:br/><h:br/>
				</Tests>
			</aactivity>
		</f-element>
		<audit-event>
			<audit-event-descr>Linking of certificate to certificate request: Success</audit-event-descr>
			<audit-event-info>Certificate value or object identifier</audit-event-info>
			<audit-event-info>Certificate request or link to certificate request object identifier</audit-event-info>
		</audit-event>
		<audit-event>
			<audit-event-descr>Linking of certificate to certificate request: Failure</audit-event-descr>
			<audit-event-info>Reason for failure</audit-event-info>
			<audit-event-info>Certificate request or link to certificate request object identifier</audit-event-info>
		</audit-event>
	</f-component>

	<!--               -->     
        <!-- FDP_CER_EXT.3 -->
	<!--               -->     
        <f-component cc-id="fdp_cer_ext.3" name="Certificate Issuance Approval">
		<f-element>
			<title>
				The TSF shall support the approval of certificates by 
				<selectables>
					<selectable>RA</selectable>
					<selectable>AOR</selectable>
					<selectable>CA</selectable>
					<selectable>Operations Staff</selectable>
					<selectable>rules</selectable>
				</selectables>
				issued according to a configured certificate profile.
			</title>
			<aactivity>
				<TSS>
					The evaluator shall examine the TSS to ensure it describes the certificate
					issuance approval function, including the available interfaces that must be
					used.<h:br/><h:br/>
					The evaluator shall examine the operational guidance to ensure that it contains
					instructions for any configuration aspects of the certificate issuance approval
					function and the steps needed to perform an approval.
				</TSS>
				<Tests>
					The evaluator shall perform the following test:
					<testlist>
						<test>
							The evaluator shall configure the certificate issuance approval
							function in accordance with the operational guidance. The evaluator shall
							create a certificate request and submit it to the TOE. The evaluator shall
							access the TOE using the defined interface and verify that the submitted
							request is in the appropriate queue. The evaluator shall then assume either
							the CA Operations Staff role or the RA Staff role and approve the certificate
							request and issue the certificate. The evaluator shall verify that a certificate
							was issued.
						</test>
						If ‘rules’ is selected in FDP_CER_EXT.3.1 to allow automatic approval, the
						evaluator shall follow operational guidance to configure the certificate
						issuance approval function to follow a rule for automatic approval, and
						perform the following tests:
						<test>
							The evaluator shall construct one or more certificate requests that
							meet the rules for automatic approval, and shall verify that each requested
							certificate was issued.
						</test>
						<test>
							The evaluator shall attempt to construct one or more certificate
							requests that violate the rules for automatic approval, and shall verify that
							the requested certificates are not issued.
						</test>
					</testlist>
					<h:i>Equivalency</h:i><h:br/><h:br/>		
					Testing of the TOE may be performed on a subset of the platforms listed in the
					TOE’s ST. Justification must be provided for those platforms that were excluded
					from testing.<h:br/><h:br/>
				</Tests>
			</aactivity>
		</f-element>
		<audit-event>
			<audit-event-descr>Failed certificate approvals</audit-event-descr>
			<audit-event-info>Reason for failure</audit-event-info>
			<audit-event-info>Certificate request or link to certificate request object identifier</audit-event-info>
		</audit-event>
	</f-component>
	
	<!--               -->     
        <!-- FDP_CER_EXT.4 -->
	<!--               -->     
        <f-component cc-id="fdp_cer_ext.4" name="Certificate Status Information" status="optional">
		<f-element>
			<title>
				For X.509 certificate formats other than v3, the TSF shall ensure that these
				certificate formats contain the following general characteristics:
				<h:ul>
					<h:li>Version (0 or 1);</h:li>
					<h:li>Unique identifier of the issuer;</h:li>
					<h:li>keyUsage;</h:li>
					<h:li>Unique identifier of the certificate</h:li>
					<h:li>Validity period</h:li>
					<h:li>Signature field in accordance with FCS_COP.1(2)</h:li>
				</h:ul>
			</title>
			<note role="application">
				This optional requirement can be included if X.509 certificate formats other than
				the mandated v3 are supported.
			</note>
			<aactivity>
				<TSS>
					The evaluator shall examine the TSS to ensure it describes the X.509 certificate
					generation function and the supported and non- features of the ITU-T
					Recommendation X.509, in accordance with FDP_CER_EXT.2.1, that can be
					used to issue certificates. The evaluator shall ensure that the TSS identifies
					which of the values identified in FDP_CER_EXT.2.1 can be included in generated
					certificates.
				</TSS>
				<Guidance>
					If the TOE supports configurable certificate profiles, the evaluator shall
					examine the operational guidance to ensure that instructions are available to
					configure certificate profiles used for the generation of X.509 certificates. 
				</Guidance>
				<Tests>
					The evaluator shall perform the following test:
					<testlist>
						<test>
							For each field defined in FDP_CER_EXT.2.1, the evaluator shall
							attempt to create a certificate request that violates the required
							conditions of the field. The evaluator shall determine that all such
							attempts are rejected by the TSF. 
						</test>
					</testlist>
					<h:i>Equivalency</h:i><h:br/><h:br/>		
					Testing of the TOE may be performed on a subset of the platforms listed in the
					TOE’s ST. Justification must be provided for those platforms that were excluded
					from testing.<h:br/><h:br/>
				</Tests>
			</aactivity>
		</f-element>
		<audit-event>
			<audit-event-descr>Certificate generation</audit-event-descr>
			<audit-event-info>Name/identifier of the certificate.</audit-event-info>
			<audit-event-info>Value of the certificate generated</audit-event-info>
		</audit-event>
	</f-component>
	      
	<!--               -->     
        <!-- FDP_CSI_EXT.1 -->
	<!--               -->     
        <f-component cc-id="fdp_csi_ext.1" name="Certificate Status Information">
		<f-element>
			<title>
				The TSF shall provide certificate status information whose format complies with
				<selectables>
					<selectable>ITU-T Recommendation X.509v1 CRL</selectable>
					<selectable>ITU-T Recommendation X.509v2 CRL</selectable>
					<selectable>the OCSP standard as defined by
						<selectables>
							<selectable>RFC 6960</selectable>
							<selectable>other OCSP standard</selectable>
						</selectables>
					</selectable>
				</selectables>.
			</title>
		</f-element>
		<f-element>
			<title>
				The TSF shall support the approval of changes to the status of a certificate by
				<selectables>
					<selectable>RA</selectable>
					<selectable>CA operations staff</selectable>
					<selectable>rules</selectable>
				</selectables>.
			</title>
			<note role="application">
				Based on the selection, the ST author must choose the appropriate requirements
				from Annex B.<h:br/><h:br/>
				The ST should specify the format used to supply certificate status information. If
				other OCSP standard is selected, only current standards shall be selected, the RFC
				shall be referenced, and any optional features within the RFC shall be specified.<h:br/><h:br/>
				The various iterations of FMT_MOF.1 defines the role or roles authorized to
				approve changes to a certificate’s status.<h:br/><h:br/>
				The “changes” referenced in FDP_CSI_EXT.1.2 are the revocation requests
				received by the TOE.
			</note>
			<aactivity>
			<TSS>
				The evaluator shall examine the TSS to ensure it describes the certificate status
				function and applicable formats, in accordance with this requirement, that can
				be used to issue certificate status. The TSS must reflect the selection made by
				the ST author as well as the selection-based requirements from Annex B.<h:br/><h:br/>
				For TOEs that support OCSP, the TOE’s ST shall specify the OCSP standard and
				the ST author shall ensure that a description of the format is available.<h:br/><h:br/>
				The evaluator shall also ensure that the TSS describes the process for approving
				changes to the status of a certificate, including the interfaces that must be
				used.<h:br/><h:br/>
				If the TOE supports the configuration of certificate status information, the
				evaluator shall examine the operational guidance to ensure that instructions
				are available to configure the certificate status function to utilize the formats
				identified in FDP_CSI_EXT.1.1. 
			</TSS>
			<Guidance>
				The evaluator shall examine the operational guidance to ensure that it contains
				instructions for any configuration aspects of the certificate status change
				approval function and the steps needed to perform an approval.
			</Guidance>
			<Tests>
				Based on the selection, the evaluator shall perform the applicable tests
				associated with the requirements in Annex C:
				<testlist>
					<test>
						For certificate status information, the evaluator shall configure
						the TSF to provide certificate status information according to each
						format identified in FDP_CSI_EXT.1.1 in turn and request certificate
						status for each format. Each certificate status response shall be
						examined to ensure that it conforms to the format as described in the
						TSS.
					</test>
					<test>
						For each selected certificate status format, the evaluator shall
						issue a valid certificate from the TOE. The evaluator shall then cause
						the TOE to issue certificate status information. The evaluator shall
						check the certificate status information to verify that it reflects that the
						certificate is valid.
					</test>
					<test>
						For each selected certificate status format, the evaluator shall
						revoke a valid certificate from the TOE. The evaluator shall then cause
						the TOE to issue certificate status information. The evaluator shall
						check the certificate status information to verify that it reflects that the
						certificate is revoked.
					</test>
					<test>
						The evaluator shall configure the certificate status change
						approval function in accordance with the operational guidance. The
						evaluator shall create a certificate status change request and submit it 
						to the TOE. The evaluator shall access the TOE using the defined
						interface and verify that the submitted request is in the appropriate
						queue. The evaluator shall approve the certificate status change
						request. The evaluator shall then cause the TOE to issue certificate
						status information. The evaluator shall check the certificate status
						information to verify that it reflects the state of the certificate.
					</test>
				</testlist>
				<h:i>Equivalency</h:i><h:br/><h:br/>		
				Testing of the TOE may be performed on a subset of the platforms listed in the
				TOE’s ST. Justification must be provided for those platforms that were excluded
				from testing.<h:br/><h:br/>
			</Tests>
			</aactivity>
		</f-element>
		<audit-event/>
	</f-component>
		
	<!--               -->     
        <!-- FDP_RIP.1 -->
	<!--               -->     
        <f-component cc-id="fdp_rip.1" name="Subset Residual Information Protection">
		<f-element>
			<title>
				<refinement>Refinement:</refinement> The TSF <refinement>and 
				<selectables>
					<selectable>Operational Environment</selectable>
					<selectable>no other component</selectable>
				</selectables></refinement>
				shall ensure that any previous information content of a resource is
				made unavailable upon the 
				<selectables>
					<selectable>allocation of the resource to</selectable>
					<selectable>deallocation of the resource from</selectable>
				</selectables> 
				the following objects: <assignable>list of objects</assignable>. 
			</title>		
			<note role="application">
				“Resources” in the context of this requirement are any data buffers used to
				implement certificate authority functions, including network communications
				with the Certificate Authority. The concern is that a buffer or memory area might
				be reused in subsequent function or communication channel resulting in
				inappropriate disclosure of sensitive data. Note that this requirement applies only
				to resources that the TSF controls. “Objects” refers to any sensitive data objects
				that are under control of the TSF, such as subscribers’ personally identifiable
				information.<h:br/><h:br/>
				The first selection should include ‘Operational Environment’ if the TSF depends on
				a component of the OE to store and protect TSF data. The ST should specify the
				component and any interface used to meet this requirement. 
			</note>
			<aactivity>
				<TSS>
					The evaluator shall examine the TSS to ensure that, at a minimum, it describes
					how the previous information content is made unavailable, and at what point
					in the buffer processing this occurs.
				</TSS>
				<Guidance>
					There are no AGD assurance activities for this requirement beyond what is
					necessary to satisfy the requirements in [CEM].
				</Guidance>
				<Tests>
					There are no ATE assurance activities for this requirement beyond what is
					necessary to satisfy the requirements in [CEM].
					<h:i>Equivalency</h:i><h:br/><h:br/>		
					Testing of the TOE may be performed on a subset of the platforms listed in the
					TOE’s ST. Justification must be provided for those platforms that were excluded
					from testing.<h:br/><h:br/>
				</Tests>
			</aactivity>
		</f-element>
		<audit-event/>
	</f-component>
		
	<!--               -->     
        <!-- FDP_SDP_EXT.1 -->
	<!--               -->     
        <f-component cc-id="fdp_sdp_ext.1" name="User Sensitive Data Protection" status="optional">
		<f-element>
			<title>
				The TSF shall 
				<selectables>
					<selectable>protect</selectable>
					<selectable>invoke interfaces to the Operational Environment to protect</selectable>
				</selectables>
				<selectables linebreak="yes">
					<selectable>subscriber identity information</selectable>
					<selectable>subscriber contact information</selectable>
					<selectable>photograph from official ID such as an organization ID badge, passport or
							driver’s license,</selectable>
					<selectable>background check information</selectable>
					<selectable>copies of legal documents</selectable>
					<selectable>captured biometrics</selectable>
					<selectable><assignable>other personally identifiable information</assignable></selectable>
				</selectables> through encryption in accordance with FCS_COP.1(1) using a DEK.
			</title>
		</f-element>
		<f-element>
			<title>
				The TSF shall 
				<selectables>
					<selectable>destroy</selectable>
					<selectable>invoke interfaces to the Operational Environment to destroy</selectable>
				</selectables> all protected data when no longer required in accordance with the
				specified cryptographic data destruction method:
				<selectables linebreak="yes">
					<selectable>by clearing the DEK encrypting the protected data,</selectable>
					<selectable>in accordance with the following rules:<h:br/><h:br/>
						For volatile EEPROM the destruction shall be executed by a single direct
							overwrite consisting of
							<selectables linebreak="yes">
								<selectable>a pseudo random pattern using the TSF’s RBG (as specified in
									FCS_RBG_EXT.1),</selectable>
								<selectable>zeroes</selectable>
							</selectables> followed by a read-verify.<h:br/>h:br/>
							For volatile flash memory the destruction shall be executed by 
								<selectables linebreak="yes">
									<selectable>a single direct overwrite consisting of zeroes,</selectable>
									<selectable>a block erase</selectable>
								</selectables>
								followed by a read-verify.
					</selectable>
				</selectables>
			</title>
			<note role="application">
				In the first selection for each element, the ST author chooses whether the TOE
				performs the protection/destruction, or whether it invokes interfaces in the
				Operational Environment for the functionality.<h:br/><h:br/>
				The DEK referenced in FDP_SDP_EXT.1.1 is generated by FCS_CKM_EXT.1(1).<h:br/><h:br/>
				In the second selection in FDP_SDP_EXT.1.1, the ST author should indicate all
				protected data (e.g., subscriber PII) that is protected by the TOE or Operational
				Environment and specify how that protection is accomplished. Information
				included only in issued certificates is not included in this requirement. This is not
				a general requirement to protect all PII anywhere on the system, but instead deals
				only with information used by the TOE in performing CA functions.<h:br/><h:br/>
				For FDP_SDP_EXT.1.2, destroying data refers to rendering it inaccessible to any
				authorized or unauthorized user or process.		
			</note>
			<aactivity>
				<TSS>
					The evaluator shall examine the TSS to verify that it describes (for each
					supported platform) how the data destruction functionality is performed or
					invoked.<h:br/><h:br/>
					The evaluator shall examine the TSS to ensure it describes each user data type
					as indicated in FDP_SDP_EXT.1.1, including where it is stored, how it is
					protected (including mode and key size used when encrypting the data), when
					it is destroyed (for example, immediately after use, on system shutdown, etc.);
					and the type of destruction procedure that is performed.<h:br/><h:br/>
					The evaluator shall ensure that the mode and key size used in the encryption
					of the data is specified in the FCS_COP.1 SFR.<h:br/><h:br/>
					If the Operational Environment is invoked to perform the functions, the TSS
					shall list the interfaces (APIs) that are invoked.
				</TSS>
				<Guidance>
					If the protection and destruction of user data is configurable, the evaluator
					shall examine the operational guidance to ensure it instructs the administrator
					how to ensure that user data is protected and destroyed in accordance with
					this requirement.
				</Guidance>
				<Tests>
					The evaluator shall perform the following tests for each platform listed in the
					ST:
					<testlist>
						<test>
							The evaluator shall, for each user data type listed in the TSS,
							locate where the data is stored and verify that it is encrypted.
						</test>
						<test>
							The evaluator shall, for each user data type listed in the TSS,
							initiate the supported data destruction mechanism according to the
							documented times that it should be initiated for that user data type
							(e.g., immediately after use, on system shutdown, etc.) and verify
							that the protected data has been destroyed.
						</test>
					</testlist>
					<h:i>Equivalency</h:i><h:br/><h:br/>		
					Testing of the TOE may be performed on a subset of the platforms listed in the
					TOE’s ST. Justification must be provided for those platforms that were excluded
					from testing.<h:br/><h:br/>
				</Tests>
			</aactivity>
		</f-element>
		<audit-event/>
	</f-component> 

	<!--             -->
	<!-- FDP_STG_EXT.1  -->
	<!--             -->

    <f-component cc-id="fdp_stg_ext.1" name="User Sensitive Data Protection" status="optional">
		<f-element>
			<title>
				The TSF shall use [selection: access controlled storage, an integrity mechanism] to
				protect the trusted public keys and certificates (trust store elements) used to
				validate local logon, trusted channel, and external communication to the CA.
			</title>
			<note role="application">
				Public keys used to satisfy CA-related requirements in the ST must be protected.
				If the TOE protects the keys or a subset of the keys, this SFR is included in the ST.
				It is acceptable if some or all of the public keys are stored in the OE and protected 
				by OE-provided mechanisms. If this is the case, then the ST author includes
				OE.PUBLIC_KEY_PROTECTION in the ST. It is acceptable for the TOE to protect
				some keys and the OE to protect other keys.<h:br/><h:br/>
				There are two allowed methods of providing protection if this requirement is
				claimed in the ST. The first is that the TOE implements access control mechanisms
				to perform the protection; this is only claimed when the TOE is providing the
				storage for the public keys. The second is to provide a cryptographic-based
				integrity check on the public keys when they are accessed for use by the TOE; this
				is claimed for public keys stored either by the TOE or in the OE and an integrity
				mechanism is implemented. If this method is used (the second selection is
				chosen), then the ST author include FCS_CKM_EXT.5 in the ST as well as this SFR.
			</note>
			<aactivity>
				<TSS>
					The evaluator shall examine the TSS to ensure it describes the trusted public
					keys and certificates implemented, including trust stores that contains root CA
					certificates, used to meet the requirements of this PP. This description shall
					contain information pertaining to how certificates are loaded into the store,
					and (if the first selection in the requirement is chosen) how the store is
					protected from unauthorized access in accordance with the permissions
					established in FMT_SMF.1 and FMT_MOF.1(1) through FMT_MOF.1(5).
				</TSS>
				<Guidance>
					The evaluator shall examine the operational guidance to ensure it contains
					instructions for how to load certificates and public key into and remove
					certificates and public keys from the protected storage.
				</Guidance>
				<Tests>
					This test is conditional on the first selection in the SFR being chosen. If the
					second selection is chosen, the evaluator does not perform this and instead
					performs the actions called for FCS_CKM_EXT.5.
					<testlist>
						<test>
							(conditional) The evaluator shall attempt to modify the
							contents of the Trust Anchor Database in a way that violates the
							documented permissions and verify that the attempt fails. 
						</test>
					</testlist>
					<h:i>Equivalency</h:i><h:br/><h:br/>
					Testing of the TOE may be performed on a subset of the platforms listed in the
					TOE’s ST. Justification must be provided for those platforms that were excluded
					from testing.
				</Tests>
			</aactivity>
		</f-element>
		<audit-event>
			<audit-event-descr>Changes to the trusted public keys and certificates relevant to TOE
				functions, including additions and deletions.</audit-event-descr>
			<audit-event-info>The public key and all context information associated with the key.</audit-event-info>
		</audit-event>
	</f-component>
		
	
	</subsection>   <!-- FDP -->
	      
	<!--                             -->
	<!-- Class: FIA: Identification and Authentication  -->
        <!--                             -->
      	<subsection title="Class: Identification and Authentication (FIA)" id="fia">

	<!--               -->     
        <!-- FIA_AFL.1 -->
	<!--               -->     
        <f-component cc-id="fia_afl.1" name="Authentication Failure Handling" status="sel-based">
		<selection-depends req="fia-uau-ext-1e1" ids="sel-pwd-auth"/>
		<f-element>
			<title>
				<refinement>Refinement: </refinement>
				The TSF shall 
				<refinement><selectables>
					<selectable>implement</selectable>
					<selectable>interface with the Operational Environment to implement</selectable>
				</selectables> 
				the ability </refinement>to detect when [<h:i>an administrator
				configurable positive integer within <assignable>range of acceptable values</assignable></h:i>]
				unsuccessful authentication attempts occur related to [<h:i>remote login by a
				privileged user</h:i>].
			</title>
		</f-element>
		<f-element>
			<title>
				When the defined number of unsuccessful authentication attempts has been
				[<h:i>met</h:i>], the TSF shall 
				<selectables>
					<selectable>choose one of: prevent the remote privileged user
						from successfully authenticating until <assignable>action</assignable>
						is taken by an Administrator</selectable>
					<selectable>prevent the privileged user from successfully authenticating 
						until an Administrator defined time period has elapsed</selectable>
				</selectables>.
			</title>
			<note role="application">
				This requirement does not apply to a privileged user at the local console, since it
				does not make sense to lock a local privileged user’s account in this fashion. This
				could be addressed by (for example) requiring a separate account for local
				privileged users or having the authentication mechanism implementation
				distinguish local and remote login attempts. The “action” taken by an
				administrator is implementation specific and would be defined in the 
				administrator guidance (for example, lockout reset or password reset). The ST
				author chooses one of the selections for handling of authentication failures
				depending on how the TOE has implemented this handler.
			</note>
			<aactivity>
				<TSS>
					The evaluator shall examine the TSS to determine that it contains a description,
					for each supported method for remote administrative actions, of how
					successive unsuccessful authentication attempts are detected and tracked. The
					TSS shall also describe the method by which the remote privileged user is
					prevented from successfully logging on to the TOE, and the actions necessary
					to restore this ability.<h:br/><h:br/>
					If the Operational Environment is responsible for this function, the evaluator
					shall verify that the TSS describes that function.<h:br/><h:br/>
				</TSS>
				<Guidance>
					The evaluator shall examine the operational guidance to ensure that
					instructions for configuring the number of successive unsuccessful
					authentication attempts (1.1) and time period (1.2, if implemented) are
					provided, and that the process of allowing the remote privileged user to once
					again successfully log on is described for each “action” specified (if that option
					is chosen). If different actions or mechanisms are implemented depending on
					the authentication method (e.g., TLS vs. SSH), all must be described.<h:br/><h:br/>
					If the Operational Environment is responsible for this function, the evaluator
					shall verify that the operational guidance instructs the reader to rely on this
					capability.<h:br/><h:br/>
				</Guidance>
				<Tests>
					The evaluator shall perform the following tests for each method by which
					remote privileged users access the TOE, either directly or by authenticating to
					the Operational Environment from which the TOE inherits user information
					(e.g., TLS, SSH):<h:br/><h:br/>
					<testlist>
						<test>
							[conditional on first selection item]: The evaluator shall use the
							operational guidance to configure the number of successive
							unsuccessful authentication attempts allowed by the TOE. The
							evaluator shall test that once the limit is reached, attempts with valid
							credentials are not successful. For each action specified by the
							requirement, the evaluator shall show that following the operational
							guidance and performing each action to allow the remote privileged
							user access are successful.
						</test>
						<test>
							[conditional on second selection item]: The evaluator shall use
							the operational guidance to configure the number of successive
							unsuccessful authentication attempts allowed by the TOE and a time
							period after which valid logins will be allowed for a remote privileged 
							user. After exceeding the specified number of invalid login attempts
							and showing that valid login is not possible, the evaluator shall show
							that waiting for the interval defined by the time period before another
							access attempt will result in the ability for the remote privileged user
							to successfully log on using valid credentials.
						</test>
					</testlist>
					<h:i>Equivalency</h:i><h:br/><h:br/>
					Testing of the TOE may be performed on a subset of the platforms listed in the
					TOE’s ST. Justification must be provided for those platforms that were excluded
					from testing.<h:br/><h:br/>
				</Tests>
			</aactivity>
		</f-element>
		<audit-event>
			<audit-event-descr>The reaching of the threshold for the unsuccessful authentication attempts.</audit-event-descr>
		</audit-event>
		<audit-event>
			<audit-event-descr>The action taken. </audit-event-descr>
		</audit-event>
		<audit-event>
			<audit-event-descr>The reenablement of disabled nonadministrative accounts. </audit-event-descr>
		</audit-event>
	</f-component>							

	<!--               -->     
        <!-- FIA_CMCC_EXT.1 -->
	<!--               -->     
        <f-component cc-id="fia_cmcc_ext.1" name="Certificate Management over CMS (CMC) Client" status="sel-based">
		<selection-depends req="fco-nrr-ext-2e1" ids="sel-fco-cmcc-ext-1"/>
		<f-element>
			<title>
				The TSF shall be able to generate CMC full requests and 
				<selectables>
					<selectable>simple requests</selectable>
					<selectable>no other requests</selectable>
				</selectables> and to accept and process CMC simple and CMC full
				responses in accordance with RFC 5272 as updated by RFC 6402, meeting the
				compliance requirements for a client and end-entity in accordance with RFC 5474
				as updated by RFC 6402. 
			</title>
		</f-element>
		<f-element>
			<title>
				The TSF shall export CMC requests and import CMC responses under the control
				of a privileged user under the CA Operations Staff role.
			</title>
		</f-element>
		<f-element>
			<title>
				The TSF shall require CMC transport over HTTPS for online CMC messages in
				accordance with RFC 5273 as updated by RFC 6402, where the HTTPS is
				established in accordance with FCS_HTTPS_EXT.1. For CMC requests containing
				certificate requests other than initial certificate requests authenticated using
				shared secrets in AuthenticatedData requests or in the Identity Proof Version 2
				Control of SignedData requests, the TSF shall require HTTPS with client
				authentication.
			</title>
			<note role="application">
				A CA implemented by the TOE that is not a root CA will need to interface with a
				root or intermediate CA. 
			</note>
			<aactivity>
				<TSS>
					The evaluator shall examine the TSS to ensure that it describes how CMC client
					support is provided. 
				</TSS>
				<Guidance>
					If the TSS indicates that neither AuthenticatedData or Identity Proof Version 2
					Control mechanisms using shared secretes are supported, the evaluator shall
					also examine the operational guidance to ensure that it describes how to
					authenticate requests for subordinate CA certificates, initial subscriber
					certificates and, if supported, initial certificates for Registration Authority
					Officers, when no other certificates are available.
				</Guidance>
				<Tests>
					Testing for FIA_CMCC_EXT.1 is performed in conjunction with tests in
					FIA_CMCS_EXT.1, performing additional test activities as follows:<h:br/><h:br/>
					While completing test 2 for FIA_CMCS_EXT.1 for Test Group A:<h:br/><h:br/>
					<h:ul>
						<h:li>Test 2:
						<h:ul>
							<h:li>The evaluator shall review the CA-1 TSF’s trust store and observe
								that the offline CA-0 certificate is trusted.</h:li>
							<h:li>The evaluator shall log onto the CA-1 TSF using a privileged user
								without CA Operations Staff privilege (e.g., with administrator
								privileges), and attempt to export the request, observing that the
								attempt fails.</h:li>
							<h:li>The evaluator shall examine the certificate request(s) generated on
								the CA-1 TSF are compliant with with RFC 5272 as updated by RFC
								6402 and RFC 5474 as updated by RFC 6402.</h:li>
						</h:ul>
						</h:li>
					</h:ul>
					After completing tests in Test Group B the evaluator shall perform the
					following:<h:br/><h:br/>
					<h:ul>
						<h:li>Test 5:
							<h:ul>
								<h:li>The evaluator shall establish a third instance of the TSF
									implementing an online CA (CA-2) subordinate to the online CA-1
									established for Test Group B in FIA_CMCC_EXT.1. </h:li>
								<h:li>For one of the request types indicated in the selection for
									FIA_CMCC_EXT.1.1 and one of the POP control supported, the
									evaluator shall log into the CA-2 TSF in the CA Operations Staff role
									and cause CA-2 to generate CMC request.</h:li>
								<h:li>The evaluator shall cause the CA-2 CMC request to be
									authenticated (using any available mechanism) to CA-1, and install
									the certificate for the CA using CA-1’s CMC response.</h:li>
								<h:li>The evaluator shall cause the CA-2 TSF to generate a valid
									certificate update request.</h:li>
								<h:li>The evaluator shall send the update request to the CA-1 TSF via
									HTTPS.</h:li>
								<h:li>The evaluator shall observe that the CA-2 TSF receives and
									processes the response from CA-1 and that the updated CA-2
									certificate is available for use.</h:li>
							</h:ul>
						</h:li>
					</h:ul>
					<h:i>Equivalency</h:i><h:br/><h:br/>
					Testing of the TOE may be performed on a subset of the platforms listed in the
					TOE’s ST. Justification must be provided for those platforms that were excluded
					from testing. 
				</Tests>
			</aactivity>
		</f-element>
		<audit-event>
			<audit-event-descr>CMC requests (generated or received) containing certificate requests or revocation requests.</audit-event-descr>
			<audit-event-info>Identifiers for all entities authenticating the request, including the entity providing client authentication for the
				CMC transport (if any).</audit-event-info>
			<audit-event-info>The submitted request</audit-event-info>
		</audit-event>
		<audit-event>
			<audit-event-descr>CMC responses issued.</audit-event-descr>
			<audit-event-info>Any signed response.</audit-event-info>
		</audit-event>
	</f-component>
		
	<!--               -->     
        <!-- FIA_CMCS_EXT.1 -->
	<!--               -->     
        <f-component cc-id="fia_cmcs_ext.1" name="Certificate Management over CMS (CMC) Server" status="sel-based">
		<selection-depends req="fco-nrr-ext-2e1" ids="sel-fco-cmcs-ext-1"/>
		<f-element>
			<title>
				The TSF shall be able to accept and process CMC full requests and 
				<selectables>
					<selectable>simple requests</selectable>
					<selectable>no other requests</selectable>
				</selectables>.
			</title>
		</f-element>
		<f-element>
			<title>
				The TSF shall be able to generate CMC simple responses and 
				<selectables>
					<selectable>CMC full responses</selectable>
					<selectable>no other</selectable>
				</selectables> that are consistent with the selected certificate profile and
				which are in accordance with RFC 5272 as updated by RFC 6402, meeting the
				compliance requirements for CMS server and certification authorities in
				accordance with RFC 5474 as updated by RFC 6402.
			</title>
		</f-element>
		<f-element>
			<title>
				The TSF shall require CMC transport over HTTPS for online CMC messages in
				accordance with RFC 5273 as updated by RFC 6402, where the HTTPS is
				established in accordance with FCS_HTTPS_EXT.1. For CMC requests containing
				certificate requests other than initial certificate requests authenticated using
				shared secrets in AuthenticatedData requests or in the Identity Proof Version 2
				Control of SignedData requests, the TSF shall require HTTPS with client
				authentication, shall ensure the authenticating entity is the same as the entity
				signing the CMC request and any subject indicated in the requested certificate(s)
				are the same as the authenticating entity, or the authenticating entity is
				<selectables>
					<selectable>an authorized RA for the requested subject</selectable>
					<selectable>an AOR registered for the requested subject</selectable>
					<selectable>no other entity</selectable>
				</selectables>.
			</title>
		</f-element>
		<f-element>
			<title>
				The TSF shall require CMC simple and full messages use cryptographic support in
				accordance with this profile. At a minimum the TSF shall ensure:<h:br/><h:br/>
				<h:ul>
					<h:li>Signature generation and verification for SignedData are performed in
						accordance with FCS_COP.1(2)</h:li>
					<h:li>Encryption for EnvelopedData is performed in accordance with FCS_COP.1(1)</h:li>
					<h:li>PasswordRecipientInfo for EnvelopedData or AuthenticatedData is derived in
						accordance with FCS_COP.1(5)</h:li>
					<h:li>hashAlgId in Identity Proof Version 2 control, keyGenAlgorithm in Pop Link
						Witness Version 2 control, witnessAlgID in Encrypted POP and Decrypted POP
						controls, hashAlgorithm in Publish Trust Anchors control are in accordance
						with FCS_COP.1(3)</h:li>
					<h:li>macAlgId in Identity Proof Version 2 control, macAlgorithm in POP Link
						Witness Version 2 Control, and the POPAlgID in Encrypted POP and Decrypted
						POP controls, are in accordance with FCS_COP.1(4)</h:li>
					<h:li>DHPOP mechanisms shall be as specified in RFC 6955 with cryptographic
						support in accordance with this Protection Profile</h:li>
				</h:ul>
			</title>
		</f-element>
		<f-element>
			<title>
				The TSF shall accept, process and export CMC messages under the control of local
				privileged user sessions for privileged users with CA Operations Staff, 
				<selectables>
					<selectable>RA Staff</selectable>
					<selectable>no other</selectable>
				</selectables> role.
			</title>
			<note role="application">
				FIA_CMCS_EXT.1.5 focuses on offline root CAs that do not have direct connection
				to external IT entities.<h:br/><h:br/>
				In subsequent versions of the PP, the TSF will be required to meet the Suite B
				profile for CMC as described in RFC 6403. 
			</note>
			<aactivity>
				<TSS>
					The evaluator shall examine the TSS to ensure that it describes how CMC server
					support is provided. <h:br/><h:br/>
					The evaluator shall examine the TSS to determine how initial requests are
					authenticated when no certificates are available.
				</TSS>
				<Guidance>
					The evaluator shall examine the operational guidance to ensure it contains
					instructions on how to configure CMC processing to support the TOE’s
					certificate profiles.<h:br/><h:br/>
					If the TSS indicates that neither AuthenticatedData or Identity Proof Version 2
					Control mechanisms using shared secretes are supported, the evaluator shall
					also examine the operational guidance to ensure that it describes how to
					authenticate requests for subordinate CA certificates, initial subscriber
					certificates and, if supported, initial certificates for Registration Authority
					Officers, when no other certificates are available.
				</Guidance>
				<Tests>
					The evaluator shall perform the following tests:<h:br/><h:br/>
					<h:b>Test Group A. Offline CA Operations:</h:b><h:br/><h:br/>
					<testlist>
						<test><h:ul>
							<h:li>The evaluator shall establish the TSF in an offline mode to provide
								an operational root CA, (CA-0) according to AGD-PRE.</h:li>
							<h:li>The evaluator shall use a CMC client to generate and export a CMC
								full request to obtain CA-0’s certificate. The evaluator shall log into
								the TSF with CA Operations Staff role to submit the request, and
								observe that the CA-0’s certificate is returned in the response.</h:li>
							<h:li>[Conditional on CMC support for shared secrets:] While still logged
								into the TSF, the evaluator shall establish a username and shared
								secret to be used to authenticate a subordinate CA (CA-1) for use
								in Test 2.</h:li>
							<h:li>The evaluator shall install the CA’s certificate into the CMC client’s
								trust store for use in subsequent tests.</h:li>
							</h:ul>
						</test>
						<test><h:ul>
							<h:li>The evaluator shall establish a second instance of the TSF to be a
								subordinate CA (CA-1) to the root CA established in Test 1.</h:li>
							<h:li>The evaluator shall log into the CA-1 TSF in the CA Operations Staff
								role and load the self-signed certificate obtained in Test 1 into the
								CA-1’s trust store</h:li>
							<h:li>The evaluator shall generate certificate request(s):
								<h:ul>
									<h:li>[Conditional on CMC support shared secrets]: The evaluator
										shall request the CA-1 TSF to generate a CMC requests for the
										CA-0 TSF to sign its certificate, using the established username
										as password from test 1 to authenticate the request using CMC
										AuthenticatedData or Identity Proof Version 2 Control
										mechanisms,</h:li>
									<h:li>[Conditional on CMC support for shared secrets] The evaluator
										shall generate two CMC request for certificates on the CMC
										client using the same authentication mechanism(s) as on the 
										subordinate CA-1 TSF. The first request CMC client shall use the
										same username established by the CA-0 TSF, but use a
										modified the shared secret. The second request shall use a
										modified the username, but use the established shared secret.</h:li>
									<h:li>[Conditional, if the TSF does not provide CMC support for
										shared secrets:] The evaluator shall follow operational
										guidance to generate a certificate request for the CA-1 TSF that
										can be authenticated by manual processes.</h:li>
								</h:ul>
							</h:li>
							</h:ul>
						</test>
						<test><h:ul>
							<h:li>The evaluator shall sign into the CA-0 TSF in the CA Operations Staff
								role and submit in turn the requests generated in Test 2.</h:li>
							<h:li>The evaluator shall observe that the CA-0 TSF generates a CMC
								response containing CA-1’s signed certificate for the correctly
								authenticated request, and that the root CA certificate repository
								and audit trail indicates successful generation.</h:li>
							<h:li>[Conditional on CMC support for shared secrets:] For each request
								from the CMC client including modified authentication data, the
								evaluator shall observe that the CA-0 TSF either generates a full
								CMC request indicating errors or does not return a request, and
								that the CA-0 TSF’s audit trail indicates the errors.</h:li>
							</h:ul>
						</test>
						<test>
							The evaluator shall sign into the subordinate CA in the CA
							Operations Staff role, import the simple CMC response and complete
							the initialization of the CA-1 TSF in accordance with OGD-PRE.
						</test>
					</testlist>
					<h:b>Test Group B. Online subordinate CA (uses root and subordinate CA established
						in offline tests):</h:b>
					<testlist>
						<test><h:ul>
							<h:li>[Conditional on CMC support for shared secrets:] The evaluator
								shall log onto the CA-1 TSF in the CA Operations Staff role and
								establish a username and shared secret for entities represented by
								the CMC client established above. A different username and shared
								secret should be used for at least as many entities are there are
								request types and POP controls (but at least two).</h:li>
							<h:li>For each request type indicated in the selection for
								FIA_CMCS_EXT.1.1 and for each POP control supported, the
								evaluator shall use the CMC client to establish a CMC request, using
								a different identifier (subject name) for each request. </h:li>
							<h:li>[Conditional on CMC support for shared secrets:] The evaluator
								shall log onto the subordinate CA in the CA Operations Staff role
								and establish a username and shared secret for entities
								represented by the CMC client established above. A different
								username and shared secret should be used for at least as many
								entities are there are request types and POP controls (but at least
								two).</h:li>
							<h:li>For each request type indicated in the selection for
								FIA_CMCS_EXT.1.1 and for each POP control supported, the 
								evaluator shall use the client to establish a CMC request, using a
								different identifier (subject name) for each request.
								<h:ul>
									<h:li>[Conditional on CMC support for shared secrets:] The evaluator
										shall authenticate the requests using the established
										username/shared secret combinations.</h:li>
									<h:li>[Conditional on TSF not providing CMC support for shared
										secrets:] The evaluator shall generate certificate requests that
										can be authenticated via mechanisms described in the OGD.</h:li>
								</h:ul></h:li>
							<h:li>The evaluator shall copy each request, and create new requests
								with modified POP values.</h:li>
							<h:li>[Conditional on CMC support for shared secrets:] The evaluator
								shall establish an HTTPS session without client authentication
								between the CMC client and the CA-1 TSF, and submit in turn, each
								of the modified requests, observing that the CA-1 TSF returns full
								CMC responses indicating POP errors, or does not return responses
								and the CA-1 TSF’s logs indicate the errors.</h:li>
							<h:li>The evaluator shall then submit in turn, each of the unmodified
								requests under the HTTPS session, provide any required approvals,
								and observe that the CA-1 TSF returns CMC responses containing
								signed end-entity certificates, each of which properly chain to the
								root CA-0 and that the CA-1 TSF’s repository and audit trail indicate
								successful issuance.</h:li>
							</h:ul>
						</test>
						<test><h:ul>
							<h:li>The evaluator shall select one of the client’s certificates and use
								the CMC client to generate a CMC request for a certificate update,
								authenticated with the selected certificate.</h:li>
							<h:li>The evaluator shall submit the request under the existing, nonauthenticated HTTPS session, and observe that either the CA-1 TSF
								responds with a full CMC response indicating that the transport is
								invalid or that no response is provided and the CA-1 TSF’s audit trail
								indicates the error.</h:li>
							</h:ul>
						</test>
						<test>
							The evaluator shall establish a new HTTPS session between the
							CMC client and the CA-1 TSF using client authentication with the
							selected client certificate (and associated private key) and resubmit
							the request selected in Test 2, observing that the CA-1 TSF returns a
							simple CMC response containing a valid certificate for the client. The
							HTTPS session is retained for Test 4.
						</test>
						<test>
							The evaluator shall select a second client certificate, with a
							different subject name from that used to establish the HTTPS session,
							and shall generate a CMC request to update that certificate. The
							evaluator shall observe that the CA-1 TSF returns a full CMC response
							indicating CMC transport failure or does not respond, and that the CA1 audit trail indicates the error.
						</test>
					</testlist>
					<h:b>Test Group C. Support for Certificate Profiles</h:b>
					<testlist>
						<test>
							The evaluator shall configure the CA-1 TSF to use a certificate
							profile requiring extensions not used in Test Groups A or B.
						</test>
						<test>
							The evaluator shall select a valid certificate and use the CMC
							client to generate a CMC request to update the certificate that is
							otherwise valid, but not populating the required extension, establish
							an HTTPS session between the client and the CA-1 TSF with client
							authentication using the selected client certificate and associated
							private key, and submit the CMC request. The evaluator shall observe
							that the CA-1 TSF responds in one of the following ways:
							<h:ul>
								<h:li>returns a full CMC response rejecting the update indicating a
									profile error</h:li>
								<h:li>returns a simple CMC response containing a certificate
									meeting the current profile (implicitly rejecting the request
									without the required extension), or </h:li>
								<h:li>does not return a response, and the CA-1 TSF’s audit trail
									indicates the error,</h:li>
							</h:ul>
						</test>
						<test>
							The evaluator shall generate another otherwise valid CMC
							request for the selected certificate, this time populating the extension,
							but with an invalid value. The evaluator shall submit the request via
							the proper HTTPS transport and observe that the that the CA-1 TSF
							responds in one of the following ways:
							<h:ul>
								<h:li>returns a full CMC response rejecting the update indicating a
									profile error</h:li>
								<h:li>returns a simple CMC response containing a certificate
									meeting the current profile (implicitly rejecting the request
									without the required extension), or </h:li>
								<h:li>does not return a response, and the CA-1 TSF’s audit trail
									indicates the error,</h:li>
							</h:ul>
						</test>
						<test>
							The evaluator shall generate and submit a valid CMC request
							including the extension and observe that the subordinate CA returns a
							simple CMC response with the updated certificate and that the
							subordinate CA certificate repository and audit trail indicate the
							successful issuance.
						</test>
					</testlist>
					<h:b>Test Group D. Additional Testing of Controls</h:b><h:br/><h:br/>
					<testlist>
						<test>
							For each required control, the evaluator shall generate and
							submit an otherwise valid CMC request including a certificate update
							where the control is missing, or submitted with an invalid value, and
							observe that the subordinate CA returns a full CMC with the error
							indicated or does not respond, and that the subordinate CA audit trail
							indicates the error.
						</test>
					</testlist>
					<h:b>Test Group E. Additional Cryptographic Testing</h:b><h:br/><h:br/>
					<testlist>
						<test>
							For each item in FIA_CMCS_EXT.1.5, the evaluator shall
							generate and submit an otherwise valid CMC request including a
							certificate update where the item uses an invalid cryptographic
							mechanism, and observe that the subordinate CA returns a full CMC
							indicating the failure or does not respond, and that the subordinate CA
							audit trail indicates the error.
						</test>
					</testlist>
					<h:i>Equivalency</h:i><h:br/><h:br/>
					Testing of the TOE may be performed on a subset of the platforms listed in the
					TOE’s ST. Justification must be provided for those platforms that were excluded
					from testing. 
				</Tests>
			</aactivity>
		</f-element>
		<audit-event>
			<audit-event-descr>CMC requests (generated or received) containing certificate requests or revocation
				requests.</audit-event-descr>
			<audit-event-info>Identifiers for all entities authenticating the request, including the
				entity providing client authentication for the CMC transport (if any).</audit-event-info>
			<audit-event-info>The submitted request</audit-event-info>
		</audit-event>
		<audit-event>
			<audit-event-descr>CMC responses issued.</audit-event-descr>
			<audit-event-info>Any signed response.</audit-event-info>
		</audit-event>
	</f-component>		
		
		
	<!--               -->     
        <!-- FIA_PMG_EXT.1 -->
	<!--               -->     
        <f-component cc-id="fia_pmg_ext.1" name="Password Management" status="sel-based">
		<selection-depends req="fia-uau-ext-1e1" ids="sel-pwd-auth"/>
		<f-element>
			<title>
				The TSF shall provide the following password management capabilities for
				privileged passwords:<h:ul>
				<h:li>Passwords shall be able to be composed of any combination of upper and
					lower case letters, numbers, and the following special characters: 
					<selectables>
						<selectable>“!”</selectable>
						<selectable>“@”</selectable>
						<selectable>“#”</selectable>
						<selectable>“$”</selectable>
						<selectable>“%”</selectable>
						<selectable>“^”</selectable>
						<selectable>“&amp;”</selectable>
						<selectable>“*”</selectable>
						<selectable>“(”</selectable>
						<selectable>“)”</selectable>
						<selectable><assignable>other characters</assignable></selectable>
					</selectables>;</h:li>
				<h:li>Minimum password length shall be settable by the Administrator, and
					support passwords of 14 characters or greater.</h:li></h:ul>
			</title>
			<note role="application">
				The ST author selects the special characters that are supported by TOE; they may
				optionally list additional special characters supported using the assignment.
				"Privileged passwords" refers to passwords used by privileged users at the local
				console or over protocols that support passwords, such as SSH and HTTPS.
			</note>
			<aactivity>
				<TSS>
					The evaluator shall examine the TSS to ensure it describes how the minimum
					password is established and the range of values that can be assigned.
				</TSS>
				<Guidance>
					The evaluator shall examine the operational guidance to determine that it
					provides guidance to security administrators on the composition of strong
					passwords, and that it provides instructions on setting the minimum password
					length.
				</Guidance>
				<Tests>
					The evaluator shall perform the following test:<h:br/><h:br/>
					<testlist>
						<test>
							The evaluator shall compose passwords that either meet
							the requirements, or fail to meet the requirements, in some way.
							For each password, the evaluator shall verify that the TOE supports
							the password. While the evaluator is not required (nor is it
							feasible) to test all possible compositions of passwords, the 
							evaluator shall ensure that all characters, rule characteristics, and
							a minimum length listed in the requirement are supported, and
							justify the subset of those characters chosen for testing.
						</test>
					</testlist>
					<h:i>Equivalency</h:i><h:br/><h:br/>
					Testing of the TOE may be performed on a subset of the platforms listed in the
					TOE’s ST. Justification must be provided for those platforms that were excluded
					from testing.<h:br/><h:br/>
				</Tests>
			</aactivity>
		</f-element>
		<audit-event />
	</f-component>

	<!--               -->     
        <!-- FIA_UAU.7 -->
	<!--               -->     
        <f-component cc-id="fia_uau.7" name="Protected Authentication Feedback" status="sel-based">
		<selection-depends req="fia-uau-ext-1e1" ids="sel-pwd-auth"/>
		<f-element>
			<title>
				<refinement>Refinement: </refinement>The TSF shall provide only 
				<refinement>[<h:i>obscured feedback and <assignable> list
					of other feedback</assignable></h:i>]</refinement>
					to the <refinement>privileged</refinement> user while the 
					authentication is in progress.
			</title>
			<aactivity>
				<TSS>
					For each authentication mechanism selected in FIA_UAU_EXT.1.1, the
					evaluator shall examine the TSS to ensure it describes how obscured feedback
					is provided to the authenticating user. If no obscured feedback is provided, the
					TSS must provide justification for why it is not provided.
				</TSS>
				<Guidance>
					There are no AGD assurance activities for this requirement beyond what is
					necessary to satisfy the requirements in [CEM].
				</Guidance>
				<Tests>
					The evaluator shall perform the following test:
					<testlist>
						<test>
							The evaluator shall locally authenticate to the TOE and verify
							that at most obscured feedback is provided while entering the
							authentication information.
						</test>
					</testlist>
					<h:i>Equivalency</h:i><h:br/><h:br/>
					Testing of the TOE may be performed on a subset of the platforms listed in the
					TOE’s ST. Justification must be provided for those platforms that were excluded
					from testing.
				</Tests>
			</aactivity>
		</f-element>
		<audit-event />
	</f-component>
		
		
	<!--               -->     
        <!-- FIA_X509_EXT.1 -->
	<!--               -->     
        <f-component cc-id="fia_x509_ext.1" name="Certificate Validation">
		<f-element>
			<title>
				The TSF shall 
				<selectables>
					<selectable>validate</selectable>
					<selectable>interface with the Operational Environment to validate</selectable>
				</selectables>
				certificates in accordance with the following rules: <h:br/><h:br/>
				<h:ul>
					<h:li>IETF RFC 5280 certificate validation and certificate path validation.</h:li>
					<h:li>The certificate path must terminate with a certificate in the Trust Anchor
						Database.</h:li>
					<h:li>The TSF shall validate a certificate path by ensuring the presence of the
						basicConstraints extension and that the cA flag is set to TRUE for all CA
						certificates.</h:li>
					<h:li>The TSF shall validate the revocation status of the certificate using 
						<selectables>
							<selectable>the Online Certificate Status Protocol (OCSP) as 
								specified in FDP_CSI_EXT.1</selectable>
							<selectable>a Certificate Revocation List (CRL) as specified in FDP_CSI_EXT.1</selectable>
						</selectables>.</h:li>
					<h:li>The TSF shall validate the extendedKeyUsage field according to the following
						rules:
						<h:ul>
							<h:li>Certificates used for trusted updates and executable code integrity
								verification shall have the Code Signing purpose (id-kp 3 with OID
								1.3.6.1.5.5.7.3.3),</h:li>
							<h:li>Client certificates presented for TLS shall have the Client Authentication
								purpose (id-kp 2 with OID 1.3.6.1.5.5.7.3.2) in the extendedKeyUsage
								field, </h:li>
							<h:li>Server certificates presented for TLS shall have the Server Authentication
								purpose (id-kp 1 with OID 1.3.6.1.5.5.7.3.1) in the extendedKeyUsage
								field.</h:li>
						</h:ul>
					</h:li>
				</h:ul>
			</title>
			<note role="application">
				The TSF may rely on the Operational Environment to perform certificate handling
				functionality in cases where the TOE relies on an environmental component to
				provide trusted remote communications.<h:br/><h:br/>
				FIA_X509_EXT.1 lists the rules for validating certificates. The ST authorshall select
				whether revocation status is verified using OCSP or CRLs. Depending on this
				selection, the appropriate CRL or OCSP requirements from Annex B must be
				included.<h:br/><h:br/>
				Certificates may optionally be used for trusted updates of TSF Software
				(FPT_TUD_EXT.1) and for data/software integrity verification (FPT_TST_EXT.2)
				and, if implemented, must be validated to contain the Code Signing purpose
				extendedKeyUsage. <h:br/><h:br/>
				Whenever TLS or HTTPS is used by the TSF to protect communications originating
				from external IT entities, certificates used to perform authentication must be
				validated to contain the Client Authentication purpose extendedKeyUsage.<h:br/><h:br/>
				Whenever the TOE originates messaging to external IT services using TLS or
				HTTPS, certificates must be used to perform the authentication and must be
				validated to contain the Server Authentication purpose extendedKeyUsage.<h:br/><h:br/>
				It should be noted that in all cases, the validation is expected to end in a trusted
				root certificate.<h:br/><h:br/>
			</note>
		</f-element>
		<f-element>
			<title>
				The TSF shall only treat a certificate as a CA certificate if the basicConstraints
				extension is present and the CA flag is set to TRUE.
			</title>
			<note role="application">
				This requirement applies to certificates that are used and processed by the TSF
				and restricts the certificates that may be added to the Trust Anchor Database.
			</note>
			<aactivity>
				<TSS>
					The evaluator shall examine the TSS to ensure it describes where the check of
					validity of the certificates takes place. The evaluator shall ensure the TSS also
					provides a description of the certificate path validation algorithm for each
					certificate format supported by the TOE.
				</TSS>
				<Guidance>
					There are no AGD assurance activities for this requirement beyond what is
					necessary to satisfy the requirements in [CEM].
				</Guidance>
				<Tests>
					The evaluator shall perform the following tests in conjunction with the other
					Certificate Services assurance activities, including the use cases in
					FIA_X509_EXT.2.1. The tests for the extendedKeyUsage rules are performed in
					conjunction with the uses that require those rules.<h:br/><h:br/>
					<testlist>
						<test>The evaluator shall demonstrate that validating a certificate
							without a valid certification path results in the function (application
							validation, trusted channel setup, or trusted software update) failing.
							The evaluator shall then load a certificate or certificates needed to
							validate the certificate to be used in the function, and demonstrate
							that the function succeeds. The evaluator then shall delete one of the
							certificates, and show that the function fails. </test>
						<test>The evaluator shall demonstrate that validating an expired
							certificate anywhere in a certificate path results in the function failing.</test>
						<test>The evaluator shall test that the TOE can properly handle
							revoked certificates –conditional on whether CRL or OCSP is selected;
							if both are selected, and then a test is performed for each method. The 
							evaluator has to only test one up in the trust chain (future revisions
							may require to ensure the validation is done up the entire chain). The
							evaluator shall ensure that a valid certificate is used, and that the
							validation function succeeds. The evaluator shall then attempt the test
							with a certificate that will be revoked (for each method chosen in the
							selection) and verify that the validation function fails. </test>
						<test>The evaluator shall construct a certificate path, such that the
							certificate of the CA issuing the CA’s certificate does not contain the
							basicConstraints extension. The validation of the certificate path fails.</test>
						<test>The evaluator shall construct a certificate path, such that the
							certificate of the CA issuing the CA’s certificate has the cA flag in the
							basicConstraints extension not set. The validation of the certificate
							path fails.</test>
						<test>The evaluator shall construct a certificate path, such that the
							certificate of the CA issuing the CA’s certificate has the cA flag in the
							basicConstraints extension set to TRUE. The validation of the certificate
							path succeeds.</test>
						<test>The evaluator shall modify a single byte in the certificate and
							verify that the certificate fails to validate.</test>
					</testlist>
					<h:i>Equivalency</h:i><h:br/><h:br/>		
					Testing of the TOE may be performed on a subset of the platforms listed in the
					TOE’s ST. Justification must be provided for those platforms that were excluded
					from testing.<h:br/><h:br/>
				</Tests>
			</aactivity>
		</f-element>
		<audit-event>
			<audit-event-descr>Failed certificate validations</audit-event-descr>
		</audit-event>
	</f-component>

	<!--               -->     
        <!-- FIA_X509_EXT.2 -->
	<!--               -->     
        <f-component cc-id="fia_x509_ext.2" name="Certificate-based Authentication">
		<f-element>
			<title>
				The TSF shall 
				<selectables>
					<selectable>use</selectable>
					<selectable>interface with the Operational Environment to use</selectable>
				</selectables>
				X.509v3 certificates as defined by RFC 5280 to support authentication for code
				signing for TOE updates, 
				<selectables>
					<selectable>IPsec</selectable>
					<selectable>TLS</selectable>
					<selectable>HTTPS</selectable>
					<selectable>SSH</selectable>
				</selectables>, and 
				<selectables>
					<selectable>integrity verification for TSF protected data</selectable>
					<selectable>integrity verification for TSF software and firmware</selectable>
					<selectable><assignable>other uses</assignable></selectable>
					<selectable>no additional uses</selectable>
				</selectables>.
			</title>
			<note role="application">
				The ST author‘s selection of trusted communication channel is expected to match
				the selections in FTP_TRP.1.1 and FTP_ITC.1.1 (if FTP_ITC.1 is included in the ST).
				Certificates may optionally be used for integrity verification (FPT_TST_EXT.2) and
				other uses.
			</note>
		</f-element>
		<f-element>
			<title>
				When the TSF cannot determine the current revocation status of a certificate, the
				TSF shall 
				<selectables>
					<selectable>allow the administrator to choose whether to accept the certificate</selectable>
					<selectable>accept the certificate</selectable>
					<selectable>not accept the certificate</selectable>
				</selectables>.
			</title>
			<note role="application">
				The TSF may rely on the Operational Environment to perform certificate handling
				functionality in cases where the TOE relies on an environmental component to 
				provide trusted remote communications. If the ST author selects SSH, the TSF shall
				be validated against the Extended Package for Secure Shell.<h:br/><h:br/>
				Often a connection must be established to perform a verification of the revocation
				status of a certificate - either to download a CRL or to perform OCSP. The selection
				is used to describe the behavior in the event that such a connection cannot be
				established (for example, due to a network error). If the TOE has determined the
				certificate valid according to all other rules in FIA_X509_EXT.1, the behavior
				indicated in the second selection shall determine the validity. The TOE must not
				accept the certificate if it fails any of the other validation rules in FIA_X509_EXT.1.
				If the administrator-configured option is selected by the ST author, the ST author
				must also select function 22 in FMT_SMF.1.
			</note>
		</f-element>
		<f-element>
			<title>
				The TSF shall not establish a trusted communication channel if the peer certificate
				is deemed invalid.
			</title>
			<aactivity>
				<TSS>
					The evaluator shall examine the TSS to ensure it describes the certificate(s)
					used by the TOE, the different uses for each certificate, and how the TSF
					chooses which certificates to use. The evaluator shall examine the TSS to
					confirm that it describes the behavior of the TOE when a connection cannot be
					established during the validity check of a certificate used in establishing a
					trusted channel. 
				</TSS>
				<Guidance>
					The evaluator shall examine the operational guidance to ensure clear
					instructions for configuring the operating environment so that the TOE can use
					the certificates which are provided. If the requirement is that the administrator
					is able to specify the default action if the peer certificate is deemed invalid,
					then the evaluator shall ensure that the operational guidance contains
					instructions on how this configuration action is performed.
				</Guidance>
				<Tests>
					The evaluator shall perform the following tests:
					<testlist>
						<test>
							For each function listed in FIA_X509_EXT.2.1 that requires the
							use of certificates the evaluator shall demonstrate that using a
							certificate without a valid certification path results in the function
							failing. Using the operational guidance, the evaluator shall then load a
							certificate or certificates needed to validate the certificate to be used
							in the function, and demonstrate that the function succeeds. The 
							evaluator then shall delete one of the certificates, and show that the
							function fails.
						</test>
						<test>
							The evaluator shall demonstrate that using a valid certificate
							that requires certificate validation checking to be performed in at least
							some part by communicating with a non-TOE entity. The evaluator
							shall then manipulate the environment so that the TOE is unable to
							verify the validity of the certificate, and observe that the action
							selected in FIA_X509_EXT.2.2 is performed. If the selected action is
							administrator-configurable, then the evaluator shall follow the
							operational guidance to determine that all supported administratorconfigurable options behave in their documented manner. 
						</test>
					</testlist>
					<h:i>Equivalency</h:i><h:br/><h:br/>		
					Testing of the TOE may be performed on a subset of the platforms listed in the
					TOE’s ST. Justification must be provided for those platforms that were excluded
					from testing.<h:br/><h:br/>
				</Tests>
			</aactivity>
		</f-element>
		<audit-event>
			<audit-event-descr>Failed authentications</audit-event-descr>
		</audit-event>
	</f-component>
	
	<!--               -->     
        <!-- FIA_UAU_EXT.1 -->
	<!--               -->     
        <f-component cc-id="fia_uau_ext.1" name="Authentication Mechanism">
		<f-element id="fia-uau-ext-1e1">
			<title>
				The TSF shall 
				<selectables>
					<selectable>provide</selectable>
					<selectable>interface with the OE to provide</selectable>
				</selectables> a 
				<selectables>
					<selectable id="sel-pwd-auth">password-based authentication mechanism</selectable>
					<selectable><assignable>other authentication mechanism(s)</assignable></selectable>
				</selectables>
				to perform privileged user authentication. 
			</title>
			<note role="application">
				Examples of “other authentication mechanisms” for the selection include onetime
				password mechanisms such as RSA SecurID, certificates, and biometrics.
			</note>
			<aactivity>
				<TSS>
					Assurance activities for this requirement are covered under those for
					FIA_UIA_EXT.1. If other authentication mechanisms are specified, the
					evaluator shall include those methods in the activities for FIA_UIA_EXT.1.
				</TSS>
			</aactivity>
		</f-element>
		<audit-event>
			<audit-event-descr>All uses of the authentication mechanism used for access to TOE related functions</audit-event-descr>
			<audit-event-info>Origin of the attempt (e.g., IP address)</audit-event-info>
		</audit-event>
	</f-component>

	<!--               -->     
        <!-- FIA_UIA_EXT.1 -->
	<!--               -->     
        <f-component cc-id="fia_uia_ext.1" name="User Identification and Authentication">
		<f-element>
			<title>
				The TSF shall allow the following actions prior to requiring a non-TOE entity to
				initiate the identification and authentication process:
				<h:ul>
					<h:li>Display the warning banner in accordance with FTA_TAB.1;</h:li>
					<h:li>Obtain certificate status information;</h:li>
					<h:li>
						<selectables>
							<selectable>download certificate from repository</selectable>
							<selectable>no other actions</selectable>
							<selectable><assignable> list of services or actions
								performed by the TSF in response to
								non-TOE entity request</assignable></selectable>
						</selectables></h:li>
				</h:ul>
			</title>
			<note role="application">
				A “non-TOE entity” refers to users (privileged user, subscribers, and relying
				parties) of services available from the TOE directly. If the TOE is able to download
				certificates from the certificate repository prior to initiating the I&amp;A process, the
				ST author includes that item in the ST. While it should be the case that few or no
				services are available to external entities prior to identification and 
				authentication, if there are some available to non-TOE entities, these should be
				listed in the assignment statement; otherwise “no other actions” should be
				selected.
			</note>
		</f-element>
		<f-element>
			<title>
				The TSF shall require each user to be successfully identified and authenticated
				before allowing any other TSF-mediated actions on behalf of that user, including
				subscriber certificate renewal, subscriber revocation requests, privileged user
				access, 
				<selectables>
					<selectable>no other actions</selectable>
					<selectable><assignable>other TSF-mediated actions</assignable></selectable>
				</selectables>.
			</title>
		</f-element>
		<f-element>
			<title>
				For subscriber actions, the TSF shall verify that the DN of the certificate presented
				by the subscriber for authentication matches that of the certificate being affected
				by the subscriber’s actions.
			</title>
			<note role="application">
				Authentication can be password-based through the local console or through a
				protocol that supports passwords (such as SSH), or certificates (such as TLS).<h:br/><h:br/>
				Certificate renewal and certificate revocation requests can be performed by
				subscribers with valid certificates and are limited to actions on those certificates;
				subscribers cannot renew or revoke other users’ certificates. Privileged user access
				requires further authentication. If there are other actions available to
				authenticated users, these should be listed in the assignment; otherwise, “no
				other actions” should be selected.
			</note>
			<aactivity>
				<TSS>
					The evaluator shall examine the TSS to ensure it describes the logon process
					for each logon method (local, remote (HTTPS, SSH, etc.)) supported for the TOE.
					This description shall contain information pertaining to the credentials
					allowed/used, any protocol transactions that take place, and what constitutes
					a “successful logon”.<h:br/><h:br/>
					The evaluator shall examine the TSS to determine that it describes all actions
					that can be performed prior to I&amp;A as well as all actions that require successful
					I&amp;A, and by whom these actions can be performed. Any constraints on these
					services shall be documented in the TSS.
				</TSS>
				<Guidance>
					The evaluator shall examine the operational guidance to determine that any
					necessary preparatory steps (e.g., establishing credential material such as preshared keys, tunnels, certificates, etc.) to logging in are described. For each
					supported login method, the evaluator shall ensure the operational guidance
					provides clear instructions for successfully logging on. If configuration is
					necessary to ensure the services provided before login are limited, the
					evaluator shall determine that the operational guidance provides sufficient
					instruction on limiting all allowed services. The evaluator shall examine the
					operational guidance to verify that it describes how to configure the
					constraints on each type of subscriber self-service request. 
				</Guidance>
				<Tests>
					The evaluator shall perform the following tests for each method by which
					privileged users access the TOE (local and remote), as well as for each type of
					credential supported by the access method in accordance with the
					authentication mechanisms listed in FIA_UAU_EXT.1:
					<testlist>
						<test>
							The evaluator shall use the operational guidance to
							configure the appropriate credential supported for the access
							method. For that credential/access method, the evaluator shall
							show that providing correct I&amp;A information results in the ability
							to access the system, while providing incorrect information results
							in denial of access.
						</test>
						<test>
							The evaluator shall configure the non-authenticated
							services allowed according to the operational guidance, and then
							determine the services available to an external remote entity
							(including subscribers and relying parties). The evaluator shall
							determine that the list of services available is limited to those
							specified in the requirement. The evaluator shall also verify that
							non-authenticated remote entities cannot access the services
							listed in FIA_UIA_EXT.1.2 that require I&amp;A.
						</test>
						<test>
							For local access, the evaluator shall exercise the services in
							accordance with FIA_UIA_EXT.1.1 available to a local privileged
							user prior to I&amp;A, and make sure this list is consistent with the
							requirement.
						</test>
						<test>
							The evaluator shall configure the constraints on subscriber
							self-service requests. The evaluator shall assume a CA Operations
							Staff or RA Staff role and issue a certificate to at least one unique
							subscriber. For each configured service, the evaluator shall request
							authorized activities using the issued certificates and verify that
							they can be performed.
						</test>
						<test>
							The evaluator shall configure the constraints on subscriber
							self-service requests. The evaluator shall assume a CA Operations
							Staff or RA Staff role and issue a certificate to at least two unique
							subscribers. For each configured service, the evaluator shall
							request authorized activities using one issued certificate for the
							other subscriber’s information and shall verify that the request is
							denied. The evaluator shall request unauthorized activities using
							one issued certificate and shall verify that the request is denied.
						</test>
					</testlist>
					<h:i>Equivalency</h:i><h:br/><h:br/>		
					Testing of the TOE may be performed on a subset of the platforms listed in the
					TOE’s ST. Justification must be provided for those platforms that were excluded
					from testing.<h:br/><h:br/>
				</Tests>
			</aactivity>
		</f-element>
		<audit-event>
			<audit-event-descr>All use of the identification and authentication mechanism used for TOE-related roles</audit-event-descr>
			<audit-event-info>Provided user identity.</audit-event-info>
			<audit-event-info>Origin of the attempt (e.g., IP address)</audit-event-info>
		</audit-event>
	</f-component>		
      </subsection>
		
 	<!--                             -->
	<!-- Class: FMT: Security Management  -->
        <!--                             -->
     <subsection title="Class: Security Management (FMT)" id="fmt">
	<note role="application">
		FMT_MOF.1 has been broken up into several iterations to define the specific
		management functions that are available to each of the roles defined by
		FMT_SMR.2. The FMT_MOF.1 iterations restrict some functions to a particular
		role, and allow the ST author to choose the role to which other functions may be
		restricted through selections in a particular iteration. The ST author should select
		those security management functions that belong to the roles supported by the
		TOE. All TSF management functions need to be specified as being able to be
		performed by at least one of the defined roles.
	</note>

	<!--               -->     
        <!-- FMT_MOF.1(1) -->
	<!--               -->     
        <f-component cc-id="fmt_mof.1" iteration="1" name="Management of Security Functions Behavior (Administrator Functions)">
		<f-element>
			<title>
				<refinement>Refinement:</refinement>The 
				<refinement><selectables>
					<selectable>TSF</selectable>
					<selectable>Operational Environment</selectable>
					</selectables></refinement>
				shall restrict the abiulity to
				<refinement>
					<h:ul>
						<h:li>manage the TOE locally and remotely;</h:li>
						<h:li>configure the audit mechanism;</h:li>
						<h:li>configure and manage certificate profiles;</h:li>
						<h:li>modify revocation configuration;</h:li>
						<h:li>perform updates to the TOE;</h:li>
						<h:li>perform on-demand integrity tests;</h:li>
						<h:li>import and remove X.509v3 certificates into/from the Trust Anchor
							Database;</h:li>
						<h:li>
						<selectables linebreak="yes">
							<selectable>Import <assignable> secret and private keys other than the CA’s signing keys</assignable></selectable>
							<selectable>configure certificate revocation list function;</selectable>
							<selectable>configure OCSP function;</selectable>
							<selectable>disable deprecated algorithms;</selectable>
							<selectable>accept certificates whose validity cannot be determined;</selectable>
							<selectable><assignable>other security management functions</assignable></selectable>
						</selectables></h:li>
					</h:ul>
				</refinement>
				to [<h:i>Administrators</h:i>].	
			</title>
			<note role="application">
				It is likely that some combination of the TOE and its Operational Environment are
				collectively responsible for implementing these management functions. In such
				cases, the ST author should specify, for each function, the component that
				enforces it.
			</note>
			<aactivity>
				<Tests>
					Testing for this requirement is defined under FMT_MOF.1(4). The only
					difference between the iterations of FMT_MOF.1 is the specific set of
					management functions that are available to each administrative role. Testing
					for this SFR is conducted sufficiently thoroughly if the evaluator can
					demonstrate that the assigned role can perform only the functions specified in
					the SFR.
				</Tests>
			</aactivity>
		</f-element>
		<audit-event/>
	</f-component>			
		
	<!--               -->     
        <!-- FMT_MOF.1(2) -->
	<!--               -->     
        <f-component cc-id="fmt_mof.1" iteration="2" name="Management of Security Functions Behavior (CA/RA Functions)">
		<f-element>	     
			<title>
				<refinement>Refinement:</refinement>The
				<refinement><selectables>
					<selectable>TSF</selectable>
					<selectable>Operational Environment</selectable>
					</selectables></refinement>
				shall restrict the ability to<h:br/><h:br/>
				<refinement><h:ul>
					<h:li>approve and execute the issuance of certificates;</h:li>
					<h:li>configure subscriber self-service request constraints;</h:li>
					<h:li><selectables linebreak="yes">
						<selectable>configure automated certificate approval management;</selectable>
						<selectable>approve rulesets that govern the authorizations of AORs to manage
							particular certificates on behalf of an organization;</selectable>
						<selectable>accept, process and export CMC messages;</selectable>
						<selectable>no other function</selectable>
					</selectables></h:li></h:ul></refinement>
					to 
				<refinement>
					<selectables>
						<selectable>CA Operations Staff</selectable>
						<selectable>RA Staff</selectable>
				</selectables></refinement>
			</title>
			<aactivity>
				<Tests>
					Testing for this requirement is defined under FMT_MOF.1(4). The only
					difference between the iterations of FMT_MOF.1 is the specific set of
					management functions that are available to each administrative role. Testing
					for this SFR is conducted sufficiently thoroughly if the evaluator can
					demonstrate that the assigned role can perform only the functions specified in
					the SFR.
				</Tests>
			</aactivity>
		</f-element>
		<audit-event/>		
	</f-component>				
	     
	<!--               -->     
        <!-- FMT_MOF.1(3) -->
	<!--               -->     
        <f-component cc-id="fmt_mof.1" iteration="3" name="Management of Security Functions Behavior (CA Operations Functions)">
		<f-element>
			<title>
				<refinement>:Refinement:</refinement>
				The <refinement>
				<selectables>
					<selectable>TSF</selectable>
					<selectable>Operational Environment</selectable>
				</selectables></refinement>
				shall restict the ability to
				<refinement>
					<h:ul>
						<h:li>approve certificate revocation;</h:li>
						<h:li><selectables linebreak="yes">
							<selectable>perform archival and recovery;</selectable>
							<selectable>import a key share to support recovery of a CA signing key;</selectable>
							<selectable>approve rulesets that govern the authorizations of RAs to manage
								particular certificates on behalf of an organization;</selectable>
							<selectable>export PKCS#10 certificate request;</selectable>
							<selectable>import CA certificate;</selectable>
							<selectable>no other function</selectable>
						</selectables></h:li>
					</h:ul>
				</refinement> to <refinement>[CA Operations Staff]</refinement>.
			</title>
			<aactivity>
				<Tests>
					Testing for this requirement is defined under FMT_MOF.1(4). The only
					difference between the iterations of FMT_MOF.1 is the specific set of
					management functions that are available to each administrative role. Testing
					for this SFR is conducted sufficiently thoroughly if the evaluator can
					demonstrate that the assigned role can perform only the functions specified in
					the SFR.
				</Tests>
			</aactivity>
		</f-element>
		<audit-event/>
	</f-component>
	
	<!--               -->     
        <!-- FMT_MOF.1(4) -->
	<!--               -->     
        <f-component cc-id="fmt_mof.1" iteration="4" name="Management of Security Functions Behavior (Admin/Officer Functions)">
		<f-element>	     
			<title>
				<refinement>Refinement:</refinement> The
				<refinement><selectables>
					<selectable>TSF</selectable>
					<selectable>Operational Environment</selectable>
					</selectables></refinement>
				shall restrict the ability to
				<refinement><h:ul>
					<h:li>perform destruction of sensitive data when no longer needed;</h:li>
					<h:li><selectables linebreak="yes">
						<selectable>participate as a second party for archival and recovery;</selectable>
						<selectable>import a key share to support recovery of a CA signing key;</selectable>
						<selectable>perform encrypted export of private or secret key or critical data</selectable>
					</selectables></h:li>
					</h:ul>
				</refinement>
				to 
				<refinement><selectables>
					<selectable>Administrators</selectable>
					<selectable>Auditor</selectable>
					<selectable>CA Operations Staff</selectable>
					</selectables>
				</refinement>.
			</title>
			<note role="application">
				It is acceptable to have the auditor participate in archive and recovery of the key
				as one of the parties in a 'two party' procedure; in the current key archive
				requirements, any participant (including the auditor) only gains access to key
				shares (but cannot access the key).
			</note>
			<aactivity>
				<TSS>
					The evaluator shall examine the TSS to ensure it identifies the restrictions
					consistent with this requirement. For every function specified across all
					iterations, the TSS must specify how the restriction is achieved and how (by
					role or some other specified mechanism). This applies whether the ST author
					selects “TSF” or “Operational Environment” in the first SFR selection.
				</TSS>
				<Guidance>
					If the role restriction mechanism is configurable, the evaluator shall examine
					the operational guidance to determine that the necessary instructions to meet
					each iteration of the FMT_MOF.1 requirement for the TOE in its evaluated
					configuration are provided. This applies only to management functions
					implemented by or accessible through the TSF.
				</Guidance>
				<Tests>
					Testing only applies to functions implemented by or accessible through the TSF.<h:br/><h:br/>
					The evaluator shall, for each management function, assume the role defined
					for that function and demonstrate that the assigned role can perform the
					functions. The evaluator shall, for each management function, assume each
					role not assigned to that function, attempt to use the function, and verify that
					the TSF does not permit it.
					<h:i>Equivalency</h:i><h:br/><h:br/>		
					Testing of the TOE may be performed on a subset of the platforms listed in the
					TOE’s evaluated configuration in the ST. Justification must be provided for
					those platforms that were excluded from testing. Note that this must explicitly
					cover functionality for capabilities implemented by the Operational
					Environment, if “Operational Environment” is selected.<h:br/><h:br/>
				</Tests>
			</aactivity>
		</f-element>
		<audit-event/>
	</f-component>
				
	<!--               -->     
        <!-- FMT_MOF.1(5) -->
	<!--               -->     
        <f-component cc-id="fmt_mof.1" iteration="5" name="Management of Security Functions Behavior (Autitor Functions)">
		<f-element>
			<title>
				<refinement>Refinement:</refinement>The 
				<refinement><selectables>
					<selectable>TSF</selectable>
					<selectable>Operational Environment</selectable>
					</selectables>
				</refinement>
				shall restrict the ability to
				<refinement><h:ul>
					<h:li>Delete entries from the audit trail</h:li>
					<h:li><selectables>
						<selectable>Search the audit trail</selectable>
						<selectable>Set or change the retention period parameter for audit records requiring
							extended retention</selectable>
					</selectables></h:li></h:ul>
				</refinement>
				to [<h:i>auditors</h:i>].
			</title>
			<aactivity>
				<Tests>
					Testing for this requirement is defined under FMT_MOF.1(4). The only
					difference between the iterations of FMT_MOF.1 is the specific set of
					management functions that are available to each administrative role. Testing
					for this SFR is conducted sufficiently thoroughly if the evaluator can
					demonstrate that the assigned role can perform only the functions specified in
					the SFR.
				</Tests>
			</aactivity>
		</f-element>
		<audit-event/>
	</f-component>

	     
	<!--               -->     
        <!-- FMT_MTD.1 -->
	<!--               -->     
        <f-component cc-id="fmt_mtd.1" name="Management of TSF Data">
		<f-element>
			<title>
				The TSF shall restrict the ability to <h:b>manage the TSF data</h:b> to [<h:i>privileged users</h:i>].
			</title>
			<note role="application">
				The word “manage” includes but is not limited to create, initialize, view, change
				default, modify, delete, clear, and append. This requirement is intended to be the
				“default” requirement for management of TSF data; other iterations of FMT_MTD
				should place different restrictions or operations available on the specificallyidentified TSF data. TSF data includes cryptographic information as well;
				managing these data would include the association of a cryptographic protocol
				with an interface, for instance. The specifics of management of data associated
				with defined operations are contained in the FMT_MOF iterations.
			</note>
			<aactivity>
				<TSS>
					The evaluator shall examine the TSS to determine that, for each administrative
					function identified in the operational guidance; those that are accessible
					through an interface prior to administrator log-in are identified. For each of
					these functions, the evaluator shall also confirm that the TSS details how the
					ability to manipulate the TSF data through these interfaces is disallowed for
					non-administrative users.
				</TSS>
				<Guidance>
					The evaluator shall examine the operational guidance to determine that each
					of the TSF-data-manipulating functions implemented in response to the
					requirements of this PP is identified, and that configuration information is
					provided to ensure that only administrators have access to the functions.
				</Guidance>
				<Tests>
					The evaluator shall ensure that all TSF data specified in the ST can be managed
					in the ways specified in the ST by Administrators, and that non-administrative
					roles are not authorized to manage TSF data. This activity may be performed in
					the course of performing other testing and does not necessarily need to be
					done as a separate test.
					<h:i>Equivalency</h:i>
					Testing of the TOE may be performed on a subset of the platforms listed in the
					TOE’s ST. Justification must be provided for those platforms that were excluded
					from testing.
				</Tests>
			</aactivity>
		</f-element>
		<audit-event/>
	</f-component>			

	
	<!--               -->     
        <!-- FMT_SMF.1 -->
	<!--               -->     
        <f-component cc-id="fmt_smf.1" name="Specification of Management Functions">
		<f-element>
			<title>
				<refinement>Refinement:</refinement> The 
				<refinement><selectables>
					<selectable>TSF</selectable>
					<selectable>Operational Environment</selectable>
					</selectables>
				</refinement>
				shall be capable of performing the following management functions: [
				<h:ul type="1">
					<h:li>Ability to manage the TOE locally and remotely;</h:li>					
					<h:li>Ability to perform updates to the TOE;</h:li>
					<h:li>Ability to perform archival and recovery;</h:li>
					<h:li>Ability to manage the audit mechanism;</h:li>
					<h:li>Ability to configure and manage certificate profiles;</h:li>
					<h:li>Ability to approve and execute the issuance of certificates;</h:li>
					<h:li>Ability to approve certificate revocation;</h:li>
					<h:li>Ability to modify revocation configuration;</h:li>
					<h:li>Ability to configure subscriber self-service request constraints;</h:li>
					<h:li>Ability to perform on-demand integrity tests;</h:li>
					<h:li>Ability to destroy sensitive user data when no longer needed;</h:li>
					<h:li>Ability to import and remove X.509v3 certificates into/from the Trust Anchor Database;</h:li>
					<h:li><selectables linebreak="yes">
						<selectable>Ability to configure the NPE ruleset;</selectable>
						<selectable>Ability to configure automated process used to approve the revocation of a
							certificate or information about the revocation of a certificate;</selectable>
						<selectable>Ability to approve rulesets that govern the authorizations of RAs or AORs to
							manage particular certificates on behalf of an organization;</selectable>
						<selectable>
							<selectables>
								<selectable>Ability to modify the CRL configuration</selectable>
								<selectable>Ability to modify the OCSP configuration</selectable>
							</selectables></selectable>
						<selectable>Ability to configure the list of TOE-provided services available before an entity
							is identified and authenticated, as specified in FIA_UIA_EXT.1;</selectable>
						<selectable>Ability to configure the cryptographic functionality;</selectable>
						<selectable>Ability to import private keys;</selectable>
						<selectable>Ability to export TOE private keys (not for archival);</selectable>
						<selectable>Ability to disable deprecated algorithms;</selectable>
						<selectable>Ability to accept certificates whose revocation status cannot be determined;</selectable>
						<selectable>Ability to accept, process and export CMC messages;</selectable>
						<selectable>No other capabilities.</selectable>
					</selectables></h:li>
				</h:ul>
			</title>
			<note role="application">
				Some TOE functions require the use of the Operational Environment. The ST
				author simply must make clear in the ST what management functions are
				performed by the TOE itself or which are performed by the TOE in conjunction with
				its environment.<h:br/><h:br/>
				Except as indicated below, the security management functions for FMT_SMF.1 are
				distributed throughout the PP and are included as part of the requirements in
				FMT_MOF.1 and any cryptographic management functions specified in the
				reference standards. Compliance to these requirements satisfies compliance with
				FMT_SMF.1.
			</note>
			<aactivity>
				<TSS>
					There are no TSS assurance activities for this requirement beyond what is
					necessary to satisfy the requirements in [CEM].
				</TSS>
				<Guidance>
					The evaluator shall check to make sure that every management function
					mandated by the PP is described in the operational guidance and that the
					description contains the information required to perform the management
					duties associated with the management function.
				</Guidance>
				<Tests>
					In the course of performing the testing activities for the evaluation, the
					evaluator shall use all supported interfaces, although it is not necessary to
					repeat each test involving an administrative action with each interface. The
					evaluator shall ensure, however, that each supported method of administering
					the TOE that conforms to the requirements of this PP be tested; for instance,
					if the TOE can be administered through a local hardware interface; SSH; and
					TLS/HTTPS; then all three methods of administration must be exercised during
					the evaluation team’s test activities.<h:br/><h:br/>
					<h:i>Equivalency</h:i><h:br/><h:br/>
					Testing of the TOE may be performed on a subset of the platforms listed in the
					TOE’s evaluated configuration in the ST. Justification must be provided for
					those platforms that were excluded from testing. Note that this must explicitly
					cover guidance instructions and functionality for capabilities implemented by
					the Operational Environment, if “Operational Environment” is selected.
				</Tests>
			</aactivity>
	     </f-element>
		<audit-event/>
	</f-component>						

	     
	<!--               -->     
        <!-- FMT_SMR.2 -->
	<!--               -->     
        <f-component cc-id="fmt_smr.2" name="Restrictions on Security Roles">
		<f-element>
			<title>
				<refinement>Refinement:</refinement>The TSF 
				<refinement>and 
					<selectables>
						<selectable>Operational Environment</selectable>
						<selectable>no other component</selectable>
					</selectables>
				</refinement> shall maintain the roles: [<h:br/>
				<h:ul>
					<h:li><h:i>Administrator</h:i></h:li>
					<h:li><h:i>Auditor</h:i></h:li>
					<h:li><h:i>CA Operations Staff</h:i></h:li>
					<h:li><selectables>
						<selectable>RA Staff</selectable>
						<selectable>Authorized Organizational Representative</selectable>
						<selectable>no other roles</selectable>
						</selectables>
					</h:li>
				</h:ul>
			</title>
		</f-element>
		<f-element>
			<title><refinement>Refinement:</refinement>The TSF 
				<refinement> and
					<selectables>
						<selectable>Operational Environment</selectable>
						<selectable>no other component</selectable>
					</selectables>
				</refinement>
				shall be able to associate users with roles.
			</title>
		</f-element>
		<f-element>
			<title>
				<refinement>Refinement:</refinement>The TSF
				<refinement>and<selectables>
					<selectable>Operational Environment</selectable>
					<selectable>no other component</selectable>
					</selectables>
				</refinement>shall ensure that the conditions [
				<h:ul><h:i>
					<h:li>No identity is authorized to assume both an Auditor role and any of the other
						roles in FMT_SMR.2.1; and</h:li>
					<h:li>No identity is authorized to assume both a CA Operations Staff role and any
						of the other roles in FMT_SMR.2.1</h:li></h:i>]
				</h:ul> are satisfied.
			</title>
			<note role="application">
				This document specifies five roles: Administrator, Auditor, CA Operations Staff,
				Registration Authority, and Authorized Organizational Representative. However,
				the TOE is not required to maintain all six roles. 
			</note>
			<aactivity>
				<TSS>
					The evaluator shall examine the TSS to ensure it identifies the roles, the
					privileges granted to and limitations of each role, and whether they are
					implemented by the TOE or by the TOE in conjunction with its environment.
					The evaluator shall also examine the TSS to ensure it describes the interfaces
					available to each role and how role separation is ensured.
				</TSS>
				<Guidance>
					The evaluator shall examine the AGD documents to ensure they contain
					instructions for using either the TOE or the TOE in conjunction with its
					environment to assign roles to the corresponding users.<h:br/><h:br/>
					The evaluator shall review the operational guidance to ensure that it contains
					instructions for how the roles connect to and perform operations on the TOE
					and which interfaces are supported.
				</Guidance>
				<Tests>
					The evaluator shall perform the following tests:
					<testlist>
						<test>
							For each supported role, the evaluator shall assume the role
							and connect to the TOE as specified in the AGD documentation. The
							evaluator shall verify that the role can perform the documented
							operations.
						</test>
						<test>
							The evaluator shall attempt to assume the Auditor role in
							conjunction with any other role as defined in FMT_SMR.2.1 and shall
							verify it is not possible.
						</test>
						<test>
							The evaluator shall attempt to assume the CA Operations Staff
							role in conjunction with any other role as defined in FMT_SMR.2.1 and
							shall verify it is not possible.
						</test>
					</testlist>
					<h:i>Equivalency</h:i><h:br/><h:br/>
					Testing of the TOE may be performed on a subset of the platforms listed in the
					TOE’s ST. Justification must be provided for those platforms that were excluded
					from testing.
				</Tests>
			</aactivity>
		</f-element>
		<audit-event>
			<audit-event-descr>Modifications to the group of users that are part of a role</audit-event-descr>
			<audit-event-info>Modifications to the group of users that are part of the role</audit-event-info>
		</audit-event>
	</f-component>
	</subsection>
	     
	     
 	<!--                             -->
	<!-- Class: FPT: Protection of the TSF  -->
        <!--                             -->
     <subsection title="Class: Protection of the TSF (FPT)" id="fpt">

	<!--               -->     
        <!-- FPT_APW_EXT.1 -->
	<!--               -->     
        <f-component cc-id="fpt_apw_ext.1" name="Protection of Privileged USer Password" status="sel-based">
		<selection-depends req="fia-uau-ext-1e1" ids="sel-pwd-auth"/>
		<f-element>
			<title>The TSF shall store passwords in non-plaintext form.</title>
		</f-element>
		<f-element>
			<title>The TSF shall prevent the reading of plaintext passwords.</title>
			<note role="application">
				The intent of the requirement is that raw password authentication data are not
				stored in the clear, and that no user or administrator is able to read the plaintext
				password through “normal” interfaces. An all-powerful administrator of course
				could directly read memory to capture a password but is trusted not to do so.<h:br/><h:br/>
				In this version of the PP there are no requirements on the method used to store
				the passwords in non-plaintext form, but cryptographic methods based on the
				requirements in FCS_COP are preferred. In future versions of this PP, FCS_COPbased cryptographic methods that conform to the Level 2 Credential Storage
				requirements from NIST SP 800-63 will be required.
			</note>
			<aactivity>
				<TSS>
					The evaluator shall examine the TSS to determine that it details all
					authentication data that are subject to this requirement, and the method used
					to obscure the plaintext password data when stored. The evaluator shall
					ensure that the TSS also details that passwords are stored in such a way that
					they are unable to be viewed through an interface designed specifically for that
					purpose, as outlined in the application note.<h:br/><h:br/>
					There are no AGD assurance activities for this requirement beyond what is
					necessary to satisfy the requirements in [CEM].
				</TSS>
				<Tests>
					The evaluator shall perform the following test:<h:br/><h:br/>
					<testlist>
						<test> 
							The evaluator shall use forensic tools to search storage media
							to verify that passwords cannot be found in an unobscured (e.g.,
							plaintext) form.
						</test>
					</testlist>
					<h:i>Equivalency</h:i><h:br/><h:br/>
					Testing of the TOE may be performed on a subset of the platforms listed in the
					TOE’s ST. Justification must be provided for those platforms that were excluded
					from testing.
				</Tests>
			</aactivity>
		</f-element>
	</f-component>
	     
	<!--               -->     
        <!-- FPT_FLS.1 -->
	<!--               -->     
        <f-component cc-id="fpt_fls.1" name="Failure with Preservation of Secure State">
		<f-element>
			<title>
				The TSF shall preserve a secure state when the following types of failures occur:
				<selectables>
					<selectable>DRBG failure</selectable>
					<selectable>signature verification failure</selectable>
					<selectable>integrity test failure</selectable>
					<selectable>integrity failure on audit</selectable>
					<selectable>integrity failure on Trust Anchor database</selectable>
					<selectable><assignable>other potential TSF failures</assignable></selectable>
					<selectable><assignable>other potential Operational Environment failures</assignable></selectable>
				</selectables>.
			</title>
			<note role="application">
				The intent of this requirement is to prevent the use of failed randomization and
				other events that can compromise the operation of the CA. This means that the
				TOE must be able to attain a secure/safe state when any of the identified failures
				occurs. If the TOE should encounter a failure in the middle of a critical operation,
				the TOE should not just quit operating, leaving key material and user data
				unprotected.<h:br/><h:br/>
				The failure of an Operational Environment component can be just as detrimental
				to security as a failure of the TSF itself. Therefore, in addition to describing the
				potential TSF failures and how the TOE preserves a secure state in response, the
				ST author is also expected to use this SFR to express how the TOE is made aware
				of any environmental failures and how it responds to these.
			</note>
			<aactivity>
				<TSS>
					The evaluator shall examine the TSS to determine that the TOE’s
					implementation of the fail secure functionality is documented. The evaluator
					shall first examine the TSS section to ensure that all failure modes specified in
					the ST are described. The evaluator shall then ensure that the TOE will attain a
					secure state after inserting each specified failure mode type. The evaluator
					shall review the TSS to determine that the definition of secure state is defined
					and is suitable to ensure protection of key material and user data.
				</TSS>
				<Guidance>
					The evaluator shall examine the operational guidance to ensure it describes
					the actions that might occur and provides remedial instructions for the
					administrator.
				</Guidance>
				<Tests>
					The evaluator shall perform the following test:
					<testlist>
						<test>
							The evaluator shall attempt to cause each documented failure
							to occur and shall verify that the actions taken by the TSF are those
							specified in FPT_FLS.1.1. For those failures that the evaluator cannot
							cause, the evaluator shall provide a justification to explain why the
							failure could not be induced. 
						</test>
					</testlist>
					<h:i>Equivalency</h:i><h:br/><h:br/>
					Testing of the TOE may be performed on a subset of the platforms listed in the
					TOE’s ST. Justification must be provided for those platforms that were excluded
					from testing.
				</Tests>
			</aactivity>
		</f-element>	
		<audit-event>
			<audit-event-descr>Invocation of failures under the requirement</audit-event-descr>
			<audit-event-info>Indication that the TSF has failed with the type of failure that occurred</audit-event-info>
		</audit-event>
	</f-component>				
					
	<!--               -->     
        <!-- FPT_KST_EXT.1 -->
	<!--               -->     
        <f-component cc-id="fpt_kst_ext.1" name="No Plaintext Key Export">
		<f-element>
			<title>
				The TSF and 
				<selectables>
					<selectable>Operational Environment</selectable>
					<selectable>no other component</selectable>
				</selectables> shall prevent the plaintext export of
				<assignable>list of all keys used by the TSF</assignable>.
			</title>
			<note role="application">
				Keys include all TOE secret and private keys, as well as any user secret and private
				keys. The intent of this optional requirement is to prevent the keys from being
				exported during an archive event authorized by the TOE user or administrator.<h:br/><h:br/>
				If TSF keys are stored in the OE, the TSF requires support of the OE to meet this
				requirement. The Operational Environment shall be selected and the specific
				components used shall be described in the TSS.
			</note>
			<aactivity>
				<TSS>
					The evaluator shall examine the TSS to ensure it lists all keys that are not
					exported from the TOE for all platforms listed in the TOE’s ST.
				</TSS>
				<Guidance>
					There are no AGD assurance activities for this requirement beyond what is
					necessary to satisfy the requirements in [CEM].
				</Guidance>
				<Tests>
					The evaluator shall perform the following test:
					<testlist>
						<test>
							The evaluator shall access the export interface of the TOE and
							shall verify that the interface prevents the export of all keys listed in
							the TSS.
						</test>
					</testlist>
					<h:i>Equivalency</h:i><h:br/><h:br/>
					Testing of the TOE may be performed on a subset of the platforms listed in the
					TOE’s ST. Justification must be provided for those platforms that were excluded
					from testing.
				</Tests>
			</aactivity>
		</f-element>
		<audit-event/>
	</f-component>	

	<!--               -->     
        <!-- FPT_KST_EXT.2 -->
	<!--               -->     
    <f-component cc-id="fpt_kst_ext.2" name="Key Protection">
		<f-element>
			<title>
				The TSF and 
				<selectables>
					<selectable>Operational Environment</selectable>
					<selectable>no other components</selectable>
				</selectables>
				shall prevent unauthorized use of all TSF private and secret keys.
			</title>
			<note role="application">
				The intent of this requirement is to protect TSF private and secret keys from both
				unauthorized users and unprivileged processes. Users should not be able to access
				the keys through “normal” interfaces.
			</note>
			<aactivity>
				<TSS>
					The evaluator shall examine the TSS to ensure it describes how unauthorized
					use of TSF private and secret keys is prevented for both users and processes.
				</TSS>
				<Guidance>
					The evaluator shall examine the AGD guidance to ensure it contains
					instructions for configuring the TOE or Operational Environment to prevent
					unauthorized access to TSF secret and private keys by users or processes.
				</Guidance>
				<Tests>
					The evaluator shall perform the following test:
					<testlist>
						<test>
							The evaluator shall assume each of the non-Administrator
							roles supported by the TOE and shall attempt to use the available
							TOE interface to access the keys. The evaluator shall verify that
							these attempts fail.
						</test>
					</testlist>
					<h:i>Equivalency</h:i><h:br/><h:br/>
					Testing of the TOE may be performed on a subset of the platforms listed in the
					TOE’s ST. Justification must be provided for those platforms that were excluded
					from testing.
				</Tests>
			</aactivity>
		</f-element>
		<audit-event>
			<audit-event-descr>All unauthorized attempts to use the TOE secret abnd private keys.</audit-event-descr>
			<audit-event-info>Identifier of user or process that attempted access.</audit-event-info>
		</audit-event>
	</f-component>

	<!--               -->     
    <!-- FPT_NPE_EXT.1 -->
	<!--               -->     
    <f-component cc-id="fpt_npe_ext.1" name="NPE Contraints" status="optional">
		<f-element>
			<title>
				The TSF shall enforce an Administrator-configurable ruleset that specifies
				authorizations to submit NPE certificate requests. 
			</title>
			<note role="application">
				The rulesets specify when approval by a CA, RA, and/or AOR is required and limits
				the authorizations of RAs or specific Authorized Organizational Representatives
				(AORs), to approve NPE certificates associated to a particular organization.
			</note>
		</f-element>
		<f-element>
			<title>
				The TSF shall require the CA Operations Staff to register any RA, and shall require
				a CA Operations Staff or authorized RA to register any AORs, and associate each
				AOR with an organization or set of devices prior to that AOR making requests on
				behalf of an assigned organization or devices. 
			</title>
			<note role="application">
				Registration authorities may be restricted in the types of certificates they are
				authorized to request, or the subjects asserted in those requests, but typically
				have wide authority to request certificates. AORs, on the other hand, are
				restricted to NPE certificate types, and are further restricted to request certificates
				for a small number of devices owned by their affiliated organization. Similar to
				subscriber self-service requests, an AOR’s request authority is provided only for
				those certificates associated to devices the particular AOR is authorized to
				manage.
			</note>
			<aactivity>
				<TSS>
					The evaluator shall examine the TSS to ensure it describes the AOR constraint
					mechanism, including the ruleset and its enforcement.
				</TSS>
				<Guidance>
					The evaluator shall examine the operational guidance to verify that it describes
					how to configure the ruleset. The evaluator shall ensure that the operational
					guidance includes instructions on how the RAs and CA Operations staff register
					the AORs and associate the AORs with particular organizations. The evaluator
					shall also examine the operational guidance to ensure it also describes how
					AORs, RAs or CA Operations Staff perform certificate management on behalf
					of the organization for which they are registered.
				</Guidance>
				<Tests>
					The evaluator shall perform the following tests:
					<testlist>
						<test>
							The evaluator shall assume the Administrator role and
							configure the ruleset. The evaluator shall then assume other roles and
							verify that no other roles can modify the ruleset.
						</test>
						<test>
							The evaluator shall configure the ruleset that restricts an AOR
							to a particular organization. The evaluator shall assume a CA
							Operations Staff or RA role and register an AOR with an organization,
							authorizing the AOR to perform specific operations on that 
							organization’s behalf. The evaluator shall then verify that the AOR can
							perform each authorized operation on behalf of the organization.
						</test>
						<test>
							The evaluator shall configure the ruleset that restricts an AOR
							to a particular organization. The evaluator shall assume a CA
							Operations Staff or RA role and register an AOR with an organization,
							authorizing the AOR to perform specific operations on that
							organization’s behalf. The evaluator shall verify that the AOR cannot
							perform any operations on behalf of organizations for which it is not
							registered. The evaluator shall also verify that the AOR cannot perform
							unauthorized operations on behalf of its assigned organization.
						</test>
					</testlist>
					<h:i>Equivalency</h:i><h:br/><h:br/>
					Testing of the TOE may be performed on a subset of the platforms listed in the
					TOE’s ST. Justification must be provided for those platforms that were excluded
					from testing.
				</Tests>
			</aactivity>
		</f-element>
		<audit-event>
			<audit-event-descr>All changes to NPE rule sets and NPE.</audit-event-descr>
			<audit-event-info>The changes made to the NPE rule sets and associations</audit-event-info>
		</audit-event>
	</f-component>

	<!--               -->     
        <!-- FPT_RCV.1 -->
	<!--               -->     
        <f-component cc-id="fpt_rcv.1" name="Manual Trusted Recovery">
		<f-element>
			<title>
				After 
				<assignable>list of failures/service discontinuities</assignable>
				the TSF shall enter a maintenance mode where the ability to return to a secure state
				is provided.
			</title>
			<note role="application">
				This requirement ensures that the TSF can determine that the TOE is started up
				without protection compromise and can recover without protection compromise
				after discontinuity of operations. Anticipated failures include actions that result in
				a system crash, media failures, or discontinuity of operations caused by erroneous 
				administrative action or lack of erroneous administrative action. The data that
				needs to be restored includes the TSF keys needed for signature, the Trust Anchor
				Database, keys needed for management of certificates, all signed certificates, and
				any certificate status information.
			</note>
			<aactivity>
				<TSS>
					The evaluator shall examine the TSS to determine that it describes how the TOE
					enters a maintenance mode after a failure and the possible actions that can
					take place while in that mode. 
				</TSS>
				<Guidance>
					The evaluator shall examine the AGD guidance to ensure it contains
					instructions for restoring the TOE to a secure state when it enters the
					maintenance mode, including the steps necessary to perform while in this
					state.
				</Guidance>
				<Tests>
					The evaluator shall perform the following test:
					<testlist>
						<test>
							The evaluator shall attempt to cause each documented
							failure to occur and shall verify that the result of this failure is that
							the TSF enters a maintenance mode. The evaluator shall also verify
							that the maintenance mode can be exited and the TSF can be
							restored to a secure state. This testing may be performed in
							conjunction with FPT_FLS.1.
						</test>
					</testlist>
					<h:i>Equivalency</h:i><h:br/><h:br/>
					Testing of the TOE may be performed on a subset of the platforms listed in the
					TOE’s ST. Justification must be provided for those platforms that were excluded
					from testing.
				</Tests>
			</aactivity>
		</f-element>
		<audit-event>
			<audit-event-descr>The fact that a faiure of service discontinuity occurred.</audit-event-descr>
		</audit-event>
		<audit-event>
			<audit-event-descr>Resumption of the regular operation.</audit-event-descr>
			<audit-event-info>TSF failure types that are available on recovery.</audit-event-info>
		</audit-event>
	</f-component>
					
	<!--               -->     
        <!-- FPT_SKP_EXT.1 -->
	<!--               -->     
        <f-component cc-id="fpt_skp_ext.1" name="Protection of Keys">
		<f-element>
			<title>
				The TSF shall 
				<selectables>
					<selectable>implement</selectable>
					<selectable>interface with the Operational Environment to implement</selectable>
				</selectables>
				the ability to prevent reading of all pre-shared keys, private, and
				secret keys (e.g., KEKs, DEKs, session keys).
			</title>
			<note role="application">
				The intent of the requirement is that an administrator is unable to read or view
				the identified keys through “normal” interfaces. While it is understood that the
				administrator could directly read memory to view these keys, to do so is not a
				trivial task and may require substantial work on the part of an administrator.
				Since the administrator is considered a trusted agent, it is assumed they would
				not endeavor in such an activity.
			</note>
			<aactivity>
				<TSS>
					Regardless of whether this requirement is met by the TOE or the Operational
					Environment, the evaluator shall examine the TSS to determine that it details
					each persistent private and secret key needed to meet the requirements in the
					ST. For each of these items, the evaluator shall confirm that the TSS details how
					any secret or private keys are stored and that they are unable to be viewed
					through an interface designed specifically for that purpose, as outlined in the
					application note. If these values are not stored in plaintext, the TSS shall
					describe how they are protected/obscured.
				</TSS>
				<Guidance>
					The evaluator shall examine the AGD guidance to ensure it contains any
					necessary instructions for configuring the TOE or Operational Environment to
					support this requirement.
				</Guidance>
				<Tests>
					The evaluator shall perform the following test:
					<testlist>
						<test>
							The evaluator shall assume each of the non-Administrator
							roles supported by the TOE and shall attempt to use the available
							TOE interface to read the keys specified by the TOE. The evaluator
							shall verify that these attempts fail.
						</test>
					</testlist>
					<h:i>Equivalency</h:i><h:br/><h:br/>
					Testing of the TOE may be performed on a subset of the platforms listed in the
					TOE’s ST. Justification must be provided for those platforms that were excluded
					from testing.
				</Tests>
			</aactivity>
		</f-element>
		<audit-event/>
	</f-component>
	
	<!--               -->     
    <!-- FPT_SKY_EXT.1 -->
	<!--               -->     
    <f-component cc-id="fpt_sky_ext.1" name="Split Knowledge Procedures" status="optional">
		<f-element>
			<title>
				The TSF shall 
				<selectables>
					<selectable>support</selectable>
					<selectable>interface with the operational environment to support</selectable>
				</selectables>
				split knowledge procedures to enforce two-party control for the export of CA signing keys and 
				<selectables>
					<selectable>no other data</selectable>
					<selectable>user private keys</selectable>
					<selectable><assignable>critical data or keys</assignable></selectable>
				</selectables>
				necessary to resume CA functionality after TSF failure using
				<selectables>
					<selectable>key sharing mechanisms in accordance with FCS_CKM_EXT.1(3), 
					FCS_CKM_EXT.1(4), FCS_CKM_EXT.6, and FPT_SKY_EXT.2</selectable>
					<selectable><assignable>other mechanism</assignable></selectable>
				</selectables>.
			</title>
			<note role="application">
				The intent of this requirement is to limit access to critical keys that are necessary
				to maintain operations after a failure.<h:br/><h:br/>
				Key sharing mechanisms are also referred to as secret sharing mechanisms, or
				threshold schemes and are commonly used by hardware security modules to clone
				keys between devices.<h:br/><h:br/>
				The ST author includes this SFR in the ST when the TOE is used to enforce split
				knowledge procedures, either directly or via interfaces with the OE. If enforcement
				of split knowledge procedures is performed entirely by the OE, then this SFR is not
				included in the ST and OE.KEY_ARCHIVAL is included in the ST.
			</note>
			<aactivity>
				<TSS>
					If the TSF implements a key sharing mechanism, this SFR is satisfied through
					the referenced SFRs in Appendices B.3 and B.8 of the PP. FCS_CKM_EXT.1(3)
					specifies how the key shares generated in accordance with FCS_CKM_EXT.1(4)
					are used to produce a KEK to protect the keys listed in this requirement. The
					protection of those keys with the KEK is done by mechanism required in 
					FCS_CKM_EXT.6. FPT_SKY_EXT.2 specifies access control for the key shares
					themselves.<h:br/><h:br/>
					If the TSF interfaces with a cryptographic module in the Operational
					Environment to implement a key sharing mechanism, the evaluator shall
					examine the TSS to ensure that the interface to the OE, and cryptographic
					provider for the key sharing mechanism is described.<h:br/><h:br/>
					If the TSF implements another split knowledge procedure, the evaluator shall
					examine the TSS to ensure the procedure is adequately described, and assess
					the procedure to ensure that it is effective in restricting access to the CA signing
					key and all other selected data and keys. The evaluator shall attempt to devise
					tests to validate that the TSF implements the described mechanism. The
					evaluator shall review the AGD to ensure it contains clear instructions to
					privileged users on how to conduct the procedures.<h:br/><h:br/>
					If the TSF interfaces with the OE to implement other split knowledge
					procedures, the evaluator shall examine the TSS to ensure the procedure is
					adequately described, and assess the procedure to ensure that it is effective in
					restricting access to the CA signing key and all other selected data and keys.
					The evaluator shall ensure that the TSS describes the dependence on the OE
					and identifies any cryptographic providers within the OE used to support the
					procedures. The evaluator shall also examine the AGD guidance to ensure it
					contains instructions for configuring the OE to restrict access to the CA signing
					key and all other selected data and keys.
				</TSS>
			</aactivity>
		</f-element>
		<audit-event/>
	</f-component>

	
	<!--               -->     
        <!-- FPT_STM.1 -->
	<!--               -->     
    <f-component cc-id="fpt_stm.1" name="Reliable Time Stamps">
		<f-element>
			<title>
				<refinement>Refinement:</refinement> The TSF shall 
				<selectables>
					<selectable>provide</selectable>
					<selectable>interface with the Operational Environment to provide</selectable>
				</selectables> reliable time stamps. 
			</title>
			<note role="application">
				The TSF is expected to use time data for accuracy in signing and verification
				activities. Depending on the functionality provided by the TOE, it may also use
				time data for accurate generation of audit logs and secure communications that
				have a time component.
			</note>
			<aactivity>
				<TSS>
					The evaluator shall examine the TSS to ensure that it lists each security function
					that makes use of time. The TSS provides a description of how the time is
					maintained and considered reliable in the context of each of the time related
					functions.
				</TSS>
				<Guidance>
					The evaluator shall examine the operational guidance to ensure it instructs the
					administrator how to set the time. If the TOE supports the use of a network
					time protocol (NTP) server, the operational guidance shall describe how a
					communication path is established between the TOE and the NTP server, and
					any configuration of the NTP client on the TOE to support this communication.
				</Guidance>
				<Tests>
					The evaluator shall perform the following tests:
					<testlist>
						<test>
							The evaluator shall use the operational guidance to set the
							time. The evaluator shall then use an available interface to observe
							that the time was set correctly.
						</test>
						<test>
							[conditional] If the TOE supports the use of an NTP server;
							the evaluator shall use the operational guidance to configure the
							NTP client on the TOE, and set up a communication path with the
							NTP server. The evaluator will observe that the NTP server has set
							the time to what is expected. If the TOE supports multiple
							protocols for establishing a connection with the NTP server, the
							evaluator shall perform this test using each supported protocol
							claimed in the operational guidance.
						</test>
					</testlist>
					<h:i>Equivalency</h:i><h:br/><h:br/>
					Testing of the TOE may be performed on a subset of the platforms listed in the
					TOE’s ST. Justification must be provided for those platforms that were excluded
					from testing.
				</Tests>
			</aactivity>
		</f-element>
		<audit-event>
			<audit-event-descr>Changes to the time</audit-event-descr>
			<audit-event-info>The new and old values for the time.</audit-event-info>
		</audit-event>
	</f-component>

	<!--               -->     
    <!-- FPT_TST_EXT.1 -->
	<!--               -->     
    <f-component cc-id="fpt_tst_ext.1" name="TOE Integrity Test" status="optional">
		<f-element>
			<title>
				The TSF shall apply a 
				<selectables>
					<selectable>keyed hash according to FCS_COP.1(4)</selectable>
					<selectable>digital signature algorithm according to FCS_COP.1(2)</selectable>
				</selectables>
				to the TOE software and firmware.
			</title>
		</f-element>
		<f-element>
			<title>
				The 
				<selectables>
					<selectable>TSF</selectable>
					<selectable>Operational Environment</selectable>
				</selectables> 
				shall verify the integrity of the TOE software and firmware 
				<selectables>
					<selectable>at power-up</selectable>
					<selectable>at initialization</selectable>
					<selectable>on-demand by a privileged user</selectable>
				</selectables>.
			</title>
			<note role="application">
				The ST author includes this SFR when the TSF includes a mechanism that can
				perform integrity tests on software/firmware, for instance, if the TSF includes an
				operating system.<h:br/><h:br/>
				The ST author selects “integrity test failure” in FPT_FLS.1 if this component is
				included in the ST.<h:br/><h:br/>
				When FCS_CDP_EXT.1 indicates that FCS_COP.1(4), or FCS_COP.1(2) are
				implemented by the OE, FPT_TST_EXT.1.1 is in accordance with those SFR if the
				TSF interfaces with the OE to invoke the algorithms indicated.
			</note>
			<aactivity>
				<TSS>
					The evaluator shall examine the TSS to ensure it describes the mechanisms that
					will be used to verify the integrity software/firmware and the action(s) taken if
					any of the integrity tests fails.
				</TSS>
				<Guidance>
					The evaluator shall examine the operational guidance to ensure that it includes
					instructions to verify the integrity of the software/firmware. 
				</Guidance>
				<Tests>
					The evaluator shall perform the following tests:
					<testlist>
						<test>
							The evaluator shall modify a TOE binary to verify the
							integrity test fails and the action defined in FPT_TST_EXT.1.2
							occurs. If this test cannot be performed, the evaluator shall provide
							a justification.
						</test>
					</testlist>
					<h:i>Equivalency</h:i><h:br/><h:br/>
					Testing of the TOE may be performed on a subset of the platforms listed in the
					TOE’s ST. Justification must be provided for those platforms that were excluded
					from testing.
				</Tests>
			</aactivity>
		</f-element>
		<audit-event>
			<audit-event-descr>Execution of this set of TSF integrity tests</audit-event-descr>
		</audit-event>
		<audit-event>
			<audit-event-descr>Detected integrity violations</audit-event-descr>
			<audit-event-info>The identity of the object that caused the integrity violation</audit-event-info>
		</audit-event>
	</f-component>
	
	<!--               -->     
    <!-- FPT_TST_EXT.2 -->
	<!--               -->     
    <f-component cc-id="fpt_tst_ext.2" name="Integrity Test" status="optional">
		<f-element>
			<title>
				The TSF shall apply a 
				<selectables>
					<selectable>keyed hash according to FCS_COP.1(4)</selectable>
					<selectable>digital signature algorithm according to FCS_COP.1(2)</selectable>
				</selectables>
				to the 
				<selectables>
					<selectable>Trust Anchor Database element(s)</selectable>
					<selectable>TSF keys used to manage certificates</selectable>
					<selectable>certificate database</selectable>
					<selectable><assignable>other data relevant to TSF security</assignable></selectable>
				</selectables>.
			</title>
		</f-element>
		<f-element>
			<title>
				Integrity shall be verified at 
				<selectables>
					<selectable>power-up</selectable>
					<selectable>initialization</selectable>
					<selectable>on-demand by a privileged user</selectable>
				</selectables>.
			</title>
			<note role="application">
				The ST author includes this SFR when the TSF itself provides integrity protection
				for any of the items listed in the second selection of FPT_TST_EXT.2.1.<h:br/><h:br/>
				The ST author selects “integrity test failure” in FPT_FLS.1 if this component is
				included in the ST.
			</note>
			<aactivity>
				<TSS>
					The evaluator shall examine the TSS to ensure it describes the mechanisms that
					will be used to verify the integrity of the selected data and the action(s) taken
					if any of the integrity tests fails.
				</TSS>
				<Guidance>
					The evaluator shall examine the operational guidance to ensure that it includes
					instructions to verify the integrity of the selected data. 
				</Guidance>
				<Tests>
					The evaluator shall perform the following tests:
					<testlist>
						<test>
							The evaluator shall use the operational guidance
							instructions to verify the integrity of each protected element
							specified in the TSS.
						</test>
						<test>
							The evaluator shall modify an instance of each type of data
							selected in FPT_TST_EXT.2.1 to verify the integrity test fails and the
							action defined in FPT_TST_EXT.2.2 occurs. If this test cannot be
							performed, the evaluator shall provide a justification.
						</test>
					</testlist>
					<h:i>Equivalency</h:i><h:br/><h:br/>
					Testing of the TOE may be performed on a subset of the platforms listed in the
					TOE’s ST. Justification must be provided for those platforms that were excluded
					from testing.
				</Tests>
			</aactivity>
		</f-element>
		<audit-event>
			<audit-event-descr>Execution of this set of TSF integrity tests</audit-event-descr>
		</audit-event>
		<audit-event>
			<audit-event-descr>Detected integrity violations</audit-event-descr>
			<audit-event-info>The identity of the object that caused the integrity violation</audit-event-info>
		</audit-event>		
	</f-component>

				
	<!--               -->     
        <!-- FPT_TUD_EXT.1 -->
	<!--               -->     
    <f-component cc-id="fpt_tud_ext.1" name="Trusted Update">
		<f-element>
			<title>
				The TSF shall
				<selectables>
					<selectable>implement</selectable>
					<selectable>interface with the Operational Environment to implement</selectable>
				</selectables>
				the ability to check for updates and patches to the TOE.
			</title>
		</f-element>
		<f-element>
			<title>
				The TSF shall
				<selectables>
					<selectable>implement</selectable>
					<selectable>interface with the Operational Environment to implement</selectable>
				</selectables>
				the ability to provide Administrators the ability to initiate updates
				to TOE firmware/software.
			</title>
		</f-element>
		<f-element>
			<title>
				The TSF shall
				<selectables>
					<selectable>implement</selectable>
					<selectable>interface with the Operational Environment to implement</selectable>
				</selectables>
				the ability to verify firmware/software updates to the TOE using a
				digital signature prior to installing those updates.
			</title>
		</f-element>
		<f-element>
			<title>
				The TSF shall
				<selectables>
					<selectable>implement</selectable>
					<selectable>interface with the Operational Environment to implement</selectable>
				</selectables>
				 the ability to verify the digital signature whenever the software or
				firmware is externally loaded into the TOE and if verification fails, the TSF shall
				<assignable>action to be taken if the verification fails</assignable>.
			</title>
			<note role="application">
				The digital signature mechanism referenced in the third element is the one
				specified in FCS_COP.1(2).
			</note>
			<aactivity>
				<TSS>
					The evaluator shall verify that the TSS section of the ST describes all TSF
					software update mechanisms for updating the system software. The evaluator
					shall verify that the description includes a digital signature verification of the
					software before installation and that installation fails if the verification fails.
					The evaluator shall verify that all software and firmware involved in updating
					the TSF is described and, if multiple stages and software are indicated, that the
					software/firmware responsible for each stage is indicated and that the stage(s)
					which perform signature verification of the update are identified.<h:br/><h:br/>
					The evaluator shall verify that the TSS describes the method by which the
					digital signature is verified.<h:br/><h:br/>
					The evaluator shall verify that the TSS describes that the public key used to
					verify the signature is either hardware-protected or is validated to chain to a
					public key in the Trust Anchor Database. If hardware-protection is selected, the
					evaluator shall verify that the method of hardware-protection is described and
					that the ST author has justified why the public key may not be modified by
					unauthorized parties.<h:br/><h:br/>
					[conditional] If the ST author indicates that the public key for software update
					digital signature verification, the evaluator shall verify that the update
					mechanism includes a certificate validation according to FIA_X509_EXT.1 and
					a check for the Code Signing purpose in the extendedKeyUsage.
				</TSS>
				<Guidance>
					The evaluator shall examine the operational user to ensure it contains the
					required information regarding TOE version verification and TOE updates as
					specified in AGD_OPE.1.
				</Guidance>
				<Tests>
					The evaluator shall perform the following tests:
					<testlist>
						<test>
							The evaluator shall perform the version verification activity
							to determine the current version of the product. The evaluator
							shall obtain a legitimate update using procedures described in the
							operational guidance and verifies that it is successfully installed on
							the TOE. Then, the evaluator shall perform a subset of other
							assurance activity tests to demonstrate that the update functions
							as expected. After the update, the evaluator shall perform the
							version verification activity again to verify the version correctly
							corresponds to that of the update.
						</test>
						<test>
							The evaluator shall obtain or produce an illegitimate
							update, and shall attempt to install it on the TOE. The evaluator
							shall verify that the TOE rejects the update.
						</test>
						<test>
							The evaluator shall obtain or produce an update with an
							invalid signature, and shall attempt to install it on the TOE. The
							evaluatorshall verify that the TOE rejects the update and performs
							any other actions specified in the TSS.
						</test>
						<test>
							The evaluator shall digitally sign the update with a
							certificate that does not have the Code Signing purpose and verify
							that application installation fails. The evaluator shall repeat the
							test using a valid certificate and a certificate that contains the Code
							Signing purpose and verify that the application installation
							succeeds.
						</test>
						<test>
							The tester shall attempt to install an update without the
							digital signature and shall verify that installation fails. The tester
							shall attempt to install an update with altered digital signature, and
							verify that installation fails.
						</test>
					</testlist>
					<h:i>Equivalency</h:i><h:br/><h:br/>
					Testing of the TOE may be performed on a subset of the platforms listed in the
					TOE’s ST. Justification must be provided for those platforms that were excluded
					from testing.
				</Tests>					
			</aactivity>
		</f-element>
		<audit-event>
			<audit-event-descr>Initiation of update.</audit-event-descr>
			<audit-event-info>Version number</audit-event-info>
		</audit-event>
	</f-component>
	</subsection>
			
 	<!--                             -->
	<!-- Class: FTA: TOE Access  -->
        <!--                             -->
     <subsection title="Class: TOE Access (FTA)" id="fta">

	<!--               -->     
    <!-- FTA_SSL.3 -->
	<!--               -->     
    <f-component cc-id="fta_ssl.3" name="TSF-Initiated Termination" status="optional">
		<f-element>
			<title>
				<refinement>Refinement:</refinement>The TSF shall terminate <refinement> a remote</refinement>
				session after a <assignable><refinement>admnistrator-configurable</refinement> time interval 
				of session activity</assignable>.
			</title>
			<note role="application">
				This requirement is included if the TSF is implementing the mechanism used to
				terminate remote sessions after a defined time period. If this requirement is not
				included in the ST, then OE.SESSION_PROTECTION_REMOTE will be included in the
				ST.
			</note>
			<aactivity>
				<TSS>
					There are no TSS assurance activities for this requirement beyond what is
					necessary to satisfy the requirements in [CEM].
				</TSS>
				<Guidance>
					The evaluator shall examine the operational guidance to ensure it includes
					instructions for configuring the inactivity time period for remote interactive
					sessions.
				</Guidance>
				<Tests>
					The evaluator shall perform the following test:
					<testlist>
						<test>
							The evaluator shall follow the operational guidance to
							configure several different values for the inactivity time period
							referenced in the component. For each period configured, the
							evaluator shall establish a remote interactive session with the TOE. 
							The evaluator shall then observe that the session is terminated
							after the configured time period.
						</test>
					</testlist>
					<h:i>Equivalency</h:i><h:br/><h:br/>
					Testing of the TOE may be performed on a subset of the platforms listed in the
					TOE’s ST. Justification must be provided for those platforms that were excluded
					from testing.
				</Tests>
			</aactivity>
		</f-element>
		<audit-event>
			<audit-event-descr>The termination of a remote session by the session termination mechanism</audit-event-descr>
		</audit-event>
	</f-component>


	<!--               -->     
    <!-- FTA_SSL.4 -->
	<!--               -->     
    <f-component cc-id="fta_ssl.4" name="User-Initiated Termination">
		<f-element>
			<title>
				<refinement>Refinement:</refinement>The TSF shall 
				<refinement><selectables>
					<selectable>implement</selectable>
					<selectable>interface with the Operational Environment to implement</selectable>
					</selectables> the ability to </refinement> allow <refinement>privileged </refinement>
				user-initiated termination of the <refinement>privileged</refinement> user’s own interactive session.
			</title>
			<aactivity>
				<TSS>
					There are no TSS assurance activities for this requirement beyond what is
					necessary to satisfy the requirements in [CEM].
				</TSS>
				<Guidance>
					The evaluator shall examine the operational guidance to ensure it describes
					how to terminate interactive sessions.
				</Guidance>
				<Tests>
					The evaluator shall perform the following tests:
					<testlist>
						<test>
							The evaluator shall initiate an interactive local session with
							the TOE. The evaluator shall then follow the operational guidance
							to terminate the session and observe that the session has been
							terminated.
						</test>
						<test>
							The evaluator shall initiate an interactive remote session
							with the TOE. The evaluator shall then follow the operational
							guidance to terminate the session and observe that the session has
							been terminated.
						</test>
					</testlist>
					<h:i>Equivalency</h:i><h:br/><h:br/>
					Testing of the TOE may be performed on a subset of the platforms listed in the
					TOE’s ST. Justification must be provided for those platforms that were excluded
					from testing.
				</Tests>
			</aactivity>
		</f-element>
		<audit-event>
			<audit-event-descr>The termination of an interactive section.</audit-event-descr>
		</audit-event>
	</f-component>


	<!--               -->     
    <!-- FTA_SSL_EXT.1 -->
	<!--               -->     
    <f-component cc-id="fta_ssl_ext.1" name="TSF-Initiated Session Locking" status="optional">
		<f-element>
			<title>The TSF shall, for local interactive sessions, 
				<selectables linebreak="yes">
					<selectable>lock the session–- disable any activity of the user’s data access/display
					devices other than unlocking the session, and requiring that the privileged user
					reauthenticate to the TSF prior to unlocking the session;</selectable>
					<selectable>terminate the session</selectable>
				</selectables>
				after an Administrator-configured time period of inactivity.
			</title>
			<note role="application">
				This requirement is included if the TSF is implementing the mechanism used to
				terminate or lock local sessions after a defined time period. If this requirement is
				not included in the ST, then OE.SESSION_PROTECTION_LOCAL will be included in
				the ST.
			</note>
			<aactivity>
				<TSS>
					The evaluator shall examine the TSS to ensure it describe the mechanism used
					for locking local interactive sessions, including the resulting behavior.
				</TSS>
				<Guidance>
					The evaluator shall examine the operational guidance to ensure it includes
					instructions for configuring the inactivity time period for local interactive
					sessions.
				</Guidance>
				<Tests>
					The evaluator shall perform the following test:
					<testlist>
						<test>
							The evaluator shall follow the operational guidance to
							configure several different values for the inactivity time period
							referenced in the component. For each period configured, the
							evaluator shall establish a local interactive session with the TOE.
							The evaluator shall then observe that the session is either locked
							or terminated after the configured time period. If locking was
							selected from the component, the evaluator shall ensure that reauthentication 
							is needed when trying to unlock the session.
						</test>
					</testlist>
					<h:i>Equivalency</h:i><h:br/><h:br/>
					Testing of the TOE may be performed on a subset of the platforms listed in the
					TOE’s ST. Justification must be provided for those platforms that were excluded
					from testing.
				</Tests>
			</aactivity>
		</f-element>
		<audit-event>
			<audit-event-descr>Any attempts at unlocking or termination of an interactive session.</audit-event-descr>
		</audit-event>
	</f-component>
						
				

	<!--               -->     
    <!-- FTA_TAB.1 -->
	<!--               -->     
    <f-component cc-id="fta_tab.1" name="Default TOE Access Banners">
		<f-element>
			<title>
				<refinement>Refinement:</refinement> Before establishing a <refinement>privileged</refinement>
				user session the TSF shall display <refinement>an Administrator-configured</refinement>
				advisory <refinement>notice and consent</refinement> warning message
				regarding unauthorized use of the TOE. 
			</title>
			<note role="application">
				This requirement is intended to apply to interactive sessions between a human
				user and a TOE. IT entities establishing connections or programmatic connections
				(e.g., remote procedure calls over a network) are not required to be covered by
				this requirement.
			</note>
			<aactivity>
				<TSS>
					The evaluator shall examine the TSS to ensure that it details each method of
					access (local and remote) available to the administrator (e.g., serial port, SSH,
					HTTPS).
				</TSS>
				<Guidance>
					The evaluator shall examine the operational guidance to ensure it includes
					instructions for how to configure notices and consent warning messages. 
				</Guidance>
				<Tests>
					The evaluator shall perform the following test:
					<testlist>
						<test>
							The evaluator shall follow the operational guidance to
							configure a notice and consent warning message. The evaluator
							shall then, for each method of access specified in the TSS, establish
							a session with the TOE. The evaluator shall verify that the notice
							and consent warning message is displayed in each instance.
						</test>
					</testlist>
					<h:i>Equivalency</h:i><h:br/><h:br/>
					Testing of the TOE may be performed on a subset of the platforms listed in the
					TOE’s ST. Justification must be provided for those platforms that were excluded
					from testing.
				</Tests>
			</aactivity>
		</f-element>
		<audit-event/>
	</f-component>
	</subsection>
			
	<!--                             -->
	<!-- Class: FTP: Trusted Path/Channels  -->
        <!--                             -->
     <subsection title="Class: Trusted Path/Channels (FTP)" id="ftp">

	<!--               -->     
        <!-- FTP_TRP.1 -->
	<!--               -->     
    <f-component cc-id="ftp_trp.1" name="Trusted Path">
		<f-element>
			<title>
				<refinement>Refinement:</refinement> The TSF shall 
				<refinement>use <selectables>
					<selectable>HTTPS</selectable>
					<selectable>IPsec</selectable>
					<selectable>SSH</selectable>
					<selectable>TLS</selectable>
					</selectables> to </refinement>
				provide <refinement>a trusted</refinement> communication path between itself and 
				<refinement>remote subscribers and privileged users</refinement>
				that is logically distinct from other
				communication paths and provides assured identification of its end points and
				protection of the communicated data from [<h:i>modification, disclosure</h:i>].
			</title>
		</f-element>
		<f-element>
			<title>
				<refinement>Refinement:</refinement> The TSF shall permit <refinement>remote subscribers</refinement>
				and privileged users to initiate communication via the trusted path.
			</title>
		</f-element>
		<f-element>
			<title>
				The TSF shall require the use of the trusted path for [<h:i>initial subscriber and
				privileged user authentication and all remote administration actions</h:i>].
			</title>
			<note role="application">
				This requirement ensures that remote subscribers and privileged users initiate all
				communication with the TOE via a trusted path, and that all communications with
				the TOE by remote subscribers and privileged users is performed over this path.
				The data passed in this trusted communication channel are encrypted as defined
				the protocol chosen in the first selection. The ST author chooses the
				mechanism(s) supported by the TOE and ensures the detailed requirements in
				Annex B corresponding to their selection are copied to the ST if not already
				present.
			</note>
			<aactivity>
				<TSS>
					The evaluator shall examine the TSS to determine that the methods of remote
					TOE communication are indicated, along with how those communications are
					protected. The evaluator shall also confirm that all protocols listed in the TSS
					in support of TOE communication are consistent with those specified in the
					requirement, and are included in the requirements in the ST.
				</TSS>
				<Guidance>
					The evaluator shall examine the operational guidance to ensure it contains
					instructions for establishing the remote sessions for each supported method. 
				</Guidance>
				<Tests>
					The evaluator shall perform the following tests:
					<testlist>
						<test>
							The evaluator shall ensure that communications using each
							specified (in the operational guidance) remote method is tested
							during the course of the evaluation, setting up the connections as
							described in the operational guidance and ensuring that
							communication is successful.
						</test>
						<test>
							For each method of remote communication supported, the
							evaluator shall follow the operational guidance to ensure that
							there is no available interface that can be used by a remote user to
							establish a remote session without invoking the trusted path.
						</test>
						<test>
							The evaluator shall ensure, for each method of remote
							communication, the channel data is not sent in plaintext.
						</test>
					</testlist>
					Further assurance activities are associated with the specific protocols.<h:br/><h:br/>
					<h:i>Equivalency</h:i><h:br/><h:br/>
					Testing of the TOE may be performed on a subset of the platforms listed in the
					TOE’s ST. Justification must be provided for those platforms that were excluded
					from testing.
				</Tests>
			</aactivity>
		</f-element>
		<audit-event>
			<audit-event-descr>Initiation of the trusted channel.</audit-event-descr>
			<audit-event-info>Identification of the claimed user identity</audit-event-info>
		</audit-event>
		<audit-event>
			<audit-event-descr>Termination of the trusted channel.</audit-event-descr>
			<audit-event-info>Identification of the claimed user identity</audit-event-info>
		</audit-event>
		<audit-event>
			<audit-event-descr>Failures of the trusted path functions.</audit-event-descr>
			<audit-event-info>Identification of the claimed user identity</audit-event-info>
		</audit-event>
	</f-component>
    </subsection>   
   </section>

<!--  ************************************************  -->
<!--  ************************************************  -->
<!--                SAR                                 -->
<!--  ************************************************  -->
<!--  ************************************************  -->		
		
    <section title="Security Assurance Requirements" id="SARs">

	The Security Objectives for the TOE in Section 4 were constructed to address threats identified in Section
	3. The Security Functional Requirements (SFRs) in Section 5.1 are a formal instantiation of the Security
	Objectives. The PP draws from the CC Security Assurance Requirements (SARs) to frame the extent to
	which the evaluator assesses the documentation applicable for the evaluation and performs independent
	testing.<h:br/><h:br/>
	While this section contains the complete set of SARs from the CC, the Assurance Activities to be performed
	by an evaluator are detailed both in Section 5.1 as well as in this section.<h:br/><h:br/>
	The general model for evaluating TOEs against STs written to conform to this PP is as follows:<h:br/><h:br/>
	After the ST has been approved for evaluation, the Common Criteria Testing Laboratory (CCTL) will obtain
	the TOE, supporting IT environment, and the administrative guides for the TOE. The Assurance Activities
	listed in the ST (which will be refined by the CCTL to be TOE-specific, either within the ST or in a separate
	document) will then be performed by the CCTL. The results of these activities will be documented and
	presented (along with the administrative guidance used) for validation.<h:br/><h:br/>
	For each assurance family, “Developer Notes” are provided on the developer action elements to clarify
	what, if any, additional documentation/activity needs to be provided by the developer. For the
	content/presentation and evaluator activity elements, additional assurance activities are described as a
	whole for the family, rather than for each element. Additionally, the assurance activities described in this
	section are complementary to those specified in Section 5.1.<h:br/><h:br/>
	The TOE security assurance requirements defined in this section identify the management and evaluative
	activities required to address the threats identified in Section 3.1 of this PP.<h:br/><h:br/>   
	
	<subsection title="Class ADV: Development" id="adv">
		The information about the TOE is contained in the guidance documentation available to the end user as
		well as the TSS portion of the ST. The TOE developer must concur with the description of the product that
		is contained in the TSS as it relates to the functional requirements. The Assurance Activities contained in
		Section 5.1 should provide the ST authors with sufficient information to determine the appropriate
		content for the TSS section.
		
        <a-component cc-id="adv_fsp.1" name="Basic Functional Specification (ADV_FSP.1)">
			
	        	<a-element type="D">
              			<title>The developer shall provide a functional specification.</title>
		        </a-element>
			<a-element type="D">
              			<title>The developer shall provide a tracing from the functional specification to the SFRs.</title>
				<note role="application">
					As indicated in the introduction to this section, the
					functional specification comprises the information
					contained in the AGD_OPE and AGD_PRE
					documentation, coupled with the information provided
					in the TSS of the ST. The assurance activities in the
					functional requirements point to evidence that should
					exist in the documentation and TSS section; since these
					are directly associated with the SFRs, the tracing in
					element ADV_FSP.1.2D is implicitly already done and no
					additional documentation is necessary.
				</note>					
	        </a-element>
	  		<a-element type="C">
				<title>The functional specification shall describe the purpose and method of use for
              				each SFR-enforcing and SFR-supporting TSFI.</title>
            </a-element>
            <a-element type="C">
              			<title>The functional specification shall identify all parameters associated with each
              				SFR-enforcing and SFR-supporting TSFI.</title>
	        </a-element>
            <a-element type="C">
              			<title>The functional specification shall provide rationale for the implicit
              				categorization of interfaces as SFR-non-interfering.</title>
            </a-element>
            <a-element type="C">
              			<title>The tracing shall demonstrate that the SFRs trace to TSFIs 
						in the functional specification.</title>
            </a-element>	  
            <a-element type="E">
              			<title>The evaluator shall confirm that the information provided meets all requirements
              				for content and presentation of evidence.</title>
            </a-element>
            <a-element type="E">
              			<title>The evaluator shall determine that the functional specification is an accurate
              				and complete instantiation of the SFRs.</title>
              			<aactivity-sar>
					There are no specific assurance activities associated with these SARs, except
              				ensuring the information is provided. The functional specification documentation is
              				provided to support the evaluation activities described in <secref linkend="SFRs"/>, and
              				other activities described for AGD, ATE, and AVA SARs. The requirements on the content
              				of the functional specification information is implicitly assessed by virtue of the
              				other assurance activities being performed; if the evaluator is unable to perform an
              				activity because there is insufficient interface information, then an adequate
              				functional specification has not been provided.
	      			</aactivity-sar>
			</a-element>
        </a-component>
     </subsection>

	<subsection id="agd" title="Class AGD: Guidance Documentation">
		The guidance documents will be provided with the ST. Guidance must include a description of how the IT
		personnel verifies that the Operational Environment can fulfill its role for the security functionality. The
		documentation should be in an informal style and readable by the IT personnel. Guidance must be
		provided for every operational environment that the product supports as claimed in the ST. This guidance
		includes instructions to successfully install the TSF in that environment; and Instructions to manage the
		security of the TSF as a product and as a component of the larger operational environment. Guidance
		pertaining to particular security functionality is also provided; requirements on such guidance are
		contained in the assurance activities specified with each requirement.
		
		<a-component cc-id="agd_ope.1" name="Operational User Guidance (AGD_OPE.1)">
	    		<a-element type="D">
			      	<title>The developer shall provide operational user guidance.</title>
	      			<note role="application">
				      	Rather than repeat information here, the developer should
					review the assurance activities for this component to
					ascertain the specifics of the guidance that the evaluator
					will be checking for. This will provide the necessary
					information for the preparation of acceptable guidance.
				</note>
            		</a-element>         
            		<a-element type="C">
              			<title>The operational user guidance shall describe, for each
					privileged user role, the user-accessible functions and
					privileges that should be controlled in a secure processing
					environment, including appropriate warnings.</title>
            		</a-element>
			<a-element type="C">
              			<title>The operational user guidance shall describe, for each
					privileged user role, how to use the available interfaces
					provided by the TOE in a secure manner.</title>
            		</a-element>
            		<a-element type="C">
              			<title>The operational user guidance shall describe, for each
					privileged user role, the available functions and interfaces,
					in particular all security parameters under the control of
					the privileged user, indicating secure values as
					appropriate.</title>
            		</a-element>
            		<a-element type="C">
              			<title>The operational user guidance shall, for each privileged
					user role, clearly present each type of security-relevant
					event relative to the privileged user-accessible functions
					that need to be performed, including changing the security
					characteristics of entities under the control of the TSF.</title>
            		</a-element>
            		<a-element type="C">
              			<title>The operational user guidance shall identify all possible
					modes of operation of the TOE (including operation
					following failure or operational error), their consequences,
					and implications for maintaining secure operation.</title>
            		</a-element>
            		<a-element type="C">
              			<title>The operational user guidance shall, for each privileged
					user role, describe the security measures to be followed in
					order to fulfill the security objectives for the operational
					environment as described in the ST.</title>
            		</a-element>
            		<a-element type="C">
              			<title>The operational user guidance shall be clear and reasonable.</title>
            		</a-element>	  
            		<a-element type="E">
              			<title>The evaluator shall confirm that the information provided meets all requirements
              				for content and presentation of evidence. </title>
              			<aactivity-sar>
					Some of the contents of the operational guidance will be verified by the
					assurance activities in Section 5.1 and evaluation of the TOE according to the
					CEM. The following additional information is also required.<h:br/><h:br/>
					The operational guidance shall at a minimum list the processes that comprise
					the TOE in its evaluated configuration.<h:br/><h:br/>
					The operational guidance shall contain instructions for configuring the
					Operational Environment to support the functions of the TOE. These
					instructions shall include configuration of the cryptographic engine associated
					with the evaluated configuration of the TOE as well as configuration of the
					underlying platform. It shall provide a warning to the administrator that use of
					other cryptographic engines or platforms was not evaluated nor tested during
					the CC evaluation of the TOE. The documentation must describe the process
					for installing updates to the TOE. The evaluator shall verify that this process
					includes the following steps:<h:br/><h:br/>
					Instructions for obtaining the update. This should include instructions for
					making the update accessible to the TOE (e.g., placement in a specific
					directory).<h:br/><h:br/>
					Instructions for initiating the update process, as well as discerning whether the
					process was successful or unsuccessful.<h:br/><h:br/>
					The TOE will likely contain security functionality that does not fall in the scope
					of evaluation under this PP. The operational guidance shall make it clear to an
					administrator which security functionality is covered by the evaluation
					activities.
				</aactivity-sar>
 		 	</a-element>
		</a-component>
		
        	<a-component cc-id="agd_pre.1" name="Preparative Procedures (AGD_PRE.1)">
            		<a-element type="D">
              			<title>The developer shall provide the TOE, including its
					preparative procedures.</title>
              			<note role="application">As with the operational guidance, the developer should look to
              				the assurance activities to determine the required content with respect to preparative
              				procedures.</note>
            		</a-element>
            		<a-element type="C">
              			<title>The preparative procedures shall describe all the steps
					necessary for secure acceptance of the delivered TOE in
					accordance with the developer’s delivery procedures.</title>
            		</a-element>
            		<a-element type="C">
              			<title>The preparative procedures shall describe all the steps
					necessary for secure installation of the TOE and for the
					secure preparation of the operational environment in
					accordance with the security objectives for the operational
					environment as described in the ST.</title>
            		</a-element>	  
            		<a-element type="E">
              			<title>The evaluator shall confirm that the information provided meets all requirements
              				for content and presentation of evidence.</title>
            		</a-element>
            		<a-element type="E">
              			<title>The evaluator shall apply the preparative procedures to
					confirm that the TOE can be prepared securely for
					operation.</title>
              		<aactivity-sar>
				As indicated in the introduction above, there are significant expectations with
				respect to the documentation—especially when configuring the operational
				environment to support TOE functional requirements. The evaluator shall
				check to ensure that the guidance provided for the TOE adequately addresses
				all platforms claimed for the TOE in the ST.<h:br/><h:br/>
				The evaluator shall check to ensure that the following guidance is provided:<h:br/><h:br/>
				<h:ul>
					<h:li>As indicated in the introductory material, administration of the TOE is
						performed by one or more administrators that are a subset of the
						group of all users of the TOE. While it must be the case that the overall
						system (TOE plus Operational Environment [Operational 
						Environment]) provide this capability, the responsibility for the
						implementation of the functionality can vary from totally the
						Operational Environment’s responsibility to totally the TOE’s
						responsibility. At a high level, the guidance must contain the
						appropriate instructions so that the Operational Environment is
						configured so that it provides the portion of the capability for which it
						is responsible.</h:li>
					<h:li>Many of the cryptographic requirements in the PP can be met by the
						TOE, the Operational Environment, or a combination of the two. The
						Operational Environment may provide the necessary functionality via
						use of an external cryptographic module such as a HSM. The guidance
						must contain the appropriate instructions so that the TOE or
						Operational Environment is configured to provide the portion of the
						capability for which it is responsible.</h:li>
				</h:ul>
			</aactivity-sar>
            	</a-element>
      	</a-component>	
	</subsection>

	<subsection id="alc" title="Class ALC: Life-cycle Support"> 
	At the assurance level provided for TOEs conformant to this PP, life-cycle support is limited to end-uservisible aspects of the life-cycle, rather than an examination of the TOE vendor’s development and
	configuration management process. This is not meant to diminish the critical role that a developer’s
	practices play in contributing to the overall trustworthiness of a product; rather, it is a reflection on the
	information to be made available for evaluation at this assurance level.
	
        <a-component cc-id="alc_cmc.1" name="Labeling of the TOE (ALC_CMC.1)">
        	<a-element type="D">
              		<title>The developer shall provide the TOE and a reference for the TOE.</title>
            	</a-element>	  
            	<a-element type="C">
              		<title>The TOE shall be labeled with its unique reference.</title>
            	</a-element>
            	<a-element type="E">
              		<title>The evaluator shall confirm that the information provided
				meets all requirements for content and presentation of
				evidence.</title>
              		<aactivity-sar>
				The evaluator shall check the ST to ensure that it contains an identifier (such as
				a product name/version number) that specifically identifies the version that
				meets the requirements of the ST. Further, the evaluator shall check the AGD
				guidance and TOE samples received for testing to ensure that the version
				number is consistent with that in the ST. If the vendor maintains a web site
				advertising the TOE, the evaluator shall examine the information on the web
				site to ensure that the information in the ST is sufficient to distinguish the
				product.
			</aactivity-sar>
            	</a-element>
	</a-component>
	
        <a-component cc-id="alc_cms.1" name="TOE CM Coverage (ALC_CMS.1)">
        	<a-element type="D">
              		<title>The developer shall provide a configuration list for the TOE.</title>
            	</a-element>
            	<a-element type="C">
              		<title>The configuration list shall include the following: the TOE
				itself; and the evaluation evidence required by the SARs.</title>
            	</a-element>
            	<a-element type="C">
              		<title>The configuration list shall uniquely identify the
				configuration items. </title>
            	</a-element>	  
            	<a-element type="E">
              		<title>The evaluator shall confirm that the information provided
				meets all requirements for content and presentation of
				evidence. </title>
              		<aactivity-sar>
				The “evaluation evidence required by the SARs” in this PP is limited to the
				information in the ST coupled with the guidance provided to administrators
				and users under the AGD requirements. By ensuring that the TOE is specifically
				identified and that this identification is consistent in the ST and in the AGD
				guidance (as done in the assurance activity for ALC_CMC.1), the evaluator
				implicitly confirms the information required by this component.
			</aactivity-sar>
          	</a-element>
        </a-component>
	</subsection>
	
	<subsection title="Class ASE: Security Target Evaluation" id="ase">
		As per ASE activities defined in [CEM].
	</subsection>

	<subsection id="ate" title="Class ATE: Tests">
	Testing is specified for functional aspects of the system as well as aspects that take advantage of design
	or implementation weaknesses. The former is done through the ATE_IND family, while the latter is
	through the AVA_VAN family. At the assurance level specified in this PP, testing is based on advertised
	functionality and interfaces with dependency on the availability of design information. One of the primary
	outputs of the evaluation process is the test report as specified in the following requirements.
	<a-component cc-id="ate_ind.1" name="Independent Testing – Conformance (ATE_IND.1)">
        	<a-element type="D">
              		<title>The developer shall provide the TOE for testing.</title>
            	</a-element>	  
            	<a-element type="C">
              		<title>The TOE shall be suitable for testing.</title>
            	</a-element>	  
            	<a-element type="E">
              		<title>The evaluator shall confirm that the information provided
				meets all requirements for content and presentation of
				evidence.</title>
            	</a-element>
            	<a-element type="E">
              		<title>The evaluator shall test a subset of the TSF to confirm that
				the TSF operates as specified.</title>
              		<note role="application"> 
				If the ST author selects SSH, the TSF shall be validated against the
				Extended Package for Secure Shell</note>
              		<aactivity-sar>
				The evaluator shall prepare a test plan and report documenting the testing
				aspects of the system. The test plan covers all of the testing actions contained
				in the CEM and the body of this PP’s Assurance Activities. While it is not
				necessary to have one test case per test listed in an Assurance Activity, the
				evaluator must document in the test plan that each applicable testing
				requirement in the ST is covered.<h:br/><h:br/>
				The test plan identifies the platforms to be tested, and for those platforms not
				included in the test plan but included in the ST, the test plan provides a
				justification for not testing the platforms. This justification must address the
				differences between the tested platforms and the untested platforms, and
				make an argument that the differences do not affect the testing to be
				performed. It is not sufficient to merely assert that the differences have no
				affect; rationale must be provided. If all platforms claimed in the ST are tested,
				then no rationale is necessary.<h:br/><h:br/>
				The test plan describes the composition of each platform to be tested, and any
				setup that is necessary beyond what is contained in the AGD documentation.
				It should be noted that the evaluator is expected to follow the AGD
				documentation for installation and setup of each platform either as part of a
				test or as a standard pre-test condition. This may include special test drivers or
				tools. For each driver or tool, an argument (not just an assertion) should be
				provided that the driver or tool will not adversely affect the performance of
				the functionality by the TOE and its platform. This also includes the
				configuration of the cryptographic engine to be used. The cryptographic
				algorithms implemented by this engine are those specified by this PP and used
				by the cryptographic protocols being evaluated (IPsec, TLS/HTTPS, SSH).<h:br/><h:br/>
				The test plan identifies high-level test objectives as well as the test procedures
				to be followed to achieve those objectives. These procedures include expected
				results. The test report (which could just be an annotated version of the test
				plan) details the activities that took place when the test procedures were
				executed, and includes the actual results of the tests. This shall be a cumulative
				account, so if there was a test run that resulted in a failure; a fix installed; and
				then a successful re-run of the test, the report would show a “fail” and “pass”
				result (and the supporting details), and not just the “pass” result.
			</aactivity-sar>
		</a-element>
	</a-component>
	</subsection>
	
	<subsection id="ava" title="Class AVA: Vulnerability Assessment">
	For the current generation of this Protection Profile, the evaluation lab is expected to survey open sources
	to discover what vulnerabilities have been discovered in these types of products. In most cases, these
	vulnerabilities will require sophistication beyond that of a basic attacker. Until penetration tools are
	created and uniformly distributed to the evaluation labs, the evaluator will not be expected to test for
	these vulnerabilities in the TOE. The labs will be expected to comment on the likelihood of these
	vulnerabilities given the documentation provided by the vendor. This information will be used in the
	development of penetration testing tools and for the development of future Protection Profiles.
        <a-component cc-id="ava_van.1" name="Vulnerability Survey (AVA_VAN.1)">
        	<a-element type="D">
              		<title>The developer shall provide the TOE for testing.</title>
            	</a-element>	  
          	<a-element type="C">
            		<title>The TOE shall be suitable for testing.</title>
          	</a-element>
          	<a-element type="E">
            		<title>The evaluator shall confirm that the information provided
				meets all requirements for content and presentation of
				evidence.</title>
          	</a-element>
          	<a-element type="E">
            		<title>The evaluator shall perform a search of public domain
				sources to identify potential vulnerabilities in the TOE.</title>
          	</a-element>
          	<a-element type="E">
            		<title>The evaluator shall conduct penetration testing, based on
				the identified potential vulnerabilities, to determine that
				the TOE is resistant to attacks performed by an attacker
				possessing Basic attack potential.</title>
            		<aactivity-sar>
				As with ATE_IND, the evaluator shall generate a report to document their
				findings with respect to this requirement. This report could physically be part
				of the overall test report mentioned in ATE_IND, or a separate document. The
				evaluator performs a search of public information to determine the
				vulnerabilities that have been found in certification authority products, the
				communications and enrollment protocols used, as well as those that pertain
				to the particular TOE. The evaluator documents the sources consulted and the
				vulnerabilities found in the report. For each vulnerability found, the evaluator
				either provides a rationale with respect to its non-applicability, or the evaluator
				formulates a test (using the guidelines provided in ATE_IND) to confirm the
				vulnerability, if suitable. Suitability is determined by assessing the attack vector
				needed to take advantage of the vulnerability. For example, if the vulnerability
				can be detected by pressing a key combination on boot-up, a test would be
				suitable at the assurance level of this PP. If exploiting the vulnerability requires 
				expert skills and an electron microscope, for instance, then a test would not be
				suitable and an appropriate justification would be formulated.
			</aactivity-sar>
          	</a-element>  
 	</a-component>
    </subsection>      
  </section>
  </chapter>

	<!-- Appendixes  -->

	<appendix title="Optional Requirements" id="optional"> 
	</appendix>

	<appendix title="Selection-Based Requirements" id="sel-based"> 
	</appendix>


  <!-- Remove this section if an Entropy Assessment is not needed -->
  <appendix title="Entropy Documentation and Assessment" id="entropyappendix"> This appendix
    describes the required supplementary information for the entropy source used by the OS. <h:br/>
    The documentation of the entropy source should be detailed enough that, after reading, the
    evaluator will thoroughly understand the entropy source and why it can be relied upon to provide
    sufficient entropy. This documentation should include multiple detailed sections: design
    description, entropy justification, operating conditions, and health testing. This documentation
    is not required to be part of the TSS. <section id="entropydesign" title="Design Description">
      Documentation shall include the design of the entropy source as a whole, including the
      interaction of all entropy source components. Any information that can be shared regarding the
      design should also be included for any third-party entropy sources that are included in the
      product. <h:br/> The documentation will describe the operation of the entropy source to include,
      how entropy is produced, and how unprocessed (raw) data can be obtained from within the
      entropy source for testing purposes. The documentation should walk through the entropy source
      design indicating where the entropy comes from, where the entropy output is passed next, any
      post-processing of the raw outputs (hash, XOR, etc.), if/where it is stored, and finally, how
      it is output from the entropy source. Any conditions placed on the process (e.g., blocking)
      should also be described in the entropy source design. Diagrams and examples are encouraged.
      <h:br/> This design must also include a description of the content of the security boundary of
      the entropy source and a description of how the security boundary ensures that an adversary
      outside the boundary cannot affect the entropy rate. <h:br/> If implemented, the design
      description shall include a description of how third-party applications can add entropy to the
      RBG. A description of any RBG state saving between power-off and power-on shall be included. </section>
    <section id="entropyjustification" title="Entropy Justification"> There should be a technical
      argument for where the unpredictability in the source comes from and why there is confidence
      in the entropy source delivering sufficient entropy for the uses made of the RBG output (by
      this particular OS). This argument will include a description of the expected min-entropy
      rate (i.e. the minimum entropy (in bits) per bit or byte of source data) and explain that
      sufficient entropy is going into the OS randomizer seeding process. This discussion will be
      part of a justification for why the entropy source can be relied upon to produce bits with
      entropy. <h:br/> The amount of information necessary to justify the expected min-entropy rate
      depends on the type of entropy source included in the product. <h:br/> For developer provided
      entropy sources, in order to justify the min-entropy rate, it is expected that a large number
      of raw source bits will be collected, statistical tests will be performed, and the min-entropy
      rate determined from the statistical tests. While no particular statistical tests are required
      at this time, it is expected that some testing is necessary in order to determine the amount
      of min-entropy in each output. <h:br/> For third-party provided entropy sources, in which the
      OS vendor has limited access to the design and raw entropy data of the source, the
      documentation will indicate an estimate of the amount of min-entropy obtained from this
      third-party source. It is acceptable for the vendor to “assume” an amount of min-entropy,
      however, this assumption must be clearly stated in the documentation provided. In particular,
      the min-entropy estimate must be specified and the assumption included in the ST. <h:br/>
      Regardless of type of entropy source, the justification will also include how the DRBG is
      initialized with the entropy stated in the ST, for example by verifying that the min-entropy
      rate is multiplied by the amount of source data used to seed the DRBG or that the rate of
      entropy expected based on the amount of source data is explicitly stated and compared to the
      statistical rate. If the amount of source data used to seed the DRBG is not clear or the
      calculated rate is not explicitly related to the seed, the documentation will not be
      considered complete. <h:br/> The entropy justification shall not include any data added from any
      third-party application or from any state saving between restarts. </section>
    <section id="entropyoperatingconditions" title="Operating Conditions"> The entropy rate may be
      affected by conditions outside the control of the entropy source itself. For example, voltage,
      frequency, temperature, and elapsed time after power-on are just a few of the factors that may
      affect the operation of the entropy source. As such, documentation will also include the range
      of operating conditions under which the entropy source is expected to generate random data. It
      will clearly describe the measures that have been taken in the system design to ensure the
      entropy source continues to operate under those conditions. Similarly, documentation shall
      describe the conditions under which the entropy source is known to malfunction or become
      inconsistent. Methods used to detect failure or degradation of the source shall be included. </section>
    <section id="entropyhealthtesting" title="Health Testing"> More specifically, all entropy source
      health tests and their rationale will be documented. This includes a description of the health
      tests, the rate and conditions under which each health test is performed (e.g., at start,
      continuously, or on-demand), the expected results for each health test, and rationale
      indicating why each test is believed to be appropriate for detecting one or more failures in
      the entropy source. </section>
  </appendix>

  <appendix title="References" id="biblio">
    <bibliography>
      <entry id="bibCC">
        <tag>CC</tag>
        <description>Common Criteria for Information Technology Security Evaluation - <h:ul>
            <h:li><h:a href="http://www.commoncriteriaportal.org/files/ccfiles/CCPART1V3.1R4.pdf">Part
                1: Introduction and General Model</h:a>, CCMB-2012-09-001, Version 3.1 Revision 4,
              September 2012.</h:li>
            <h:li><h:a href="http://www.commoncriteriaportal.org/files/ccfiles/CCPART2V3.1R4.pdf">Part
                2: Security Functional Components</h:a>, CCMB-2012-09-002, Version 3.1 Revision 4,
              September 2012.</h:li>
            <h:li><h:a href="http://www.commoncriteriaportal.org/files/ccfiles/CCPART3V3.1R4.pdf">Part
                3: Security Assurance Components</h:a>, CCMB-2012-09-003, Version 3.1 Revision 4,
              September 2012.</h:li>
          </h:ul></description>
      </entry>
      <entry id="bibCEM">
        <tag>CEM</tag>
        <description>
          <h:a href="http://www.commoncriteriaportal.org/files/ccfiles/CEMV3.1R4.pdf">Common
            Evaluation Methodology for Information Technology Security - Evaluation Methodology</h:a>,
          CCMB-2012-09-004, Version 3.1, Revision 4, September 2012. </description>
      </entry>
      <entry id="bibCESG">
        <tag>CESG</tag>
        <description>CESG - <h:a
            href="https://www.gov.uk/government/collections/end-user-devices-security-guidance"> End
            User Devices Security and Configuration Guidance</h:a></description>
      </entry>
      <entry id="bibCSA">
        <tag>CSA</tag>
        <description>
          <h:a href="http://csrc.nist.gov/groups/SMA/ispab/documents/csa_87.txt">Computer Security Act
            of 1987</h:a>, H.R. 145, June 11, 1987. </description>
      </entry>
      <entry id="bibOMB">
        <tag>OMB</tag>
        <description>
          <h:a href="http://www.whitehouse.gov/sites/default/files/omb/memoranda/fy2006/m06-19.pdf"
            >Reporting Incidents Involving Personally Identifiable Information and Incorporating the
            Cost for Security in Agency Information Technology Investments</h:a>, OMB M-06-19, July
          12, 2006. </description>
      </entry>
    </bibliography>
  </appendix>

  <appendix title="Acronyms" id="acronyms">
   <acronyms/>
  </appendix>
	
  <implements>
    <feature id="protectSubscriberInfo" title="TOE Responsible for Protecting Subscriber Information">
      <description>If the TOE does not rely on an RA, or if the CA provides a centralized repository for
	      subscriber information, the following SFRs must be claimed in order for the TOE to provide
	      assurance that subscriber data is protected.     </description>
    </feature>
	<feature id="auditReview" title="TOE supports Audit Review">
		<description> If the TOE supports review of audit records, then the following SFRs must be included:
		</description>
	</feature>
	<feature id="auditPreSelect" title="TSF Supports Audit Pre-Select">
		<description>If any audit pre-selection is performed by an auditor through an interface provided
			by the TSF, then the following SFRs muct be included:</description>
	</feature>
	<feature id="auditStorage" title="TSF Supports Storage of Audit Records">
		<description>If any storage of audit records is performed by the TOE, then the following SFRs must be
		included:</description>
	</feature>
  </implements>
	
</PP>

